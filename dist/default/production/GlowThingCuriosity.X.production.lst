

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Sun Jun 04 19:44:48 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1708
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text31,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text32,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text33,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text34,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text35,local,class=CODE,merge=1,delta=2,group=1
    49                           	dabs	1,0x7E,2
    50  0000                     
    51                           ; Version 1.41
    52                           ; Generated 25/01/2017 GMT
    53                           ; 
    54                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC16F1708 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     	;# 
    86  0001                     	;# 
    87  0002                     	;# 
    88  0003                     	;# 
    89  0004                     	;# 
    90  0005                     	;# 
    91  0006                     	;# 
    92  0007                     	;# 
    93  0008                     	;# 
    94  0009                     	;# 
    95  000A                     	;# 
    96  000B                     	;# 
    97  000C                     	;# 
    98  000D                     	;# 
    99  000E                     	;# 
   100  0011                     	;# 
   101  0012                     	;# 
   102  0013                     	;# 
   103  0015                     	;# 
   104  0016                     	;# 
   105  0016                     	;# 
   106  0017                     	;# 
   107  0018                     	;# 
   108  0019                     	;# 
   109  001A                     	;# 
   110  001B                     	;# 
   111  001C                     	;# 
   112  008C                     	;# 
   113  008D                     	;# 
   114  008E                     	;# 
   115  0091                     	;# 
   116  0092                     	;# 
   117  0093                     	;# 
   118  0095                     	;# 
   119  0096                     	;# 
   120  0097                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009A                     	;# 
   124  009B                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  010C                     	;# 
   131  010D                     	;# 
   132  010E                     	;# 
   133  0111                     	;# 
   134  0112                     	;# 
   135  0113                     	;# 
   136  0114                     	;# 
   137  0115                     	;# 
   138  0116                     	;# 
   139  0117                     	;# 
   140  0118                     	;# 
   141  0119                     	;# 
   142  011C                     	;# 
   143  018C                     	;# 
   144  018D                     	;# 
   145  018E                     	;# 
   146  0191                     	;# 
   147  0191                     	;# 
   148  0192                     	;# 
   149  0193                     	;# 
   150  0193                     	;# 
   151  0194                     	;# 
   152  0195                     	;# 
   153  0196                     	;# 
   154  0197                     	;# 
   155  0199                     	;# 
   156  0199                     	;# 
   157  0199                     	;# 
   158  019A                     	;# 
   159  019A                     	;# 
   160  019A                     	;# 
   161  019B                     	;# 
   162  019B                     	;# 
   163  019B                     	;# 
   164  019B                     	;# 
   165  019B                     	;# 
   166  019C                     	;# 
   167  019C                     	;# 
   168  019C                     	;# 
   169  019D                     	;# 
   170  019D                     	;# 
   171  019D                     	;# 
   172  019E                     	;# 
   173  019E                     	;# 
   174  019E                     	;# 
   175  019F                     	;# 
   176  019F                     	;# 
   177  019F                     	;# 
   178  019F                     	;# 
   179  019F                     	;# 
   180  020C                     	;# 
   181  020D                     	;# 
   182  020E                     	;# 
   183  0211                     	;# 
   184  0211                     	;# 
   185  0212                     	;# 
   186  0212                     	;# 
   187  0213                     	;# 
   188  0213                     	;# 
   189  0214                     	;# 
   190  0214                     	;# 
   191  0215                     	;# 
   192  0215                     	;# 
   193  0215                     	;# 
   194  0215                     	;# 
   195  0216                     	;# 
   196  0216                     	;# 
   197  0217                     	;# 
   198  0217                     	;# 
   199  028C                     	;# 
   200  028D                     	;# 
   201  028E                     	;# 
   202  0291                     	;# 
   203  0291                     	;# 
   204  0292                     	;# 
   205  0293                     	;# 
   206  0293                     	;# 
   207  0298                     	;# 
   208  0298                     	;# 
   209  0299                     	;# 
   210  029A                     	;# 
   211  029A                     	;# 
   212  029E                     	;# 
   213  030C                     	;# 
   214  030D                     	;# 
   215  030E                     	;# 
   216  038C                     	;# 
   217  038D                     	;# 
   218  038E                     	;# 
   219  0391                     	;# 
   220  0392                     	;# 
   221  0393                     	;# 
   222  0394                     	;# 
   223  0395                     	;# 
   224  0396                     	;# 
   225  0397                     	;# 
   226  0398                     	;# 
   227  0399                     	;# 
   228  0415                     	;# 
   229  0416                     	;# 
   230  0417                     	;# 
   231  041C                     	;# 
   232  041D                     	;# 
   233  041E                     	;# 
   234  0511                     	;# 
   235  0515                     	;# 
   236  0617                     	;# 
   237  0618                     	;# 
   238  0619                     	;# 
   239  0619                     	;# 
   240  061A                     	;# 
   241  061B                     	;# 
   242  061C                     	;# 
   243  061C                     	;# 
   244  0691                     	;# 
   245  0692                     	;# 
   246  0693                     	;# 
   247  0694                     	;# 
   248  0695                     	;# 
   249  0696                     	;# 
   250  0697                     	;# 
   251  0698                     	;# 
   252  0699                     	;# 
   253  069A                     	;# 
   254  069B                     	;# 
   255  069C                     	;# 
   256  069D                     	;# 
   257  069E                     	;# 
   258  069F                     	;# 
   259  0E0F                     	;# 
   260  0E10                     	;# 
   261  0E11                     	;# 
   262  0E12                     	;# 
   263  0E13                     	;# 
   264  0E14                     	;# 
   265  0E15                     	;# 
   266  0E17                     	;# 
   267  0E20                     	;# 
   268  0E21                     	;# 
   269  0E22                     	;# 
   270  0E24                     	;# 
   271  0E25                     	;# 
   272  0E28                     	;# 
   273  0E29                     	;# 
   274  0E2A                     	;# 
   275  0E2B                     	;# 
   276  0E90                     	;# 
   277  0E91                     	;# 
   278  0E92                     	;# 
   279  0E94                     	;# 
   280  0E95                     	;# 
   281  0E9C                     	;# 
   282  0E9D                     	;# 
   283  0E9E                     	;# 
   284  0E9F                     	;# 
   285  0EA0                     	;# 
   286  0EA1                     	;# 
   287  0EA2                     	;# 
   288  0EA3                     	;# 
   289  0EA4                     	;# 
   290  0EA5                     	;# 
   291  0EA6                     	;# 
   292  0EA7                     	;# 
   293  0F0F                     	;# 
   294  0F10                     	;# 
   295  0F11                     	;# 
   296  0F12                     	;# 
   297  0F13                     	;# 
   298  0F14                     	;# 
   299  0F15                     	;# 
   300  0F16                     	;# 
   301  0F17                     	;# 
   302  0F18                     	;# 
   303  0F19                     	;# 
   304  0F1A                     	;# 
   305  0F1B                     	;# 
   306  0F1C                     	;# 
   307  0F1D                     	;# 
   308  0F1E                     	;# 
   309  0F1F                     	;# 
   310  0F20                     	;# 
   311  0F21                     	;# 
   312  0F22                     	;# 
   313  0F23                     	;# 
   314  0F24                     	;# 
   315  0F25                     	;# 
   316  0F26                     	;# 
   317  0F27                     	;# 
   318  0F28                     	;# 
   319  0F29                     	;# 
   320  0F2A                     	;# 
   321  0F2B                     	;# 
   322  0F2C                     	;# 
   323  0F2D                     	;# 
   324  0FE4                     	;# 
   325  0FE5                     	;# 
   326  0FE6                     	;# 
   327  0FE7                     	;# 
   328  0FE8                     	;# 
   329  0FE9                     	;# 
   330  0FEA                     	;# 
   331  0FEB                     	;# 
   332  0FED                     	;# 
   333  0FEE                     	;# 
   334  0FEF                     	;# 
   335  0000                     	;# 
   336  0001                     	;# 
   337  0002                     	;# 
   338  0003                     	;# 
   339  0004                     	;# 
   340  0005                     	;# 
   341  0006                     	;# 
   342  0007                     	;# 
   343  0008                     	;# 
   344  0009                     	;# 
   345  000A                     	;# 
   346  000B                     	;# 
   347  000C                     	;# 
   348  000D                     	;# 
   349  000E                     	;# 
   350  0011                     	;# 
   351  0012                     	;# 
   352  0013                     	;# 
   353  0015                     	;# 
   354  0016                     	;# 
   355  0016                     	;# 
   356  0017                     	;# 
   357  0018                     	;# 
   358  0019                     	;# 
   359  001A                     	;# 
   360  001B                     	;# 
   361  001C                     	;# 
   362  008C                     	;# 
   363  008D                     	;# 
   364  008E                     	;# 
   365  0091                     	;# 
   366  0092                     	;# 
   367  0093                     	;# 
   368  0095                     	;# 
   369  0096                     	;# 
   370  0097                     	;# 
   371  0098                     	;# 
   372  0099                     	;# 
   373  009A                     	;# 
   374  009B                     	;# 
   375  009B                     	;# 
   376  009C                     	;# 
   377  009D                     	;# 
   378  009E                     	;# 
   379  009F                     	;# 
   380  010C                     	;# 
   381  010D                     	;# 
   382  010E                     	;# 
   383  0111                     	;# 
   384  0112                     	;# 
   385  0113                     	;# 
   386  0114                     	;# 
   387  0115                     	;# 
   388  0116                     	;# 
   389  0117                     	;# 
   390  0118                     	;# 
   391  0119                     	;# 
   392  011C                     	;# 
   393  018C                     	;# 
   394  018D                     	;# 
   395  018E                     	;# 
   396  0191                     	;# 
   397  0191                     	;# 
   398  0192                     	;# 
   399  0193                     	;# 
   400  0193                     	;# 
   401  0194                     	;# 
   402  0195                     	;# 
   403  0196                     	;# 
   404  0197                     	;# 
   405  0199                     	;# 
   406  0199                     	;# 
   407  0199                     	;# 
   408  019A                     	;# 
   409  019A                     	;# 
   410  019A                     	;# 
   411  019B                     	;# 
   412  019B                     	;# 
   413  019B                     	;# 
   414  019B                     	;# 
   415  019B                     	;# 
   416  019C                     	;# 
   417  019C                     	;# 
   418  019C                     	;# 
   419  019D                     	;# 
   420  019D                     	;# 
   421  019D                     	;# 
   422  019E                     	;# 
   423  019E                     	;# 
   424  019E                     	;# 
   425  019F                     	;# 
   426  019F                     	;# 
   427  019F                     	;# 
   428  019F                     	;# 
   429  019F                     	;# 
   430  020C                     	;# 
   431  020D                     	;# 
   432  020E                     	;# 
   433  0211                     	;# 
   434  0211                     	;# 
   435  0212                     	;# 
   436  0212                     	;# 
   437  0213                     	;# 
   438  0213                     	;# 
   439  0214                     	;# 
   440  0214                     	;# 
   441  0215                     	;# 
   442  0215                     	;# 
   443  0215                     	;# 
   444  0215                     	;# 
   445  0216                     	;# 
   446  0216                     	;# 
   447  0217                     	;# 
   448  0217                     	;# 
   449  028C                     	;# 
   450  028D                     	;# 
   451  028E                     	;# 
   452  0291                     	;# 
   453  0291                     	;# 
   454  0292                     	;# 
   455  0293                     	;# 
   456  0293                     	;# 
   457  0298                     	;# 
   458  0298                     	;# 
   459  0299                     	;# 
   460  029A                     	;# 
   461  029A                     	;# 
   462  029E                     	;# 
   463  030C                     	;# 
   464  030D                     	;# 
   465  030E                     	;# 
   466  038C                     	;# 
   467  038D                     	;# 
   468  038E                     	;# 
   469  0391                     	;# 
   470  0392                     	;# 
   471  0393                     	;# 
   472  0394                     	;# 
   473  0395                     	;# 
   474  0396                     	;# 
   475  0397                     	;# 
   476  0398                     	;# 
   477  0399                     	;# 
   478  0415                     	;# 
   479  0416                     	;# 
   480  0417                     	;# 
   481  041C                     	;# 
   482  041D                     	;# 
   483  041E                     	;# 
   484  0511                     	;# 
   485  0515                     	;# 
   486  0617                     	;# 
   487  0618                     	;# 
   488  0619                     	;# 
   489  0619                     	;# 
   490  061A                     	;# 
   491  061B                     	;# 
   492  061C                     	;# 
   493  061C                     	;# 
   494  0691                     	;# 
   495  0692                     	;# 
   496  0693                     	;# 
   497  0694                     	;# 
   498  0695                     	;# 
   499  0696                     	;# 
   500  0697                     	;# 
   501  0698                     	;# 
   502  0699                     	;# 
   503  069A                     	;# 
   504  069B                     	;# 
   505  069C                     	;# 
   506  069D                     	;# 
   507  069E                     	;# 
   508  069F                     	;# 
   509  0E0F                     	;# 
   510  0E10                     	;# 
   511  0E11                     	;# 
   512  0E12                     	;# 
   513  0E13                     	;# 
   514  0E14                     	;# 
   515  0E15                     	;# 
   516  0E17                     	;# 
   517  0E20                     	;# 
   518  0E21                     	;# 
   519  0E22                     	;# 
   520  0E24                     	;# 
   521  0E25                     	;# 
   522  0E28                     	;# 
   523  0E29                     	;# 
   524  0E2A                     	;# 
   525  0E2B                     	;# 
   526  0E90                     	;# 
   527  0E91                     	;# 
   528  0E92                     	;# 
   529  0E94                     	;# 
   530  0E95                     	;# 
   531  0E9C                     	;# 
   532  0E9D                     	;# 
   533  0E9E                     	;# 
   534  0E9F                     	;# 
   535  0EA0                     	;# 
   536  0EA1                     	;# 
   537  0EA2                     	;# 
   538  0EA3                     	;# 
   539  0EA4                     	;# 
   540  0EA5                     	;# 
   541  0EA6                     	;# 
   542  0EA7                     	;# 
   543  0F0F                     	;# 
   544  0F10                     	;# 
   545  0F11                     	;# 
   546  0F12                     	;# 
   547  0F13                     	;# 
   548  0F14                     	;# 
   549  0F15                     	;# 
   550  0F16                     	;# 
   551  0F17                     	;# 
   552  0F18                     	;# 
   553  0F19                     	;# 
   554  0F1A                     	;# 
   555  0F1B                     	;# 
   556  0F1C                     	;# 
   557  0F1D                     	;# 
   558  0F1E                     	;# 
   559  0F1F                     	;# 
   560  0F20                     	;# 
   561  0F21                     	;# 
   562  0F22                     	;# 
   563  0F23                     	;# 
   564  0F24                     	;# 
   565  0F25                     	;# 
   566  0F26                     	;# 
   567  0F27                     	;# 
   568  0F28                     	;# 
   569  0F29                     	;# 
   570  0F2A                     	;# 
   571  0F2B                     	;# 
   572  0F2C                     	;# 
   573  0F2D                     	;# 
   574  0FE4                     	;# 
   575  0FE5                     	;# 
   576  0FE6                     	;# 
   577  0FE7                     	;# 
   578  0FE8                     	;# 
   579  0FE9                     	;# 
   580  0FEA                     	;# 
   581  0FEB                     	;# 
   582  0FED                     	;# 
   583  0FEE                     	;# 
   584  0FEF                     	;# 
   585  0000                     	;# 
   586  0001                     	;# 
   587  0002                     	;# 
   588  0003                     	;# 
   589  0004                     	;# 
   590  0005                     	;# 
   591  0006                     	;# 
   592  0007                     	;# 
   593  0008                     	;# 
   594  0009                     	;# 
   595  000A                     	;# 
   596  000B                     	;# 
   597  000C                     	;# 
   598  000D                     	;# 
   599  000E                     	;# 
   600  0011                     	;# 
   601  0012                     	;# 
   602  0013                     	;# 
   603  0015                     	;# 
   604  0016                     	;# 
   605  0016                     	;# 
   606  0017                     	;# 
   607  0018                     	;# 
   608  0019                     	;# 
   609  001A                     	;# 
   610  001B                     	;# 
   611  001C                     	;# 
   612  008C                     	;# 
   613  008D                     	;# 
   614  008E                     	;# 
   615  0091                     	;# 
   616  0092                     	;# 
   617  0093                     	;# 
   618  0095                     	;# 
   619  0096                     	;# 
   620  0097                     	;# 
   621  0098                     	;# 
   622  0099                     	;# 
   623  009A                     	;# 
   624  009B                     	;# 
   625  009B                     	;# 
   626  009C                     	;# 
   627  009D                     	;# 
   628  009E                     	;# 
   629  009F                     	;# 
   630  010C                     	;# 
   631  010D                     	;# 
   632  010E                     	;# 
   633  0111                     	;# 
   634  0112                     	;# 
   635  0113                     	;# 
   636  0114                     	;# 
   637  0115                     	;# 
   638  0116                     	;# 
   639  0117                     	;# 
   640  0118                     	;# 
   641  0119                     	;# 
   642  011C                     	;# 
   643  018C                     	;# 
   644  018D                     	;# 
   645  018E                     	;# 
   646  0191                     	;# 
   647  0191                     	;# 
   648  0192                     	;# 
   649  0193                     	;# 
   650  0193                     	;# 
   651  0194                     	;# 
   652  0195                     	;# 
   653  0196                     	;# 
   654  0197                     	;# 
   655  0199                     	;# 
   656  0199                     	;# 
   657  0199                     	;# 
   658  019A                     	;# 
   659  019A                     	;# 
   660  019A                     	;# 
   661  019B                     	;# 
   662  019B                     	;# 
   663  019B                     	;# 
   664  019B                     	;# 
   665  019B                     	;# 
   666  019C                     	;# 
   667  019C                     	;# 
   668  019C                     	;# 
   669  019D                     	;# 
   670  019D                     	;# 
   671  019D                     	;# 
   672  019E                     	;# 
   673  019E                     	;# 
   674  019E                     	;# 
   675  019F                     	;# 
   676  019F                     	;# 
   677  019F                     	;# 
   678  019F                     	;# 
   679  019F                     	;# 
   680  020C                     	;# 
   681  020D                     	;# 
   682  020E                     	;# 
   683  0211                     	;# 
   684  0211                     	;# 
   685  0212                     	;# 
   686  0212                     	;# 
   687  0213                     	;# 
   688  0213                     	;# 
   689  0214                     	;# 
   690  0214                     	;# 
   691  0215                     	;# 
   692  0215                     	;# 
   693  0215                     	;# 
   694  0215                     	;# 
   695  0216                     	;# 
   696  0216                     	;# 
   697  0217                     	;# 
   698  0217                     	;# 
   699  028C                     	;# 
   700  028D                     	;# 
   701  028E                     	;# 
   702  0291                     	;# 
   703  0291                     	;# 
   704  0292                     	;# 
   705  0293                     	;# 
   706  0293                     	;# 
   707  0298                     	;# 
   708  0298                     	;# 
   709  0299                     	;# 
   710  029A                     	;# 
   711  029A                     	;# 
   712  029E                     	;# 
   713  030C                     	;# 
   714  030D                     	;# 
   715  030E                     	;# 
   716  038C                     	;# 
   717  038D                     	;# 
   718  038E                     	;# 
   719  0391                     	;# 
   720  0392                     	;# 
   721  0393                     	;# 
   722  0394                     	;# 
   723  0395                     	;# 
   724  0396                     	;# 
   725  0397                     	;# 
   726  0398                     	;# 
   727  0399                     	;# 
   728  0415                     	;# 
   729  0416                     	;# 
   730  0417                     	;# 
   731  041C                     	;# 
   732  041D                     	;# 
   733  041E                     	;# 
   734  0511                     	;# 
   735  0515                     	;# 
   736  0617                     	;# 
   737  0618                     	;# 
   738  0619                     	;# 
   739  0619                     	;# 
   740  061A                     	;# 
   741  061B                     	;# 
   742  061C                     	;# 
   743  061C                     	;# 
   744  0691                     	;# 
   745  0692                     	;# 
   746  0693                     	;# 
   747  0694                     	;# 
   748  0695                     	;# 
   749  0696                     	;# 
   750  0697                     	;# 
   751  0698                     	;# 
   752  0699                     	;# 
   753  069A                     	;# 
   754  069B                     	;# 
   755  069C                     	;# 
   756  069D                     	;# 
   757  069E                     	;# 
   758  069F                     	;# 
   759  0E0F                     	;# 
   760  0E10                     	;# 
   761  0E11                     	;# 
   762  0E12                     	;# 
   763  0E13                     	;# 
   764  0E14                     	;# 
   765  0E15                     	;# 
   766  0E17                     	;# 
   767  0E20                     	;# 
   768  0E21                     	;# 
   769  0E22                     	;# 
   770  0E24                     	;# 
   771  0E25                     	;# 
   772  0E28                     	;# 
   773  0E29                     	;# 
   774  0E2A                     	;# 
   775  0E2B                     	;# 
   776  0E90                     	;# 
   777  0E91                     	;# 
   778  0E92                     	;# 
   779  0E94                     	;# 
   780  0E95                     	;# 
   781  0E9C                     	;# 
   782  0E9D                     	;# 
   783  0E9E                     	;# 
   784  0E9F                     	;# 
   785  0EA0                     	;# 
   786  0EA1                     	;# 
   787  0EA2                     	;# 
   788  0EA3                     	;# 
   789  0EA4                     	;# 
   790  0EA5                     	;# 
   791  0EA6                     	;# 
   792  0EA7                     	;# 
   793  0F0F                     	;# 
   794  0F10                     	;# 
   795  0F11                     	;# 
   796  0F12                     	;# 
   797  0F13                     	;# 
   798  0F14                     	;# 
   799  0F15                     	;# 
   800  0F16                     	;# 
   801  0F17                     	;# 
   802  0F18                     	;# 
   803  0F19                     	;# 
   804  0F1A                     	;# 
   805  0F1B                     	;# 
   806  0F1C                     	;# 
   807  0F1D                     	;# 
   808  0F1E                     	;# 
   809  0F1F                     	;# 
   810  0F20                     	;# 
   811  0F21                     	;# 
   812  0F22                     	;# 
   813  0F23                     	;# 
   814  0F24                     	;# 
   815  0F25                     	;# 
   816  0F26                     	;# 
   817  0F27                     	;# 
   818  0F28                     	;# 
   819  0F29                     	;# 
   820  0F2A                     	;# 
   821  0F2B                     	;# 
   822  0F2C                     	;# 
   823  0F2D                     	;# 
   824  0FE4                     	;# 
   825  0FE5                     	;# 
   826  0FE6                     	;# 
   827  0FE7                     	;# 
   828  0FE8                     	;# 
   829  0FE9                     	;# 
   830  0FEA                     	;# 
   831  0FEB                     	;# 
   832  0FED                     	;# 
   833  0FEE                     	;# 
   834  0FEF                     	;# 
   835  0000                     	;# 
   836  0001                     	;# 
   837  0002                     	;# 
   838  0003                     	;# 
   839  0004                     	;# 
   840  0005                     	;# 
   841  0006                     	;# 
   842  0007                     	;# 
   843  0008                     	;# 
   844  0009                     	;# 
   845  000A                     	;# 
   846  000B                     	;# 
   847  000C                     	;# 
   848  000D                     	;# 
   849  000E                     	;# 
   850  0011                     	;# 
   851  0012                     	;# 
   852  0013                     	;# 
   853  0015                     	;# 
   854  0016                     	;# 
   855  0016                     	;# 
   856  0017                     	;# 
   857  0018                     	;# 
   858  0019                     	;# 
   859  001A                     	;# 
   860  001B                     	;# 
   861  001C                     	;# 
   862  008C                     	;# 
   863  008D                     	;# 
   864  008E                     	;# 
   865  0091                     	;# 
   866  0092                     	;# 
   867  0093                     	;# 
   868  0095                     	;# 
   869  0096                     	;# 
   870  0097                     	;# 
   871  0098                     	;# 
   872  0099                     	;# 
   873  009A                     	;# 
   874  009B                     	;# 
   875  009B                     	;# 
   876  009C                     	;# 
   877  009D                     	;# 
   878  009E                     	;# 
   879  009F                     	;# 
   880  010C                     	;# 
   881  010D                     	;# 
   882  010E                     	;# 
   883  0111                     	;# 
   884  0112                     	;# 
   885  0113                     	;# 
   886  0114                     	;# 
   887  0115                     	;# 
   888  0116                     	;# 
   889  0117                     	;# 
   890  0118                     	;# 
   891  0119                     	;# 
   892  011C                     	;# 
   893  018C                     	;# 
   894  018D                     	;# 
   895  018E                     	;# 
   896  0191                     	;# 
   897  0191                     	;# 
   898  0192                     	;# 
   899  0193                     	;# 
   900  0193                     	;# 
   901  0194                     	;# 
   902  0195                     	;# 
   903  0196                     	;# 
   904  0197                     	;# 
   905  0199                     	;# 
   906  0199                     	;# 
   907  0199                     	;# 
   908  019A                     	;# 
   909  019A                     	;# 
   910  019A                     	;# 
   911  019B                     	;# 
   912  019B                     	;# 
   913  019B                     	;# 
   914  019B                     	;# 
   915  019B                     	;# 
   916  019C                     	;# 
   917  019C                     	;# 
   918  019C                     	;# 
   919  019D                     	;# 
   920  019D                     	;# 
   921  019D                     	;# 
   922  019E                     	;# 
   923  019E                     	;# 
   924  019E                     	;# 
   925  019F                     	;# 
   926  019F                     	;# 
   927  019F                     	;# 
   928  019F                     	;# 
   929  019F                     	;# 
   930  020C                     	;# 
   931  020D                     	;# 
   932  020E                     	;# 
   933  0211                     	;# 
   934  0211                     	;# 
   935  0212                     	;# 
   936  0212                     	;# 
   937  0213                     	;# 
   938  0213                     	;# 
   939  0214                     	;# 
   940  0214                     	;# 
   941  0215                     	;# 
   942  0215                     	;# 
   943  0215                     	;# 
   944  0215                     	;# 
   945  0216                     	;# 
   946  0216                     	;# 
   947  0217                     	;# 
   948  0217                     	;# 
   949  028C                     	;# 
   950  028D                     	;# 
   951  028E                     	;# 
   952  0291                     	;# 
   953  0291                     	;# 
   954  0292                     	;# 
   955  0293                     	;# 
   956  0293                     	;# 
   957  0298                     	;# 
   958  0298                     	;# 
   959  0299                     	;# 
   960  029A                     	;# 
   961  029A                     	;# 
   962  029E                     	;# 
   963  030C                     	;# 
   964  030D                     	;# 
   965  030E                     	;# 
   966  038C                     	;# 
   967  038D                     	;# 
   968  038E                     	;# 
   969  0391                     	;# 
   970  0392                     	;# 
   971  0393                     	;# 
   972  0394                     	;# 
   973  0395                     	;# 
   974  0396                     	;# 
   975  0397                     	;# 
   976  0398                     	;# 
   977  0399                     	;# 
   978  0415                     	;# 
   979  0416                     	;# 
   980  0417                     	;# 
   981  041C                     	;# 
   982  041D                     	;# 
   983  041E                     	;# 
   984  0511                     	;# 
   985  0515                     	;# 
   986  0617                     	;# 
   987  0618                     	;# 
   988  0619                     	;# 
   989  0619                     	;# 
   990  061A                     	;# 
   991  061B                     	;# 
   992  061C                     	;# 
   993  061C                     	;# 
   994  0691                     	;# 
   995  0692                     	;# 
   996  0693                     	;# 
   997  0694                     	;# 
   998  0695                     	;# 
   999  0696                     	;# 
  1000  0697                     	;# 
  1001  0698                     	;# 
  1002  0699                     	;# 
  1003  069A                     	;# 
  1004  069B                     	;# 
  1005  069C                     	;# 
  1006  069D                     	;# 
  1007  069E                     	;# 
  1008  069F                     	;# 
  1009  0E0F                     	;# 
  1010  0E10                     	;# 
  1011  0E11                     	;# 
  1012  0E12                     	;# 
  1013  0E13                     	;# 
  1014  0E14                     	;# 
  1015  0E15                     	;# 
  1016  0E17                     	;# 
  1017  0E20                     	;# 
  1018  0E21                     	;# 
  1019  0E22                     	;# 
  1020  0E24                     	;# 
  1021  0E25                     	;# 
  1022  0E28                     	;# 
  1023  0E29                     	;# 
  1024  0E2A                     	;# 
  1025  0E2B                     	;# 
  1026  0E90                     	;# 
  1027  0E91                     	;# 
  1028  0E92                     	;# 
  1029  0E94                     	;# 
  1030  0E95                     	;# 
  1031  0E9C                     	;# 
  1032  0E9D                     	;# 
  1033  0E9E                     	;# 
  1034  0E9F                     	;# 
  1035  0EA0                     	;# 
  1036  0EA1                     	;# 
  1037  0EA2                     	;# 
  1038  0EA3                     	;# 
  1039  0EA4                     	;# 
  1040  0EA5                     	;# 
  1041  0EA6                     	;# 
  1042  0EA7                     	;# 
  1043  0F0F                     	;# 
  1044  0F10                     	;# 
  1045  0F11                     	;# 
  1046  0F12                     	;# 
  1047  0F13                     	;# 
  1048  0F14                     	;# 
  1049  0F15                     	;# 
  1050  0F16                     	;# 
  1051  0F17                     	;# 
  1052  0F18                     	;# 
  1053  0F19                     	;# 
  1054  0F1A                     	;# 
  1055  0F1B                     	;# 
  1056  0F1C                     	;# 
  1057  0F1D                     	;# 
  1058  0F1E                     	;# 
  1059  0F1F                     	;# 
  1060  0F20                     	;# 
  1061  0F21                     	;# 
  1062  0F22                     	;# 
  1063  0F23                     	;# 
  1064  0F24                     	;# 
  1065  0F25                     	;# 
  1066  0F26                     	;# 
  1067  0F27                     	;# 
  1068  0F28                     	;# 
  1069  0F29                     	;# 
  1070  0F2A                     	;# 
  1071  0F2B                     	;# 
  1072  0F2C                     	;# 
  1073  0F2D                     	;# 
  1074  0FE4                     	;# 
  1075  0FE5                     	;# 
  1076  0FE6                     	;# 
  1077  0FE7                     	;# 
  1078  0FE8                     	;# 
  1079  0FE9                     	;# 
  1080  0FEA                     	;# 
  1081  0FEB                     	;# 
  1082  0FED                     	;# 
  1083  0FEE                     	;# 
  1084  0FEF                     	;# 
  1085  0000                     	;# 
  1086  0001                     	;# 
  1087  0002                     	;# 
  1088  0003                     	;# 
  1089  0004                     	;# 
  1090  0005                     	;# 
  1091  0006                     	;# 
  1092  0007                     	;# 
  1093  0008                     	;# 
  1094  0009                     	;# 
  1095  000A                     	;# 
  1096  000B                     	;# 
  1097  000C                     	;# 
  1098  000D                     	;# 
  1099  000E                     	;# 
  1100  0011                     	;# 
  1101  0012                     	;# 
  1102  0013                     	;# 
  1103  0015                     	;# 
  1104  0016                     	;# 
  1105  0016                     	;# 
  1106  0017                     	;# 
  1107  0018                     	;# 
  1108  0019                     	;# 
  1109  001A                     	;# 
  1110  001B                     	;# 
  1111  001C                     	;# 
  1112  008C                     	;# 
  1113  008D                     	;# 
  1114  008E                     	;# 
  1115  0091                     	;# 
  1116  0092                     	;# 
  1117  0093                     	;# 
  1118  0095                     	;# 
  1119  0096                     	;# 
  1120  0097                     	;# 
  1121  0098                     	;# 
  1122  0099                     	;# 
  1123  009A                     	;# 
  1124  009B                     	;# 
  1125  009B                     	;# 
  1126  009C                     	;# 
  1127  009D                     	;# 
  1128  009E                     	;# 
  1129  009F                     	;# 
  1130  010C                     	;# 
  1131  010D                     	;# 
  1132  010E                     	;# 
  1133  0111                     	;# 
  1134  0112                     	;# 
  1135  0113                     	;# 
  1136  0114                     	;# 
  1137  0115                     	;# 
  1138  0116                     	;# 
  1139  0117                     	;# 
  1140  0118                     	;# 
  1141  0119                     	;# 
  1142  011C                     	;# 
  1143  018C                     	;# 
  1144  018D                     	;# 
  1145  018E                     	;# 
  1146  0191                     	;# 
  1147  0191                     	;# 
  1148  0192                     	;# 
  1149  0193                     	;# 
  1150  0193                     	;# 
  1151  0194                     	;# 
  1152  0195                     	;# 
  1153  0196                     	;# 
  1154  0197                     	;# 
  1155  0199                     	;# 
  1156  0199                     	;# 
  1157  0199                     	;# 
  1158  019A                     	;# 
  1159  019A                     	;# 
  1160  019A                     	;# 
  1161  019B                     	;# 
  1162  019B                     	;# 
  1163  019B                     	;# 
  1164  019B                     	;# 
  1165  019B                     	;# 
  1166  019C                     	;# 
  1167  019C                     	;# 
  1168  019C                     	;# 
  1169  019D                     	;# 
  1170  019D                     	;# 
  1171  019D                     	;# 
  1172  019E                     	;# 
  1173  019E                     	;# 
  1174  019E                     	;# 
  1175  019F                     	;# 
  1176  019F                     	;# 
  1177  019F                     	;# 
  1178  019F                     	;# 
  1179  019F                     	;# 
  1180  020C                     	;# 
  1181  020D                     	;# 
  1182  020E                     	;# 
  1183  0211                     	;# 
  1184  0211                     	;# 
  1185  0212                     	;# 
  1186  0212                     	;# 
  1187  0213                     	;# 
  1188  0213                     	;# 
  1189  0214                     	;# 
  1190  0214                     	;# 
  1191  0215                     	;# 
  1192  0215                     	;# 
  1193  0215                     	;# 
  1194  0215                     	;# 
  1195  0216                     	;# 
  1196  0216                     	;# 
  1197  0217                     	;# 
  1198  0217                     	;# 
  1199  028C                     	;# 
  1200  028D                     	;# 
  1201  028E                     	;# 
  1202  0291                     	;# 
  1203  0291                     	;# 
  1204  0292                     	;# 
  1205  0293                     	;# 
  1206  0293                     	;# 
  1207  0298                     	;# 
  1208  0298                     	;# 
  1209  0299                     	;# 
  1210  029A                     	;# 
  1211  029A                     	;# 
  1212  029E                     	;# 
  1213  030C                     	;# 
  1214  030D                     	;# 
  1215  030E                     	;# 
  1216  038C                     	;# 
  1217  038D                     	;# 
  1218  038E                     	;# 
  1219  0391                     	;# 
  1220  0392                     	;# 
  1221  0393                     	;# 
  1222  0394                     	;# 
  1223  0395                     	;# 
  1224  0396                     	;# 
  1225  0397                     	;# 
  1226  0398                     	;# 
  1227  0399                     	;# 
  1228  0415                     	;# 
  1229  0416                     	;# 
  1230  0417                     	;# 
  1231  041C                     	;# 
  1232  041D                     	;# 
  1233  041E                     	;# 
  1234  0511                     	;# 
  1235  0515                     	;# 
  1236  0617                     	;# 
  1237  0618                     	;# 
  1238  0619                     	;# 
  1239  0619                     	;# 
  1240  061A                     	;# 
  1241  061B                     	;# 
  1242  061C                     	;# 
  1243  061C                     	;# 
  1244  0691                     	;# 
  1245  0692                     	;# 
  1246  0693                     	;# 
  1247  0694                     	;# 
  1248  0695                     	;# 
  1249  0696                     	;# 
  1250  0697                     	;# 
  1251  0698                     	;# 
  1252  0699                     	;# 
  1253  069A                     	;# 
  1254  069B                     	;# 
  1255  069C                     	;# 
  1256  069D                     	;# 
  1257  069E                     	;# 
  1258  069F                     	;# 
  1259  0E0F                     	;# 
  1260  0E10                     	;# 
  1261  0E11                     	;# 
  1262  0E12                     	;# 
  1263  0E13                     	;# 
  1264  0E14                     	;# 
  1265  0E15                     	;# 
  1266  0E17                     	;# 
  1267  0E20                     	;# 
  1268  0E21                     	;# 
  1269  0E22                     	;# 
  1270  0E24                     	;# 
  1271  0E25                     	;# 
  1272  0E28                     	;# 
  1273  0E29                     	;# 
  1274  0E2A                     	;# 
  1275  0E2B                     	;# 
  1276  0E90                     	;# 
  1277  0E91                     	;# 
  1278  0E92                     	;# 
  1279  0E94                     	;# 
  1280  0E95                     	;# 
  1281  0E9C                     	;# 
  1282  0E9D                     	;# 
  1283  0E9E                     	;# 
  1284  0E9F                     	;# 
  1285  0EA0                     	;# 
  1286  0EA1                     	;# 
  1287  0EA2                     	;# 
  1288  0EA3                     	;# 
  1289  0EA4                     	;# 
  1290  0EA5                     	;# 
  1291  0EA6                     	;# 
  1292  0EA7                     	;# 
  1293  0F0F                     	;# 
  1294  0F10                     	;# 
  1295  0F11                     	;# 
  1296  0F12                     	;# 
  1297  0F13                     	;# 
  1298  0F14                     	;# 
  1299  0F15                     	;# 
  1300  0F16                     	;# 
  1301  0F17                     	;# 
  1302  0F18                     	;# 
  1303  0F19                     	;# 
  1304  0F1A                     	;# 
  1305  0F1B                     	;# 
  1306  0F1C                     	;# 
  1307  0F1D                     	;# 
  1308  0F1E                     	;# 
  1309  0F1F                     	;# 
  1310  0F20                     	;# 
  1311  0F21                     	;# 
  1312  0F22                     	;# 
  1313  0F23                     	;# 
  1314  0F24                     	;# 
  1315  0F25                     	;# 
  1316  0F26                     	;# 
  1317  0F27                     	;# 
  1318  0F28                     	;# 
  1319  0F29                     	;# 
  1320  0F2A                     	;# 
  1321  0F2B                     	;# 
  1322  0F2C                     	;# 
  1323  0F2D                     	;# 
  1324  0FE4                     	;# 
  1325  0FE5                     	;# 
  1326  0FE6                     	;# 
  1327  0FE7                     	;# 
  1328  0FE8                     	;# 
  1329  0FE9                     	;# 
  1330  0FEA                     	;# 
  1331  0FEB                     	;# 
  1332  0FED                     	;# 
  1333  0FEE                     	;# 
  1334  0FEF                     	;# 
  1335  0000                     	;# 
  1336  0001                     	;# 
  1337  0002                     	;# 
  1338  0003                     	;# 
  1339  0004                     	;# 
  1340  0005                     	;# 
  1341  0006                     	;# 
  1342  0007                     	;# 
  1343  0008                     	;# 
  1344  0009                     	;# 
  1345  000A                     	;# 
  1346  000B                     	;# 
  1347  000C                     	;# 
  1348  000D                     	;# 
  1349  000E                     	;# 
  1350  0011                     	;# 
  1351  0012                     	;# 
  1352  0013                     	;# 
  1353  0015                     	;# 
  1354  0016                     	;# 
  1355  0016                     	;# 
  1356  0017                     	;# 
  1357  0018                     	;# 
  1358  0019                     	;# 
  1359  001A                     	;# 
  1360  001B                     	;# 
  1361  001C                     	;# 
  1362  008C                     	;# 
  1363  008D                     	;# 
  1364  008E                     	;# 
  1365  0091                     	;# 
  1366  0092                     	;# 
  1367  0093                     	;# 
  1368  0095                     	;# 
  1369  0096                     	;# 
  1370  0097                     	;# 
  1371  0098                     	;# 
  1372  0099                     	;# 
  1373  009A                     	;# 
  1374  009B                     	;# 
  1375  009B                     	;# 
  1376  009C                     	;# 
  1377  009D                     	;# 
  1378  009E                     	;# 
  1379  009F                     	;# 
  1380  010C                     	;# 
  1381  010D                     	;# 
  1382  010E                     	;# 
  1383  0111                     	;# 
  1384  0112                     	;# 
  1385  0113                     	;# 
  1386  0114                     	;# 
  1387  0115                     	;# 
  1388  0116                     	;# 
  1389  0117                     	;# 
  1390  0118                     	;# 
  1391  0119                     	;# 
  1392  011C                     	;# 
  1393  018C                     	;# 
  1394  018D                     	;# 
  1395  018E                     	;# 
  1396  0191                     	;# 
  1397  0191                     	;# 
  1398  0192                     	;# 
  1399  0193                     	;# 
  1400  0193                     	;# 
  1401  0194                     	;# 
  1402  0195                     	;# 
  1403  0196                     	;# 
  1404  0197                     	;# 
  1405  0199                     	;# 
  1406  0199                     	;# 
  1407  0199                     	;# 
  1408  019A                     	;# 
  1409  019A                     	;# 
  1410  019A                     	;# 
  1411  019B                     	;# 
  1412  019B                     	;# 
  1413  019B                     	;# 
  1414  019B                     	;# 
  1415  019B                     	;# 
  1416  019C                     	;# 
  1417  019C                     	;# 
  1418  019C                     	;# 
  1419  019D                     	;# 
  1420  019D                     	;# 
  1421  019D                     	;# 
  1422  019E                     	;# 
  1423  019E                     	;# 
  1424  019E                     	;# 
  1425  019F                     	;# 
  1426  019F                     	;# 
  1427  019F                     	;# 
  1428  019F                     	;# 
  1429  019F                     	;# 
  1430  020C                     	;# 
  1431  020D                     	;# 
  1432  020E                     	;# 
  1433  0211                     	;# 
  1434  0211                     	;# 
  1435  0212                     	;# 
  1436  0212                     	;# 
  1437  0213                     	;# 
  1438  0213                     	;# 
  1439  0214                     	;# 
  1440  0214                     	;# 
  1441  0215                     	;# 
  1442  0215                     	;# 
  1443  0215                     	;# 
  1444  0215                     	;# 
  1445  0216                     	;# 
  1446  0216                     	;# 
  1447  0217                     	;# 
  1448  0217                     	;# 
  1449  028C                     	;# 
  1450  028D                     	;# 
  1451  028E                     	;# 
  1452  0291                     	;# 
  1453  0291                     	;# 
  1454  0292                     	;# 
  1455  0293                     	;# 
  1456  0293                     	;# 
  1457  0298                     	;# 
  1458  0298                     	;# 
  1459  0299                     	;# 
  1460  029A                     	;# 
  1461  029A                     	;# 
  1462  029E                     	;# 
  1463  030C                     	;# 
  1464  030D                     	;# 
  1465  030E                     	;# 
  1466  038C                     	;# 
  1467  038D                     	;# 
  1468  038E                     	;# 
  1469  0391                     	;# 
  1470  0392                     	;# 
  1471  0393                     	;# 
  1472  0394                     	;# 
  1473  0395                     	;# 
  1474  0396                     	;# 
  1475  0397                     	;# 
  1476  0398                     	;# 
  1477  0399                     	;# 
  1478  0415                     	;# 
  1479  0416                     	;# 
  1480  0417                     	;# 
  1481  041C                     	;# 
  1482  041D                     	;# 
  1483  041E                     	;# 
  1484  0511                     	;# 
  1485  0515                     	;# 
  1486  0617                     	;# 
  1487  0618                     	;# 
  1488  0619                     	;# 
  1489  0619                     	;# 
  1490  061A                     	;# 
  1491  061B                     	;# 
  1492  061C                     	;# 
  1493  061C                     	;# 
  1494  0691                     	;# 
  1495  0692                     	;# 
  1496  0693                     	;# 
  1497  0694                     	;# 
  1498  0695                     	;# 
  1499  0696                     	;# 
  1500  0697                     	;# 
  1501  0698                     	;# 
  1502  0699                     	;# 
  1503  069A                     	;# 
  1504  069B                     	;# 
  1505  069C                     	;# 
  1506  069D                     	;# 
  1507  069E                     	;# 
  1508  069F                     	;# 
  1509  0E0F                     	;# 
  1510  0E10                     	;# 
  1511  0E11                     	;# 
  1512  0E12                     	;# 
  1513  0E13                     	;# 
  1514  0E14                     	;# 
  1515  0E15                     	;# 
  1516  0E17                     	;# 
  1517  0E20                     	;# 
  1518  0E21                     	;# 
  1519  0E22                     	;# 
  1520  0E24                     	;# 
  1521  0E25                     	;# 
  1522  0E28                     	;# 
  1523  0E29                     	;# 
  1524  0E2A                     	;# 
  1525  0E2B                     	;# 
  1526  0E90                     	;# 
  1527  0E91                     	;# 
  1528  0E92                     	;# 
  1529  0E94                     	;# 
  1530  0E95                     	;# 
  1531  0E9C                     	;# 
  1532  0E9D                     	;# 
  1533  0E9E                     	;# 
  1534  0E9F                     	;# 
  1535  0EA0                     	;# 
  1536  0EA1                     	;# 
  1537  0EA2                     	;# 
  1538  0EA3                     	;# 
  1539  0EA4                     	;# 
  1540  0EA5                     	;# 
  1541  0EA6                     	;# 
  1542  0EA7                     	;# 
  1543  0F0F                     	;# 
  1544  0F10                     	;# 
  1545  0F11                     	;# 
  1546  0F12                     	;# 
  1547  0F13                     	;# 
  1548  0F14                     	;# 
  1549  0F15                     	;# 
  1550  0F16                     	;# 
  1551  0F17                     	;# 
  1552  0F18                     	;# 
  1553  0F19                     	;# 
  1554  0F1A                     	;# 
  1555  0F1B                     	;# 
  1556  0F1C                     	;# 
  1557  0F1D                     	;# 
  1558  0F1E                     	;# 
  1559  0F1F                     	;# 
  1560  0F20                     	;# 
  1561  0F21                     	;# 
  1562  0F22                     	;# 
  1563  0F23                     	;# 
  1564  0F24                     	;# 
  1565  0F25                     	;# 
  1566  0F26                     	;# 
  1567  0F27                     	;# 
  1568  0F28                     	;# 
  1569  0F29                     	;# 
  1570  0F2A                     	;# 
  1571  0F2B                     	;# 
  1572  0F2C                     	;# 
  1573  0F2D                     	;# 
  1574  0FE4                     	;# 
  1575  0FE5                     	;# 
  1576  0FE6                     	;# 
  1577  0FE7                     	;# 
  1578  0FE8                     	;# 
  1579  0FE9                     	;# 
  1580  0FEA                     	;# 
  1581  0FEB                     	;# 
  1582  0FED                     	;# 
  1583  0FEE                     	;# 
  1584  0FEF                     	;# 
  1585  0000                     	;# 
  1586  0001                     	;# 
  1587  0002                     	;# 
  1588  0003                     	;# 
  1589  0004                     	;# 
  1590  0005                     	;# 
  1591  0006                     	;# 
  1592  0007                     	;# 
  1593  0008                     	;# 
  1594  0009                     	;# 
  1595  000A                     	;# 
  1596  000B                     	;# 
  1597  000C                     	;# 
  1598  000D                     	;# 
  1599  000E                     	;# 
  1600  0011                     	;# 
  1601  0012                     	;# 
  1602  0013                     	;# 
  1603  0015                     	;# 
  1604  0016                     	;# 
  1605  0016                     	;# 
  1606  0017                     	;# 
  1607  0018                     	;# 
  1608  0019                     	;# 
  1609  001A                     	;# 
  1610  001B                     	;# 
  1611  001C                     	;# 
  1612  008C                     	;# 
  1613  008D                     	;# 
  1614  008E                     	;# 
  1615  0091                     	;# 
  1616  0092                     	;# 
  1617  0093                     	;# 
  1618  0095                     	;# 
  1619  0096                     	;# 
  1620  0097                     	;# 
  1621  0098                     	;# 
  1622  0099                     	;# 
  1623  009A                     	;# 
  1624  009B                     	;# 
  1625  009B                     	;# 
  1626  009C                     	;# 
  1627  009D                     	;# 
  1628  009E                     	;# 
  1629  009F                     	;# 
  1630  010C                     	;# 
  1631  010D                     	;# 
  1632  010E                     	;# 
  1633  0111                     	;# 
  1634  0112                     	;# 
  1635  0113                     	;# 
  1636  0114                     	;# 
  1637  0115                     	;# 
  1638  0116                     	;# 
  1639  0117                     	;# 
  1640  0118                     	;# 
  1641  0119                     	;# 
  1642  011C                     	;# 
  1643  018C                     	;# 
  1644  018D                     	;# 
  1645  018E                     	;# 
  1646  0191                     	;# 
  1647  0191                     	;# 
  1648  0192                     	;# 
  1649  0193                     	;# 
  1650  0193                     	;# 
  1651  0194                     	;# 
  1652  0195                     	;# 
  1653  0196                     	;# 
  1654  0197                     	;# 
  1655  0199                     	;# 
  1656  0199                     	;# 
  1657  0199                     	;# 
  1658  019A                     	;# 
  1659  019A                     	;# 
  1660  019A                     	;# 
  1661  019B                     	;# 
  1662  019B                     	;# 
  1663  019B                     	;# 
  1664  019B                     	;# 
  1665  019B                     	;# 
  1666  019C                     	;# 
  1667  019C                     	;# 
  1668  019C                     	;# 
  1669  019D                     	;# 
  1670  019D                     	;# 
  1671  019D                     	;# 
  1672  019E                     	;# 
  1673  019E                     	;# 
  1674  019E                     	;# 
  1675  019F                     	;# 
  1676  019F                     	;# 
  1677  019F                     	;# 
  1678  019F                     	;# 
  1679  019F                     	;# 
  1680  020C                     	;# 
  1681  020D                     	;# 
  1682  020E                     	;# 
  1683  0211                     	;# 
  1684  0211                     	;# 
  1685  0212                     	;# 
  1686  0212                     	;# 
  1687  0213                     	;# 
  1688  0213                     	;# 
  1689  0214                     	;# 
  1690  0214                     	;# 
  1691  0215                     	;# 
  1692  0215                     	;# 
  1693  0215                     	;# 
  1694  0215                     	;# 
  1695  0216                     	;# 
  1696  0216                     	;# 
  1697  0217                     	;# 
  1698  0217                     	;# 
  1699  028C                     	;# 
  1700  028D                     	;# 
  1701  028E                     	;# 
  1702  0291                     	;# 
  1703  0291                     	;# 
  1704  0292                     	;# 
  1705  0293                     	;# 
  1706  0293                     	;# 
  1707  0298                     	;# 
  1708  0298                     	;# 
  1709  0299                     	;# 
  1710  029A                     	;# 
  1711  029A                     	;# 
  1712  029E                     	;# 
  1713  030C                     	;# 
  1714  030D                     	;# 
  1715  030E                     	;# 
  1716  038C                     	;# 
  1717  038D                     	;# 
  1718  038E                     	;# 
  1719  0391                     	;# 
  1720  0392                     	;# 
  1721  0393                     	;# 
  1722  0394                     	;# 
  1723  0395                     	;# 
  1724  0396                     	;# 
  1725  0397                     	;# 
  1726  0398                     	;# 
  1727  0399                     	;# 
  1728  0415                     	;# 
  1729  0416                     	;# 
  1730  0417                     	;# 
  1731  041C                     	;# 
  1732  041D                     	;# 
  1733  041E                     	;# 
  1734  0511                     	;# 
  1735  0515                     	;# 
  1736  0617                     	;# 
  1737  0618                     	;# 
  1738  0619                     	;# 
  1739  0619                     	;# 
  1740  061A                     	;# 
  1741  061B                     	;# 
  1742  061C                     	;# 
  1743  061C                     	;# 
  1744  0691                     	;# 
  1745  0692                     	;# 
  1746  0693                     	;# 
  1747  0694                     	;# 
  1748  0695                     	;# 
  1749  0696                     	;# 
  1750  0697                     	;# 
  1751  0698                     	;# 
  1752  0699                     	;# 
  1753  069A                     	;# 
  1754  069B                     	;# 
  1755  069C                     	;# 
  1756  069D                     	;# 
  1757  069E                     	;# 
  1758  069F                     	;# 
  1759  0E0F                     	;# 
  1760  0E10                     	;# 
  1761  0E11                     	;# 
  1762  0E12                     	;# 
  1763  0E13                     	;# 
  1764  0E14                     	;# 
  1765  0E15                     	;# 
  1766  0E17                     	;# 
  1767  0E20                     	;# 
  1768  0E21                     	;# 
  1769  0E22                     	;# 
  1770  0E24                     	;# 
  1771  0E25                     	;# 
  1772  0E28                     	;# 
  1773  0E29                     	;# 
  1774  0E2A                     	;# 
  1775  0E2B                     	;# 
  1776  0E90                     	;# 
  1777  0E91                     	;# 
  1778  0E92                     	;# 
  1779  0E94                     	;# 
  1780  0E95                     	;# 
  1781  0E9C                     	;# 
  1782  0E9D                     	;# 
  1783  0E9E                     	;# 
  1784  0E9F                     	;# 
  1785  0EA0                     	;# 
  1786  0EA1                     	;# 
  1787  0EA2                     	;# 
  1788  0EA3                     	;# 
  1789  0EA4                     	;# 
  1790  0EA5                     	;# 
  1791  0EA6                     	;# 
  1792  0EA7                     	;# 
  1793  0F0F                     	;# 
  1794  0F10                     	;# 
  1795  0F11                     	;# 
  1796  0F12                     	;# 
  1797  0F13                     	;# 
  1798  0F14                     	;# 
  1799  0F15                     	;# 
  1800  0F16                     	;# 
  1801  0F17                     	;# 
  1802  0F18                     	;# 
  1803  0F19                     	;# 
  1804  0F1A                     	;# 
  1805  0F1B                     	;# 
  1806  0F1C                     	;# 
  1807  0F1D                     	;# 
  1808  0F1E                     	;# 
  1809  0F1F                     	;# 
  1810  0F20                     	;# 
  1811  0F21                     	;# 
  1812  0F22                     	;# 
  1813  0F23                     	;# 
  1814  0F24                     	;# 
  1815  0F25                     	;# 
  1816  0F26                     	;# 
  1817  0F27                     	;# 
  1818  0F28                     	;# 
  1819  0F29                     	;# 
  1820  0F2A                     	;# 
  1821  0F2B                     	;# 
  1822  0F2C                     	;# 
  1823  0F2D                     	;# 
  1824  0FE4                     	;# 
  1825  0FE5                     	;# 
  1826  0FE6                     	;# 
  1827  0FE7                     	;# 
  1828  0FE8                     	;# 
  1829  0FE9                     	;# 
  1830  0FEA                     	;# 
  1831  0FEB                     	;# 
  1832  0FED                     	;# 
  1833  0FEE                     	;# 
  1834  0FEF                     	;# 
  1835                           
  1836                           	psect	idataBANK1
  1837  0BAC                     __pidataBANK1:	
  1838                           
  1839                           ;initializer for _randx
  1840  0BAC  3401               	retlw	1
  1841  0BAD  3400               	retlw	0
  1842  0BAE  3400               	retlw	0
  1843  0BAF  3400               	retlw	0
  1844                           
  1845                           	psect	stringtext
  1846  0800                     __pstringtext:	
  1847  0800                     sin@coeff_a:	
  1848  0800  34F4               	retlw	244
  1849  0801  344A               	retlw	74
  1850  0802  3448               	retlw	72
  1851  0803  3495               	retlw	149
  1852  0804  3495               	retlw	149
  1853  0805  34C7               	retlw	199
  1854  0806  34C1               	retlw	193
  1855  0807  34DC               	retlw	220
  1856  0808  3445               	retlw	69
  1857  0809  34DC               	retlw	220
  1858  080A  346D               	retlw	109
  1859  080B  34C3               	retlw	195
  1860  080C  34B3               	retlw	179
  1861  080D  3433               	retlw	51
  1862  080E  3440               	retlw	64
  1863  080F                     __end_ofsin@coeff_a:	
  1864  080F                     sin@coeff_b:	
  1865  080F  3434               	retlw	52
  1866  0810  3401               	retlw	1
  1867  0811  3448               	retlw	72
  1868  0812  349D               	retlw	157
  1869  0813  34B0               	retlw	176
  1870  0814  3445               	retlw	69
  1871  0815  3400               	retlw	0
  1872  0816  34DA               	retlw	218
  1873  0817  3442               	retlw	66
  1874  0818  3400               	retlw	0
  1875  0819  3480               	retlw	128
  1876  081A  343F               	retlw	63
  1877  081B                     __end_ofsin@coeff_b:	
  1878  001C                     _T2CONbits	set	28
  1879  0011                     _PIR1bits	set	17
  1880  001A                     _TMR2	set	26
  1881  001B                     _PR2	set	27
  1882  001C                     _T2CON	set	28
  1883  005F                     _GIE	set	95
  1884  0095                     _OPTION_REGbits	set	149
  1885  008E                     _TRISC	set	142
  1886  008D                     _TRISB	set	141
  1887  008C                     _TRISA	set	140
  1888  0097                     _WDTCON	set	151
  1889  0098                     _OSCTUNE	set	152
  1890  009A                     _OSCSTAT	set	154
  1891  0099                     _OSCCON	set	153
  1892  010E                     _LATC	set	270
  1893  010D                     _LATB	set	269
  1894  010C                     _LATA	set	268
  1895  018C                     _ANSELA	set	396
  1896  018D                     _ANSELB	set	397
  1897  018E                     _ANSELC	set	398
  1898  020E                     _WPUC	set	526
  1899  020C                     _WPUA	set	524
  1900  020D                     _WPUB	set	525
  1901  028E                     _ODCONC	set	654
  1902  028D                     _ODCONB	set	653
  1903  028C                     _ODCONA	set	652
  1904  0299                     _CCPR2H	set	665
  1905  0298                     _CCPR2L	set	664
  1906  029A                     _CCP2CON	set	666
  1907  029E                     _CCPTMRSbits	set	670
  1908  0292                     _CCPR1H	set	658
  1909  0291                     _CCPR1L	set	657
  1910  0293                     _CCP1CON	set	659
  1911  0617                     _PWM3DCL	set	1559
  1912  0618                     _PWM3DCH	set	1560
  1913  0619                     _PWM3CON	set	1561
  1914  0E0F                     _PPSLOCKbits	set	3599
  1915  0E0F                     _PPSLOCK	set	3599
  1916  0E92                     _RA2PPSbits	set	3730
  1917  0E90                     _RA0PPSbits	set	3728
  1918  0E91                     _RA1PPSbits	set	3729
  1919                           
  1920                           ; #config settings
  1921  0000                     
  1922                           	psect	cinit
  1923  07E5                     start_initialization:	
  1924  07E5                     __initialization:	
  1925                           
  1926                           ; Initialize objects allocated to BANK1
  1927  07E5  0021               	movlb	1	; select bank1
  1928  07E6  318B  23AC  3187   	fcall	__pidataBANK1	;fetch initializer
  1929  07E9  00D2               	movwf	__pdataBANK1& (0+127)
  1930  07EA  318B  23AD  3187   	fcall	__pidataBANK1+1	;fetch initializer
  1931  07ED  00D3               	movwf	(__pdataBANK1+1)& (0+127)
  1932  07EE  318B  23AE  3187   	fcall	__pidataBANK1+2	;fetch initializer
  1933  07F1  00D4               	movwf	(__pdataBANK1+2)& (0+127)
  1934  07F2  318B  23AF  3187   	fcall	__pidataBANK1+3	;fetch initializer
  1935  07F5  00D5               	movwf	(__pdataBANK1+3)& (0+127)
  1936                           
  1937                           ; Clear objects allocated to BANK1
  1938  07F6  30A0               	movlw	low __pbssBANK1
  1939  07F7  0084               	movwf	4
  1940  07F8  3000               	movlw	high __pbssBANK1
  1941  07F9  0085               	movwf	5
  1942  07FA  3023               	movlw	35
  1943  07FB  318B  23B6         	fcall	clear_ram0
  1944  07FD                     end_of_initialization:	
  1945                           ;End of C runtime variable initialization code
  1946                           
  1947  07FD                     __end_of__initialization:	
  1948  07FD  0020               	movlb	0
  1949  07FE  3180  2804         	ljmp	_main	;jump to C main() function
  1950                           
  1951                           	psect	bssBANK1
  1952  00A0                     __pbssBANK1:	
  1953  00A0                     _Pwm_3_Step:	
  1954  00A0                     	ds	3
  1955  00A3                     _Pwm_3_Current:	
  1956  00A3                     	ds	3
  1957  00A6                     _Pwm_3_Desired:	
  1958  00A6                     	ds	3
  1959  00A9                     _Pwm_2_Step:	
  1960  00A9                     	ds	3
  1961  00AC                     _Pwm_2_Current:	
  1962  00AC                     	ds	3
  1963  00AF                     _Pwm_2_Desired:	
  1964  00AF                     	ds	3
  1965  00B2                     _Pwm_1_Step:	
  1966  00B2                     	ds	3
  1967  00B5                     _Pwm_1_Current:	
  1968  00B5                     	ds	3
  1969  00B8                     _Pwm_1_Desired:	
  1970  00B8                     	ds	3
  1971  00BB                     _errno:	
  1972  00BB                     	ds	2
  1973  00BD                     _heartbeat:	
  1974  00BD                     	ds	2
  1975  00BF                     _timeSinceLastUpdate:	
  1976  00BF                     	ds	2
  1977  00C1                     _TMR2_InterruptHandler:	
  1978  00C1                     	ds	2
  1979                           
  1980                           	psect	dataBANK1
  1981  00D2                     __pdataBANK1:	
  1982  00D2                     _randx:	
  1983  00D2                     	ds	4
  1984                           
  1985                           	psect	clrtext
  1986  0BB6                     clear_ram0:	
  1987                           ;	Called with FSR0 containing the base address, and
  1988                           ;	WREG with the size to clear
  1989                           
  1990  0BB6  0064               	clrwdt	;clear the watchdog before getting into this loop
  1991  0BB7                     clrloop0:	
  1992  0BB7  0180               	clrf	0	;clear RAM location pointed to by FSR
  1993  0BB8  3101               	addfsr 0,1
  1994  0BB9  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1995  0BBA  2BB7               	goto	clrloop0	;have we reached the end yet?
  1996  0BBB  3400               	retlw	0	;all done for this memory range, return
  1997                           
  1998                           	psect	cstackBANK1
  1999  00C3                     __pcstackBANK1:	
  2000  00C3                     _Heartbeat$764:	
  2001                           
  2002                           ; 3 bytes @ 0x0
  2003  00C3                     	ds	3
  2004  00C6                     _Heartbeat$765:	
  2005                           
  2006                           ; 3 bytes @ 0x3
  2007  00C6                     	ds	3
  2008  00C9                     _Heartbeat$766:	
  2009                           
  2010                           ; 3 bytes @ 0x6
  2011  00C9                     	ds	3
  2012  00CC                     ??_PWM1_LoadDutyValue:	
  2013  00CC                     ??_PWM2_LoadDutyValue:	
  2014                           ; 1 bytes @ 0x9
  2015                           
  2016  00CC                     ??_PWM3_LoadDutyValue:	
  2017                           ; 1 bytes @ 0x9
  2018                           
  2019                           
  2020                           ; 1 bytes @ 0x9
  2021  00CC                     	ds	2
  2022  00CE                     ??_Step:	
  2023                           
  2024                           ; 1 bytes @ 0xB
  2025  00CE                     	ds	1
  2026  00CF                     _Step$768:	
  2027                           
  2028                           ; 3 bytes @ 0xC
  2029  00CF                     	ds	3
  2030                           
  2031                           	psect	cstackCOMMON
  2032  0070                     __pcstackCOMMON:	
  2033  0070                     ?_TMR2_StartTimer:	
  2034  0070                     ??_TMR2_StartTimer:	
  2035                           ; 1 bytes @ 0x0
  2036                           
  2037  0070                     ?_PIN_MANAGER_Initialize:	
  2038                           ; 1 bytes @ 0x0
  2039                           
  2040  0070                     ??_PIN_MANAGER_Initialize:	
  2041                           ; 1 bytes @ 0x0
  2042                           
  2043  0070                     ?_OSCILLATOR_Initialize:	
  2044                           ; 1 bytes @ 0x0
  2045                           
  2046  0070                     ??_OSCILLATOR_Initialize:	
  2047                           ; 1 bytes @ 0x0
  2048                           
  2049  0070                     ?_WDT_Initialize:	
  2050                           ; 1 bytes @ 0x0
  2051                           
  2052  0070                     ??_WDT_Initialize:	
  2053                           ; 1 bytes @ 0x0
  2054                           
  2055  0070                     ?_PWM2_Initialize:	
  2056                           ; 1 bytes @ 0x0
  2057                           
  2058  0070                     ??_PWM2_Initialize:	
  2059                           ; 1 bytes @ 0x0
  2060                           
  2061  0070                     ?_PWM3_Initialize:	
  2062                           ; 1 bytes @ 0x0
  2063                           
  2064  0070                     ??_PWM3_Initialize:	
  2065                           ; 1 bytes @ 0x0
  2066                           
  2067  0070                     ?_srand:	
  2068                           ; 1 bytes @ 0x0
  2069                           
  2070  0070                     ?_PWM1_Initialize:	
  2071                           ; 1 bytes @ 0x0
  2072                           
  2073  0070                     ??_PWM1_Initialize:	
  2074                           ; 1 bytes @ 0x0
  2075                           
  2076  0070                     ?_TMR2_Initialize:	
  2077                           ; 1 bytes @ 0x0
  2078                           
  2079  0070                     ??_TMR2_Initialize:	
  2080                           ; 1 bytes @ 0x0
  2081                           
  2082  0070                     ?_SYSTEM_Initialize:	
  2083                           ; 1 bytes @ 0x0
  2084                           
  2085  0070                     ?_Generate_Desired:	
  2086                           ; 1 bytes @ 0x0
  2087                           
  2088  0070                     ?_Step:	
  2089                           ; 1 bytes @ 0x0
  2090                           
  2091  0070                     ?_Go_To_Desired:	
  2092                           ; 1 bytes @ 0x0
  2093                           
  2094  0070                     ?_main:	
  2095                           ; 1 bytes @ 0x0
  2096                           
  2097  0070                     ?___wmul:	
  2098                           ; 1 bytes @ 0x0
  2099                           
  2100  0070                     ?___ftpack:	
  2101                           ; 2 bytes @ 0x0
  2102                           
  2103  0070                     ?_frexp:	
  2104                           ; 3 bytes @ 0x0
  2105                           
  2106  0070                     ?___ftneg:	
  2107                           ; 3 bytes @ 0x0
  2108                           
  2109  0070                     ?___lmul:	
  2110                           ; 3 bytes @ 0x0
  2111                           
  2112  0070                     ?___fttol:	
  2113                           ; 4 bytes @ 0x0
  2114                           
  2115  0070                     PIN_MANAGER_Initialize@state:	
  2116                           ; 4 bytes @ 0x0
  2117                           
  2118  0070                     ___wmul@multiplier:	
  2119                           ; 1 bytes @ 0x0
  2120                           
  2121  0070                     srand@x:	
  2122                           ; 2 bytes @ 0x0
  2123                           
  2124  0070                     ___ftpack@arg:	
  2125                           ; 2 bytes @ 0x0
  2126                           
  2127  0070                     ___ftneg@f1:	
  2128                           ; 3 bytes @ 0x0
  2129                           
  2130  0070                     ___fttol@f1:	
  2131                           ; 3 bytes @ 0x0
  2132                           
  2133  0070                     frexp@value:	
  2134                           ; 3 bytes @ 0x0
  2135                           
  2136  0070                     ___lmul@multiplier:	
  2137                           ; 3 bytes @ 0x0
  2138                           
  2139                           
  2140                           ; 4 bytes @ 0x0
  2141  0070                     	ds	1
  2142  0071                     ??_SYSTEM_Initialize:	
  2143                           
  2144                           ; 1 bytes @ 0x1
  2145  0071                     	ds	1
  2146  0072                     ??_srand:	
  2147  0072                     ___wmul@multiplicand:	
  2148                           ; 1 bytes @ 0x2
  2149                           
  2150                           
  2151                           ; 2 bytes @ 0x2
  2152  0072                     	ds	1
  2153  0073                     ??___ftneg:	
  2154  0073                     ___ftpack@exp:	
  2155                           ; 1 bytes @ 0x3
  2156                           
  2157  0073                     frexp@eptr:	
  2158                           ; 1 bytes @ 0x3
  2159                           
  2160                           
  2161                           ; 1 bytes @ 0x3
  2162  0073                     	ds	1
  2163  0074                     ??_frexp:	
  2164  0074                     ??___wmul:	
  2165                           ; 1 bytes @ 0x4
  2166                           
  2167  0074                     ??___fttol:	
  2168                           ; 1 bytes @ 0x4
  2169                           
  2170  0074                     ___ftpack@sign:	
  2171                           ; 1 bytes @ 0x4
  2172                           
  2173  0074                     ___wmul@product:	
  2174                           ; 1 bytes @ 0x4
  2175                           
  2176  0074                     ___lmul@multiplicand:	
  2177                           ; 2 bytes @ 0x4
  2178                           
  2179                           
  2180                           ; 4 bytes @ 0x4
  2181  0074                     	ds	1
  2182  0075                     ??___ftpack:	
  2183                           
  2184                           ; 1 bytes @ 0x5
  2185  0075                     	ds	3
  2186  0078                     ??___lmul:	
  2187  0078                     ?___lwtoft:	
  2188                           ; 1 bytes @ 0x8
  2189                           
  2190  0078                     ___fttol@sign1:	
  2191                           ; 3 bytes @ 0x8
  2192                           
  2193  0078                     ___lwtoft@c:	
  2194                           ; 1 bytes @ 0x8
  2195                           
  2196  0078                     ___lmul@product:	
  2197                           ; 2 bytes @ 0x8
  2198                           
  2199                           
  2200                           ; 4 bytes @ 0x8
  2201  0078                     	ds	1
  2202  0079                     ___fttol@lval:	
  2203                           
  2204                           ; 4 bytes @ 0x9
  2205  0079                     	ds	2
  2206  007B                     ??___lwtoft:	
  2207                           
  2208                           ; 1 bytes @ 0xB
  2209  007B                     	ds	1
  2210  007C                     ??_eval_poly:	
  2211  007C                     ?_rand:	
  2212                           ; 1 bytes @ 0xC
  2213                           
  2214                           
  2215                           ; 2 bytes @ 0xC
  2216  007C                     	ds	1
  2217  007D                     ___fttol@exp1:	
  2218                           
  2219                           ; 1 bytes @ 0xD
  2220  007D                     	ds	1
  2221  007E                     ??_Heartbeat:	
  2222  007E                     ??_Generate_Desired:	
  2223                           ; 1 bytes @ 0xE
  2224                           
  2225  007E                     ??_Go_To_Desired:	
  2226                           ; 1 bytes @ 0xE
  2227                           
  2228  007E                     ??_main:	
  2229                           ; 1 bytes @ 0xE
  2230                           
  2231  007E                     ??___ftsub:	
  2232                           ; 1 bytes @ 0xE
  2233                           
  2234                           
  2235                           	psect	cstackBANK0
  2236  0020                     __pcstackBANK0:	
  2237                           ; 1 bytes @ 0xE
  2238                           
  2239  0020                     ?___ftge:	
  2240  0020                     ??_rand:	
  2241                           ; 1 bit 
  2242                           
  2243  0020                     ?___altoft:	
  2244                           ; 1 bytes @ 0x0
  2245                           
  2246  0020                     ?___ftmul:	
  2247                           ; 3 bytes @ 0x0
  2248                           
  2249  0020                     ___ftge@ff1:	
  2250                           ; 3 bytes @ 0x0
  2251                           
  2252  0020                     ___ftmul@f1:	
  2253                           ; 3 bytes @ 0x0
  2254                           
  2255  0020                     ___altoft@c:	
  2256                           ; 3 bytes @ 0x0
  2257                           
  2258                           
  2259                           ; 4 bytes @ 0x0
  2260  0020                     	ds	3
  2261  0023                     ___ftge@ff2:	
  2262  0023                     ___ftmul@f2:	
  2263                           ; 3 bytes @ 0x3
  2264                           
  2265                           
  2266                           ; 3 bytes @ 0x3
  2267  0023                     	ds	1
  2268  0024                     ??___altoft:	
  2269                           
  2270                           ; 1 bytes @ 0x4
  2271  0024                     	ds	1
  2272  0025                     ?___awtoft:	
  2273  0025                     ___awtoft@c:	
  2274                           ; 3 bytes @ 0x5
  2275                           
  2276                           
  2277                           ; 2 bytes @ 0x5
  2278  0025                     	ds	1
  2279  0026                     ??___ftge:	
  2280  0026                     ??___ftmul:	
  2281                           ; 1 bytes @ 0x6
  2282                           
  2283  0026                     ___altoft@exp:	
  2284                           ; 1 bytes @ 0x6
  2285                           
  2286                           
  2287                           ; 1 bytes @ 0x6
  2288  0026                     	ds	1
  2289  0027                     ___altoft@sign:	
  2290                           
  2291                           ; 1 bytes @ 0x7
  2292  0027                     	ds	1
  2293  0028                     ??___awtoft:	
  2294                           
  2295                           ; 1 bytes @ 0x8
  2296  0028                     	ds	2
  2297  002A                     ___awtoft@sign:	
  2298  002A                     ___ftmul@exp:	
  2299                           ; 1 bytes @ 0xA
  2300                           
  2301                           
  2302                           ; 1 bytes @ 0xA
  2303  002A                     	ds	1
  2304  002B                     ___ftmul@f3_as_product:	
  2305                           
  2306                           ; 3 bytes @ 0xB
  2307  002B                     	ds	3
  2308  002E                     ___ftmul@cntr:	
  2309                           
  2310                           ; 1 bytes @ 0xE
  2311  002E                     	ds	1
  2312  002F                     ___ftmul@sign:	
  2313                           
  2314                           ; 1 bytes @ 0xF
  2315  002F                     	ds	1
  2316  0030                     ?___ftadd:	
  2317  0030                     ___ftadd@f1:	
  2318                           ; 3 bytes @ 0x10
  2319                           
  2320                           
  2321                           ; 3 bytes @ 0x10
  2322  0030                     	ds	3
  2323  0033                     ___ftadd@f2:	
  2324                           
  2325                           ; 3 bytes @ 0x13
  2326  0033                     	ds	3
  2327  0036                     ??___ftadd:	
  2328                           
  2329                           ; 1 bytes @ 0x16
  2330  0036                     	ds	4
  2331  003A                     ___ftadd@sign:	
  2332                           
  2333                           ; 1 bytes @ 0x1A
  2334  003A                     	ds	1
  2335  003B                     ___ftadd@exp2:	
  2336                           
  2337                           ; 1 bytes @ 0x1B
  2338  003B                     	ds	1
  2339  003C                     ___ftadd@exp1:	
  2340                           
  2341                           ; 1 bytes @ 0x1C
  2342  003C                     	ds	1
  2343  003D                     ?_floor:	
  2344  003D                     ?_eval_poly:	
  2345                           ; 3 bytes @ 0x1D
  2346                           
  2347  003D                     eval_poly@x:	
  2348                           ; 3 bytes @ 0x1D
  2349                           
  2350  003D                     floor@x:	
  2351                           ; 3 bytes @ 0x1D
  2352                           
  2353                           
  2354                           ; 3 bytes @ 0x1D
  2355  003D                     	ds	3
  2356  0040                     ??_floor:	
  2357  0040                     eval_poly@d:	
  2358                           ; 1 bytes @ 0x20
  2359                           
  2360                           
  2361                           ; 2 bytes @ 0x20
  2362  0040                     	ds	1
  2363  0041                     floor@i:	
  2364                           
  2365                           ; 3 bytes @ 0x21
  2366  0041                     	ds	1
  2367  0042                     eval_poly@n:	
  2368                           
  2369                           ; 2 bytes @ 0x22
  2370  0042                     	ds	2
  2371  0044                     floor@expon:	
  2372  0044                     eval_poly@res:	
  2373                           ; 2 bytes @ 0x24
  2374                           
  2375                           
  2376                           ; 3 bytes @ 0x24
  2377  0044                     	ds	3
  2378  0047                     ?___ftdiv:	
  2379  0047                     ___ftdiv@f2:	
  2380                           ; 3 bytes @ 0x27
  2381                           
  2382                           
  2383                           ; 3 bytes @ 0x27
  2384  0047                     	ds	3
  2385  004A                     ___ftdiv@f1:	
  2386                           
  2387                           ; 3 bytes @ 0x2A
  2388  004A                     	ds	3
  2389  004D                     ??___ftdiv:	
  2390                           
  2391                           ; 1 bytes @ 0x2D
  2392  004D                     	ds	4
  2393  0051                     ___ftdiv@cntr:	
  2394                           
  2395                           ; 1 bytes @ 0x31
  2396  0051                     	ds	1
  2397  0052                     ___ftdiv@f3:	
  2398                           
  2399                           ; 3 bytes @ 0x32
  2400  0052                     	ds	3
  2401  0055                     ___ftdiv@exp:	
  2402                           
  2403                           ; 1 bytes @ 0x35
  2404  0055                     	ds	1
  2405  0056                     ___ftdiv@sign:	
  2406                           
  2407                           ; 1 bytes @ 0x36
  2408  0056                     	ds	1
  2409  0057                     ?___ftsub:	
  2410  0057                     ___ftsub@f2:	
  2411                           ; 3 bytes @ 0x37
  2412                           
  2413  0057                     _Generate_Desired$767:	
  2414                           ; 3 bytes @ 0x37
  2415                           
  2416                           
  2417                           ; 3 bytes @ 0x37
  2418  0057                     	ds	3
  2419  005A                     Generate_Desired@rand1:	
  2420  005A                     ___ftsub@f1:	
  2421                           ; 3 bytes @ 0x3A
  2422                           
  2423                           
  2424                           ; 3 bytes @ 0x3A
  2425  005A                     	ds	3
  2426  005D                     ?_sin:	
  2427  005D                     Generate_Desired@rand2:	
  2428                           ; 3 bytes @ 0x3D
  2429                           
  2430  005D                     sin@f:	
  2431                           ; 3 bytes @ 0x3D
  2432                           
  2433                           
  2434                           ; 3 bytes @ 0x3D
  2435  005D                     	ds	3
  2436  0060                     ??_sin:	
  2437  0060                     Generate_Desired@rand3:	
  2438                           ; 1 bytes @ 0x40
  2439                           
  2440                           
  2441                           ; 3 bytes @ 0x40
  2442  0060                     	ds	1
  2443  0061                     sin@y:	
  2444                           
  2445                           ; 3 bytes @ 0x41
  2446  0061                     	ds	2
  2447  0063                     Generate_Desired@sum:	
  2448                           
  2449                           ; 3 bytes @ 0x43
  2450  0063                     	ds	1
  2451  0064                     _sin$769:	
  2452                           
  2453                           ; 3 bytes @ 0x44
  2454  0064                     	ds	3
  2455  0067                     sin@x2:	
  2456                           
  2457                           ; 3 bytes @ 0x47
  2458  0067                     	ds	3
  2459  006A                     sin@sgn:	
  2460                           
  2461                           ; 1 bytes @ 0x4A
  2462  006A                     	ds	1
  2463  006B                     ?_Heartbeat:	
  2464  006B                     Heartbeat@SetVal:	
  2465                           ; 3 bytes @ 0x4B
  2466                           
  2467                           
  2468                           ; 3 bytes @ 0x4B
  2469  006B                     	ds	3
  2470  006E                     ?_PWM1_LoadDutyValue:	
  2471  006E                     ?_PWM2_LoadDutyValue:	
  2472                           ; 1 bytes @ 0x4E
  2473                           
  2474  006E                     ?_PWM3_LoadDutyValue:	
  2475                           ; 1 bytes @ 0x4E
  2476                           
  2477  006E                     PWM1_LoadDutyValue@dutyValue:	
  2478                           ; 1 bytes @ 0x4E
  2479                           
  2480  006E                     PWM2_LoadDutyValue@dutyValue:	
  2481                           ; 2 bytes @ 0x4E
  2482                           
  2483  006E                     PWM3_LoadDutyValue@dutyValue:	
  2484                           ; 2 bytes @ 0x4E
  2485                           
  2486                           
  2487                           ; 2 bytes @ 0x4E
  2488  006E                     	ds	2
  2489                           
  2490                           	psect	maintext
  2491  0004                     __pmaintext:	
  2492 ;;
  2493 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2494 ;;
  2495 ;; *************** function _main *****************
  2496 ;; Defined at:
  2497 ;;		line 137 in file "main.c"
  2498 ;; Parameters:    Size  Location     Type
  2499 ;;		None
  2500 ;; Auto vars:     Size  Location     Type
  2501 ;;		None
  2502 ;; Return value:  Size  Location     Type
  2503 ;;                  1    wreg      void 
  2504 ;; Registers used:
  2505 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2506 ;; Tracked objects:
  2507 ;;		On entry : B1F/0
  2508 ;;		On exit  : 0/0
  2509 ;;		Unchanged: 0/0
  2510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2511 ;;      Params:         0       0       0       0       0       0       0       0
  2512 ;;      Locals:         0       0       0       0       0       0       0       0
  2513 ;;      Temps:          0       0       0       0       0       0       0       0
  2514 ;;      Totals:         0       0       0       0       0       0       0       0
  2515 ;;Total ram usage:        0 bytes
  2516 ;; Hardware stack levels required when called:    7
  2517 ;; This function calls:
  2518 ;;		_Generate_Desired
  2519 ;;		_Go_To_Desired
  2520 ;;		_SYSTEM_Initialize
  2521 ;;		_srand
  2522 ;; This function is called by:
  2523 ;;		Startup code after reset
  2524 ;; This function uses a non-reentrant model
  2525 ;;
  2526                           
  2527                           
  2528                           ;psect for function _main
  2529  0004                     _main:	
  2530                           
  2531                           ;main.c: 139: SYSTEM_Initialize();
  2532                           
  2533                           ;incstack = 0
  2534                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2535  0004  318C  2401  3180   	fcall	_SYSTEM_Initialize
  2536                           
  2537                           ;main.c: 156: srand(123);
  2538  0007  307B               	movlw	123
  2539  0008  00F0               	movwf	srand@x
  2540  0009  3000               	movlw	0
  2541  000A  00F1               	movwf	srand@x+1
  2542  000B  318B  23D4  3180   	fcall	_srand
  2543  000E                     l227:	
  2544                           ;main.c: 158: while (1) {
  2545                           
  2546                           
  2547                           ;main.c: 159: Generate_Desired();
  2548  000E  3186  262D  3180   	fcall	_Generate_Desired
  2549                           
  2550                           ;main.c: 160: Go_To_Desired();
  2551  0011  3180  2015  3180   	fcall	_Go_To_Desired
  2552  0014  280E               	goto	l227
  2553  0015                     __end_of_main:	
  2554                           
  2555                           	psect	text1
  2556  0BD4                     __ptext1:	
  2557 ;; *************** function _srand *****************
  2558 ;; Defined at:
  2559 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\rand.c"
  2560 ;; Parameters:    Size  Location     Type
  2561 ;;  x               2    0[COMMON] unsigned int 
  2562 ;; Auto vars:     Size  Location     Type
  2563 ;;		None
  2564 ;; Return value:  Size  Location     Type
  2565 ;;                  1    wreg      void 
  2566 ;; Registers used:
  2567 ;;		wreg
  2568 ;; Tracked objects:
  2569 ;;		On entry : 0/0
  2570 ;;		On exit  : 0/0
  2571 ;;		Unchanged: 0/0
  2572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2573 ;;      Params:         2       0       0       0       0       0       0       0
  2574 ;;      Locals:         0       0       0       0       0       0       0       0
  2575 ;;      Temps:          0       0       0       0       0       0       0       0
  2576 ;;      Totals:         2       0       0       0       0       0       0       0
  2577 ;;Total ram usage:        2 bytes
  2578 ;; Hardware stack levels used:    1
  2579 ;; This function calls:
  2580 ;;		Nothing
  2581 ;; This function is called by:
  2582 ;;		_main
  2583 ;; This function uses a non-reentrant model
  2584 ;;
  2585                           
  2586                           
  2587                           ;psect for function _srand
  2588  0BD4                     _srand:	
  2589                           
  2590                           ;incstack = 0
  2591                           ; Regs used in _srand: [wreg]
  2592  0BD4  0870               	movf	srand@x,w
  2593  0BD5  0021               	movlb	1	; select bank1
  2594  0BD6  00D2               	movwf	_randx^(0+128)
  2595  0BD7  0871               	movf	srand@x+1,w
  2596  0BD8  00D3               	movwf	(_randx^(0+128)+1)
  2597  0BD9  01D4               	clrf	(_randx^(0+128)+2)
  2598  0BDA  01D5               	clrf	(_randx^(0+128)+3)
  2599  0BDB  0008               	return
  2600  0BDC                     __end_of_srand:	
  2601                           
  2602                           	psect	text2
  2603  0C01                     __ptext2:	
  2604 ;; *************** function _SYSTEM_Initialize *****************
  2605 ;; Defined at:
  2606 ;;		line 71 in file "mcc_generated_files/mcc.c"
  2607 ;; Parameters:    Size  Location     Type
  2608 ;;		None
  2609 ;; Auto vars:     Size  Location     Type
  2610 ;;		None
  2611 ;; Return value:  Size  Location     Type
  2612 ;;                  1    wreg      void 
  2613 ;; Registers used:
  2614 ;;		wreg, status,2, status,0, pclath, cstack
  2615 ;; Tracked objects:
  2616 ;;		On entry : 0/0
  2617 ;;		On exit  : 0/0
  2618 ;;		Unchanged: 0/0
  2619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2620 ;;      Params:         0       0       0       0       0       0       0       0
  2621 ;;      Locals:         0       0       0       0       0       0       0       0
  2622 ;;      Temps:          0       0       0       0       0       0       0       0
  2623 ;;      Totals:         0       0       0       0       0       0       0       0
  2624 ;;Total ram usage:        0 bytes
  2625 ;; Hardware stack levels used:    1
  2626 ;; Hardware stack levels required when called:    2
  2627 ;; This function calls:
  2628 ;;		_OSCILLATOR_Initialize
  2629 ;;		_PIN_MANAGER_Initialize
  2630 ;;		_PWM1_Initialize
  2631 ;;		_PWM2_Initialize
  2632 ;;		_PWM3_Initialize
  2633 ;;		_TMR2_Initialize
  2634 ;;		_WDT_Initialize
  2635 ;; This function is called by:
  2636 ;;		_main
  2637 ;; This function uses a non-reentrant model
  2638 ;;
  2639                           
  2640                           
  2641                           ;psect for function _SYSTEM_Initialize
  2642  0C01                     _SYSTEM_Initialize:	
  2643                           
  2644                           ;mcc.c: 74: PIN_MANAGER_Initialize();
  2645                           
  2646                           ;incstack = 0
  2647                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2648  0C01  318D  25EE  318C   	fcall	_PIN_MANAGER_Initialize
  2649                           
  2650                           ;mcc.c: 75: OSCILLATOR_Initialize();
  2651  0C04  318B  23B0  318C   	fcall	_OSCILLATOR_Initialize
  2652                           
  2653                           ;mcc.c: 76: WDT_Initialize();
  2654  0C07  318B  23A8  318C   	fcall	_WDT_Initialize
  2655                           
  2656                           ;mcc.c: 77: PWM1_Initialize();
  2657  0C0A  318B  23C4  318C   	fcall	_PWM1_Initialize
  2658                           
  2659                           ;mcc.c: 78: PWM2_Initialize();
  2660  0C0D  318B  23CC  318C   	fcall	_PWM2_Initialize
  2661                           
  2662                           ;mcc.c: 79: PWM3_Initialize();
  2663  0C10  318B  23DC  318C   	fcall	_PWM3_Initialize
  2664                           
  2665                           ;mcc.c: 80: TMR2_Initialize();
  2666  0C13  318B  23E5         	fcall	_TMR2_Initialize
  2667  0C15  0008               	return
  2668  0C16                     __end_of_SYSTEM_Initialize:	
  2669                           
  2670                           	psect	text3
  2671  0BA8                     __ptext3:	
  2672 ;; *************** function _WDT_Initialize *****************
  2673 ;; Defined at:
  2674 ;;		line 95 in file "mcc_generated_files/mcc.c"
  2675 ;; Parameters:    Size  Location     Type
  2676 ;;		None
  2677 ;; Auto vars:     Size  Location     Type
  2678 ;;		None
  2679 ;; Return value:  Size  Location     Type
  2680 ;;                  1    wreg      void 
  2681 ;; Registers used:
  2682 ;;		wreg
  2683 ;; Tracked objects:
  2684 ;;		On entry : 0/0
  2685 ;;		On exit  : 0/0
  2686 ;;		Unchanged: 0/0
  2687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2688 ;;      Params:         0       0       0       0       0       0       0       0
  2689 ;;      Locals:         0       0       0       0       0       0       0       0
  2690 ;;      Temps:          0       0       0       0       0       0       0       0
  2691 ;;      Totals:         0       0       0       0       0       0       0       0
  2692 ;;Total ram usage:        0 bytes
  2693 ;; Hardware stack levels used:    1
  2694 ;; This function calls:
  2695 ;;		Nothing
  2696 ;; This function is called by:
  2697 ;;		_SYSTEM_Initialize
  2698 ;; This function uses a non-reentrant model
  2699 ;;
  2700                           
  2701                           
  2702                           ;psect for function _WDT_Initialize
  2703  0BA8                     _WDT_Initialize:	
  2704                           
  2705                           ;mcc.c: 98: WDTCON = 0x16;
  2706                           
  2707                           ;incstack = 0
  2708                           ; Regs used in _WDT_Initialize: [wreg]
  2709  0BA8  3016               	movlw	22
  2710  0BA9  0021               	movlb	1	; select bank1
  2711  0BAA  0097               	movwf	23	;volatile
  2712  0BAB  0008               	return
  2713  0BAC                     __end_of_WDT_Initialize:	
  2714                           
  2715                           	psect	text4
  2716  0BE5                     __ptext4:	
  2717 ;; *************** function _TMR2_Initialize *****************
  2718 ;; Defined at:
  2719 ;;		line 63 in file "mcc_generated_files/tmr2.c"
  2720 ;; Parameters:    Size  Location     Type
  2721 ;;		None
  2722 ;; Auto vars:     Size  Location     Type
  2723 ;;		None
  2724 ;; Return value:  Size  Location     Type
  2725 ;;                  1    wreg      void 
  2726 ;; Registers used:
  2727 ;;		wreg, status,2, status,0, pclath, cstack
  2728 ;; Tracked objects:
  2729 ;;		On entry : 0/0
  2730 ;;		On exit  : 0/0
  2731 ;;		Unchanged: 0/0
  2732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2733 ;;      Params:         0       0       0       0       0       0       0       0
  2734 ;;      Locals:         0       0       0       0       0       0       0       0
  2735 ;;      Temps:          0       0       0       0       0       0       0       0
  2736 ;;      Totals:         0       0       0       0       0       0       0       0
  2737 ;;Total ram usage:        0 bytes
  2738 ;; Hardware stack levels used:    1
  2739 ;; Hardware stack levels required when called:    1
  2740 ;; This function calls:
  2741 ;;		_TMR2_StartTimer
  2742 ;; This function is called by:
  2743 ;;		_SYSTEM_Initialize
  2744 ;; This function uses a non-reentrant model
  2745 ;;
  2746                           
  2747                           
  2748                           ;psect for function _TMR2_Initialize
  2749  0BE5                     _TMR2_Initialize:	
  2750                           
  2751                           ;tmr2.c: 68: T2CON = 0x00;
  2752                           
  2753                           ;incstack = 0
  2754                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2755  0BE5  0020               	movlb	0	; select bank0
  2756  0BE6  019C               	clrf	28	;volatile
  2757                           
  2758                           ;tmr2.c: 71: PR2 = 0xFF;
  2759  0BE7  30FF               	movlw	255
  2760  0BE8  009B               	movwf	27	;volatile
  2761                           
  2762                           ;tmr2.c: 74: TMR2 = 0x00;
  2763  0BE9  019A               	clrf	26	;volatile
  2764                           
  2765                           ;tmr2.c: 77: PIR1bits.TMR2IF = 0;
  2766  0BEA  1091               	bcf	17,1	;volatile
  2767                           
  2768                           ;tmr2.c: 80: TMR2_StartTimer();
  2769  0BEB  318B  23A5         	fcall	_TMR2_StartTimer
  2770  0BED  0008               	return
  2771  0BEE                     __end_of_TMR2_Initialize:	
  2772                           
  2773                           	psect	text5
  2774  0BA5                     __ptext5:	
  2775 ;; *************** function _TMR2_StartTimer *****************
  2776 ;; Defined at:
  2777 ;;		line 83 in file "mcc_generated_files/tmr2.c"
  2778 ;; Parameters:    Size  Location     Type
  2779 ;;		None
  2780 ;; Auto vars:     Size  Location     Type
  2781 ;;		None
  2782 ;; Return value:  Size  Location     Type
  2783 ;;                  1    wreg      void 
  2784 ;; Registers used:
  2785 ;;		None
  2786 ;; Tracked objects:
  2787 ;;		On entry : 0/0
  2788 ;;		On exit  : 0/0
  2789 ;;		Unchanged: 0/0
  2790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2791 ;;      Params:         0       0       0       0       0       0       0       0
  2792 ;;      Locals:         0       0       0       0       0       0       0       0
  2793 ;;      Temps:          0       0       0       0       0       0       0       0
  2794 ;;      Totals:         0       0       0       0       0       0       0       0
  2795 ;;Total ram usage:        0 bytes
  2796 ;; Hardware stack levels used:    1
  2797 ;; This function calls:
  2798 ;;		Nothing
  2799 ;; This function is called by:
  2800 ;;		_TMR2_Initialize
  2801 ;; This function uses a non-reentrant model
  2802 ;;
  2803                           
  2804                           
  2805                           ;psect for function _TMR2_StartTimer
  2806  0BA5                     _TMR2_StartTimer:	
  2807                           
  2808                           ;tmr2.c: 86: T2CONbits.TMR2ON = 1;
  2809                           
  2810                           ;incstack = 0
  2811                           ; Regs used in _TMR2_StartTimer: []
  2812  0BA5  0020               	movlb	0	; select bank0
  2813  0BA6  151C               	bsf	28,2	;volatile
  2814  0BA7  0008               	return
  2815  0BA8                     __end_of_TMR2_StartTimer:	
  2816                           
  2817                           	psect	text6
  2818  0BDC                     __ptext6:	
  2819 ;; *************** function _PWM3_Initialize *****************
  2820 ;; Defined at:
  2821 ;;		line 57 in file "mcc_generated_files/pwm3.c"
  2822 ;; Parameters:    Size  Location     Type
  2823 ;;		None
  2824 ;; Auto vars:     Size  Location     Type
  2825 ;;		None
  2826 ;; Return value:  Size  Location     Type
  2827 ;;                  1    wreg      void 
  2828 ;; Registers used:
  2829 ;;		wreg, status,2, status,0
  2830 ;; Tracked objects:
  2831 ;;		On entry : 0/0
  2832 ;;		On exit  : 0/0
  2833 ;;		Unchanged: 0/0
  2834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2835 ;;      Params:         0       0       0       0       0       0       0       0
  2836 ;;      Locals:         0       0       0       0       0       0       0       0
  2837 ;;      Temps:          0       0       0       0       0       0       0       0
  2838 ;;      Totals:         0       0       0       0       0       0       0       0
  2839 ;;Total ram usage:        0 bytes
  2840 ;; Hardware stack levels used:    1
  2841 ;; This function calls:
  2842 ;;		Nothing
  2843 ;; This function is called by:
  2844 ;;		_SYSTEM_Initialize
  2845 ;; This function uses a non-reentrant model
  2846 ;;
  2847                           
  2848                           
  2849                           ;psect for function _PWM3_Initialize
  2850  0BDC                     _PWM3_Initialize:	
  2851                           
  2852                           ;pwm3.c: 61: PWM3CON = 0x80;
  2853                           
  2854                           ;incstack = 0
  2855                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
  2856  0BDC  3080               	movlw	128
  2857  0BDD  002C               	movlb	12	; select bank12
  2858  0BDE  0099               	movwf	25	;volatile
  2859                           
  2860                           ;pwm3.c: 64: PWM3DCH = 0x00;
  2861  0BDF  0198               	clrf	24	;volatile
  2862                           
  2863                           ;pwm3.c: 67: PWM3DCL = 0x00;
  2864  0BE0  0197               	clrf	23	;volatile
  2865                           
  2866                           ;pwm3.c: 71: CCPTMRSbits.P3TSEL = 0x0;
  2867  0BE1  30CF               	movlw	-49
  2868  0BE2  0025               	movlb	5	; select bank5
  2869  0BE3  059E               	andwf	30,f	;volatile
  2870  0BE4  0008               	return
  2871  0BE5                     __end_of_PWM3_Initialize:	
  2872                           
  2873                           	psect	text7
  2874  0BCC                     __ptext7:	
  2875 ;; *************** function _PWM2_Initialize *****************
  2876 ;; Defined at:
  2877 ;;		line 63 in file "mcc_generated_files/pwm2.c"
  2878 ;; Parameters:    Size  Location     Type
  2879 ;;		None
  2880 ;; Auto vars:     Size  Location     Type
  2881 ;;		None
  2882 ;; Return value:  Size  Location     Type
  2883 ;;                  1    wreg      void 
  2884 ;; Registers used:
  2885 ;;		wreg, status,2, status,0
  2886 ;; Tracked objects:
  2887 ;;		On entry : 0/0
  2888 ;;		On exit  : 0/0
  2889 ;;		Unchanged: 0/0
  2890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2891 ;;      Params:         0       0       0       0       0       0       0       0
  2892 ;;      Locals:         0       0       0       0       0       0       0       0
  2893 ;;      Temps:          0       0       0       0       0       0       0       0
  2894 ;;      Totals:         0       0       0       0       0       0       0       0
  2895 ;;Total ram usage:        0 bytes
  2896 ;; Hardware stack levels used:    1
  2897 ;; This function calls:
  2898 ;;		Nothing
  2899 ;; This function is called by:
  2900 ;;		_SYSTEM_Initialize
  2901 ;; This function uses a non-reentrant model
  2902 ;;
  2903                           
  2904                           
  2905                           ;psect for function _PWM2_Initialize
  2906  0BCC                     _PWM2_Initialize:	
  2907                           
  2908                           ;pwm2.c: 68: CCP2CON = 0x0C;
  2909                           
  2910                           ;incstack = 0
  2911                           ; Regs used in _PWM2_Initialize: [wreg+status,2+status,0]
  2912  0BCC  300C               	movlw	12
  2913  0BCD  0025               	movlb	5	; select bank5
  2914  0BCE  009A               	movwf	26	;volatile
  2915                           
  2916                           ;pwm2.c: 71: CCPR2L = 0x00;
  2917  0BCF  0198               	clrf	24	;volatile
  2918                           
  2919                           ;pwm2.c: 74: CCPR2H = 0x00;
  2920  0BD0  0199               	clrf	25	;volatile
  2921                           
  2922                           ;pwm2.c: 77: CCPTMRSbits.C2TSEL = 0x0;
  2923  0BD1  30F3               	movlw	-13
  2924  0BD2  059E               	andwf	30,f	;volatile
  2925  0BD3  0008               	return
  2926  0BD4                     __end_of_PWM2_Initialize:	
  2927                           
  2928                           	psect	text8
  2929  0BC4                     __ptext8:	
  2930 ;; *************** function _PWM1_Initialize *****************
  2931 ;; Defined at:
  2932 ;;		line 63 in file "mcc_generated_files/pwm1.c"
  2933 ;; Parameters:    Size  Location     Type
  2934 ;;		None
  2935 ;; Auto vars:     Size  Location     Type
  2936 ;;		None
  2937 ;; Return value:  Size  Location     Type
  2938 ;;                  1    wreg      void 
  2939 ;; Registers used:
  2940 ;;		wreg, status,2, status,0
  2941 ;; Tracked objects:
  2942 ;;		On entry : 0/0
  2943 ;;		On exit  : 0/0
  2944 ;;		Unchanged: 0/0
  2945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2946 ;;      Params:         0       0       0       0       0       0       0       0
  2947 ;;      Locals:         0       0       0       0       0       0       0       0
  2948 ;;      Temps:          0       0       0       0       0       0       0       0
  2949 ;;      Totals:         0       0       0       0       0       0       0       0
  2950 ;;Total ram usage:        0 bytes
  2951 ;; Hardware stack levels used:    1
  2952 ;; This function calls:
  2953 ;;		Nothing
  2954 ;; This function is called by:
  2955 ;;		_SYSTEM_Initialize
  2956 ;; This function uses a non-reentrant model
  2957 ;;
  2958                           
  2959                           
  2960                           ;psect for function _PWM1_Initialize
  2961  0BC4                     _PWM1_Initialize:	
  2962                           
  2963                           ;pwm1.c: 68: CCP1CON = 0x0C;
  2964                           
  2965                           ;incstack = 0
  2966                           ; Regs used in _PWM1_Initialize: [wreg+status,2+status,0]
  2967  0BC4  300C               	movlw	12
  2968  0BC5  0025               	movlb	5	; select bank5
  2969  0BC6  0093               	movwf	19	;volatile
  2970                           
  2971                           ;pwm1.c: 71: CCPR1L = 0x00;
  2972  0BC7  0191               	clrf	17	;volatile
  2973                           
  2974                           ;pwm1.c: 74: CCPR1H = 0x00;
  2975  0BC8  0192               	clrf	18	;volatile
  2976                           
  2977                           ;pwm1.c: 77: CCPTMRSbits.C1TSEL = 0x0;
  2978  0BC9  30FC               	movlw	-4
  2979  0BCA  059E               	andwf	30,f	;volatile
  2980  0BCB  0008               	return
  2981  0BCC                     __end_of_PWM1_Initialize:	
  2982                           
  2983                           	psect	text9
  2984  0DEE                     __ptext9:	
  2985 ;; *************** function _PIN_MANAGER_Initialize *****************
  2986 ;; Defined at:
  2987 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  2988 ;; Parameters:    Size  Location     Type
  2989 ;;		None
  2990 ;; Auto vars:     Size  Location     Type
  2991 ;;  state           1    0[COMMON] unsigned char 
  2992 ;; Return value:  Size  Location     Type
  2993 ;;                  1    wreg      void 
  2994 ;; Registers used:
  2995 ;;		wreg, status,2, status,0
  2996 ;; Tracked objects:
  2997 ;;		On entry : 0/0
  2998 ;;		On exit  : 0/0
  2999 ;;		Unchanged: 0/0
  3000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3001 ;;      Params:         0       0       0       0       0       0       0       0
  3002 ;;      Locals:         1       0       0       0       0       0       0       0
  3003 ;;      Temps:          0       0       0       0       0       0       0       0
  3004 ;;      Totals:         1       0       0       0       0       0       0       0
  3005 ;;Total ram usage:        1 bytes
  3006 ;; Hardware stack levels used:    1
  3007 ;; This function calls:
  3008 ;;		Nothing
  3009 ;; This function is called by:
  3010 ;;		_SYSTEM_Initialize
  3011 ;; This function uses a non-reentrant model
  3012 ;;
  3013                           
  3014                           
  3015                           ;psect for function _PIN_MANAGER_Initialize
  3016  0DEE                     _PIN_MANAGER_Initialize:	
  3017                           
  3018                           ;pin_manager.c: 56: LATA = 0x00;
  3019                           
  3020                           ;incstack = 0
  3021                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
  3022  0DEE  0022               	movlb	2	; select bank2
  3023  0DEF  018C               	clrf	12	;volatile
  3024                           
  3025                           ;pin_manager.c: 57: LATB = 0x00;
  3026  0DF0  018D               	clrf	13	;volatile
  3027                           
  3028                           ;pin_manager.c: 58: LATC = 0x00;
  3029  0DF1  018E               	clrf	14	;volatile
  3030                           
  3031                           ;pin_manager.c: 63: TRISA = 0x30;
  3032  0DF2  3030               	movlw	48
  3033  0DF3  0021               	movlb	1	; select bank1
  3034  0DF4  008C               	movwf	12	;volatile
  3035                           
  3036                           ;pin_manager.c: 64: TRISB = 0xF0;
  3037  0DF5  30F0               	movlw	240
  3038  0DF6  008D               	movwf	13	;volatile
  3039                           
  3040                           ;pin_manager.c: 65: TRISC = 0xFF;
  3041  0DF7  30FF               	movlw	255
  3042  0DF8  008E               	movwf	14	;volatile
  3043                           
  3044                           ;pin_manager.c: 70: ANSELC = 0xCF;
  3045  0DF9  30CF               	movlw	207
  3046  0DFA  0023               	movlb	3	; select bank3
  3047  0DFB  008E               	movwf	14	;volatile
  3048                           
  3049                           ;pin_manager.c: 71: ANSELB = 0xF0;
  3050  0DFC  30F0               	movlw	240
  3051  0DFD  008D               	movwf	13	;volatile
  3052                           
  3053                           ;pin_manager.c: 72: ANSELA = 0x37;
  3054  0DFE  3037               	movlw	55
  3055  0DFF  008C               	movwf	12	;volatile
  3056                           
  3057                           ;pin_manager.c: 77: WPUB = 0xF0;
  3058  0E00  30F0               	movlw	240
  3059  0E01  0024               	movlb	4	; select bank4
  3060  0E02  008D               	movwf	13	;volatile
  3061                           
  3062                           ;pin_manager.c: 78: WPUA = 0x3F;
  3063  0E03  303F               	movlw	63
  3064  0E04  008C               	movwf	12	;volatile
  3065                           
  3066                           ;pin_manager.c: 79: WPUC = 0xFF;
  3067  0E05  30FF               	movlw	255
  3068  0E06  008E               	movwf	14	;volatile
  3069                           
  3070                           ;pin_manager.c: 80: OPTION_REGbits.nWPUEN = 0;
  3071  0E07  0021               	movlb	1	; select bank1
  3072  0E08  1395               	bcf	21,7	;volatile
  3073                           
  3074                           ;pin_manager.c: 85: ODCONA = 0x00;
  3075  0E09  0025               	movlb	5	; select bank5
  3076  0E0A  018C               	clrf	12	;volatile
  3077                           
  3078                           ;pin_manager.c: 86: ODCONB = 0x00;
  3079  0E0B  018D               	clrf	13	;volatile
  3080                           
  3081                           ;pin_manager.c: 87: ODCONC = 0x00;
  3082  0E0C  018E               	clrf	14	;volatile
  3083                           
  3084                           ;pin_manager.c: 94: bool state = GIE;
  3085  0E0D  3000               	movlw	0
  3086  0E0E  1B8B               	btfsc	11,7	;volatile
  3087  0E0F  3001               	movlw	1
  3088  0E10  00F0               	movwf	PIN_MANAGER_Initialize@state
  3089                           
  3090                           ;pin_manager.c: 95: GIE = 0;
  3091  0E11  138B               	bcf	11,7	;volatile
  3092                           
  3093                           ;pin_manager.c: 96: PPSLOCK = 0x55;
  3094  0E12  3055               	movlw	85
  3095  0E13  003C               	movlb	28	; select bank28
  3096  0E14  008F               	movwf	15	;volatile
  3097                           
  3098                           ;pin_manager.c: 97: PPSLOCK = 0xAA;
  3099  0E15  30AA               	movlw	170
  3100  0E16  008F               	movwf	15	;volatile
  3101                           
  3102                           ;pin_manager.c: 98: PPSLOCKbits.PPSLOCKED = 0x00;
  3103  0E17  100F               	bcf	15,0	;volatile
  3104                           
  3105                           ;pin_manager.c: 100: RA1PPSbits.RA1PPS = 0x0D;
  3106  0E18  003D               	movlb	29	; select bank29
  3107  0E19  0811               	movf	17,w	;volatile
  3108  0E1A  39E0               	andlw	-32
  3109  0E1B  380D               	iorlw	13
  3110  0E1C  0091               	movwf	17	;volatile
  3111                           
  3112                           ;pin_manager.c: 101: RA0PPSbits.RA0PPS = 0x0C;
  3113  0E1D  0810               	movf	16,w	;volatile
  3114  0E1E  39E0               	andlw	-32
  3115  0E1F  380C               	iorlw	12
  3116  0E20  0090               	movwf	16	;volatile
  3117                           
  3118                           ;pin_manager.c: 102: RA2PPSbits.RA2PPS = 0x0E;
  3119  0E21  0812               	movf	18,w	;volatile
  3120  0E22  39E0               	andlw	-32
  3121  0E23  380E               	iorlw	14
  3122  0E24  0092               	movwf	18	;volatile
  3123                           
  3124                           ;pin_manager.c: 104: PPSLOCK = 0x55;
  3125  0E25  3055               	movlw	85
  3126  0E26  003C               	movlb	28	; select bank28
  3127  0E27  008F               	movwf	15	;volatile
  3128                           
  3129                           ;pin_manager.c: 105: PPSLOCK = 0xAA;
  3130  0E28  30AA               	movlw	170
  3131  0E29  008F               	movwf	15	;volatile
  3132                           
  3133                           ;pin_manager.c: 106: PPSLOCKbits.PPSLOCKED = 0x01;
  3134  0E2A  140F               	bsf	15,0	;volatile
  3135                           
  3136                           ;pin_manager.c: 108: GIE = state;
  3137  0E2B  1C70               	btfss	PIN_MANAGER_Initialize@state,0
  3138  0E2C  2E2F               	goto	u1020
  3139  0E2D  178B               	bsf	11,7	;volatile
  3140  0E2E  0008               	return
  3141  0E2F                     u1020:	
  3142  0E2F  138B               	bcf	11,7	;volatile
  3143  0E30  0008               	return
  3144  0E31                     __end_of_PIN_MANAGER_Initialize:	
  3145                           
  3146                           	psect	text10
  3147  0BB0                     __ptext10:	
  3148 ;; *************** function _OSCILLATOR_Initialize *****************
  3149 ;; Defined at:
  3150 ;;		line 83 in file "mcc_generated_files/mcc.c"
  3151 ;; Parameters:    Size  Location     Type
  3152 ;;		None
  3153 ;; Auto vars:     Size  Location     Type
  3154 ;;		None
  3155 ;; Return value:  Size  Location     Type
  3156 ;;                  1    wreg      void 
  3157 ;; Registers used:
  3158 ;;		wreg, status,2
  3159 ;; Tracked objects:
  3160 ;;		On entry : 0/0
  3161 ;;		On exit  : 0/0
  3162 ;;		Unchanged: 0/0
  3163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3164 ;;      Params:         0       0       0       0       0       0       0       0
  3165 ;;      Locals:         0       0       0       0       0       0       0       0
  3166 ;;      Temps:          0       0       0       0       0       0       0       0
  3167 ;;      Totals:         0       0       0       0       0       0       0       0
  3168 ;;Total ram usage:        0 bytes
  3169 ;; Hardware stack levels used:    1
  3170 ;; This function calls:
  3171 ;;		Nothing
  3172 ;; This function is called by:
  3173 ;;		_SYSTEM_Initialize
  3174 ;; This function uses a non-reentrant model
  3175 ;;
  3176                           
  3177                           
  3178                           ;psect for function _OSCILLATOR_Initialize
  3179  0BB0                     _OSCILLATOR_Initialize:	
  3180                           
  3181                           ;mcc.c: 86: OSCCON = 0x78;
  3182                           
  3183                           ;incstack = 0
  3184                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3185  0BB0  3078               	movlw	120
  3186  0BB1  0021               	movlb	1	; select bank1
  3187  0BB2  0099               	movwf	25	;volatile
  3188                           
  3189                           ;mcc.c: 88: OSCSTAT = 0x00;
  3190  0BB3  019A               	clrf	26	;volatile
  3191                           
  3192                           ;mcc.c: 90: OSCTUNE = 0x00;
  3193  0BB4  0198               	clrf	24	;volatile
  3194  0BB5  0008               	return
  3195  0BB6                     __end_of_OSCILLATOR_Initialize:	
  3196                           
  3197                           	psect	text11
  3198  0015                     __ptext11:	
  3199 ;; *************** function _Go_To_Desired *****************
  3200 ;; Defined at:
  3201 ;;		line 125 in file "main.c"
  3202 ;; Parameters:    Size  Location     Type
  3203 ;;		None
  3204 ;; Auto vars:     Size  Location     Type
  3205 ;;		None
  3206 ;; Return value:  Size  Location     Type
  3207 ;;                  1    wreg      void 
  3208 ;; Registers used:
  3209 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3210 ;; Tracked objects:
  3211 ;;		On entry : 0/0
  3212 ;;		On exit  : 0/0
  3213 ;;		Unchanged: 0/0
  3214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3215 ;;      Params:         0       0       0       0       0       0       0       0
  3216 ;;      Locals:         0       0       0       0       0       0       0       0
  3217 ;;      Temps:          0       0       0       0       0       0       0       0
  3218 ;;      Totals:         0       0       0       0       0       0       0       0
  3219 ;;Total ram usage:        0 bytes
  3220 ;; Hardware stack levels used:    1
  3221 ;; Hardware stack levels required when called:    6
  3222 ;; This function calls:
  3223 ;;		_Step
  3224 ;;		___ftge
  3225 ;; This function is called by:
  3226 ;;		_main
  3227 ;; This function uses a non-reentrant model
  3228 ;;
  3229                           
  3230                           
  3231                           ;psect for function _Go_To_Desired
  3232  0015                     _Go_To_Desired:	
  3233                           
  3234                           ;main.c: 126: if (Pwm_1_Step > 0) {
  3235                           
  3236                           ;incstack = 0
  3237                           ; Regs used in _Go_To_Desired: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3238  0015  3000               	movlw	0
  3239  0016  0020               	movlb	0	; select bank0
  3240  0017  00A0               	movwf	___ftge@ff1
  3241  0018  3000               	movlw	0
  3242  0019  00A1               	movwf	___ftge@ff1+1
  3243  001A  3000               	movlw	0
  3244  001B  00A2               	movwf	___ftge@ff1+2
  3245  001C  0021               	movlb	1	; select bank1
  3246  001D  0832               	movf	_Pwm_1_Step^(0+128),w
  3247  001E  0020               	movlb	0	; select bank0
  3248  001F  00A3               	movwf	___ftge@ff2
  3249  0020  0021               	movlb	1	; select bank1
  3250  0021  0833               	movf	(_Pwm_1_Step+1)^(0+128),w
  3251  0022  0020               	movlb	0	; select bank0
  3252  0023  00A4               	movwf	___ftge@ff2+1
  3253  0024  0021               	movlb	1	; select bank1
  3254  0025  0834               	movf	(_Pwm_1_Step+2)^(0+128),w
  3255  0026  0020               	movlb	0	; select bank0
  3256  0027  00A5               	movwf	___ftge@ff2+2
  3257  0028  318D  2532  3180   	fcall	___ftge
  3258  002B  1C03               	btfss	3,0
  3259  002C  2831               	goto	l1840
  3260  002D  284F               	goto	l1842
  3261  002E                     l1838:	
  3262                           ;main.c: 127: while (Pwm_1_Current < Pwm_1_Desired) {
  3263                           
  3264                           
  3265                           ;main.c: 128: Step();
  3266  002E  3183  23A5  3180   	fcall	_Step
  3267  0031                     l1840:	
  3268  0031  0021               	movlb	1	; select bank1
  3269  0032  0835               	movf	_Pwm_1_Current^(0+128),w
  3270  0033  0020               	movlb	0	; select bank0
  3271  0034  00A0               	movwf	___ftge@ff1
  3272  0035  0021               	movlb	1	; select bank1
  3273  0036  0836               	movf	(_Pwm_1_Current+1)^(0+128),w
  3274  0037  0020               	movlb	0	; select bank0
  3275  0038  00A1               	movwf	___ftge@ff1+1
  3276  0039  0021               	movlb	1	; select bank1
  3277  003A  0837               	movf	(_Pwm_1_Current+2)^(0+128),w
  3278  003B  0020               	movlb	0	; select bank0
  3279  003C  00A2               	movwf	___ftge@ff1+2
  3280  003D  0021               	movlb	1	; select bank1
  3281  003E  0838               	movf	_Pwm_1_Desired^(0+128),w
  3282  003F  0020               	movlb	0	; select bank0
  3283  0040  00A3               	movwf	___ftge@ff2
  3284  0041  0021               	movlb	1	; select bank1
  3285  0042  0839               	movf	(_Pwm_1_Desired+1)^(0+128),w
  3286  0043  0020               	movlb	0	; select bank0
  3287  0044  00A4               	movwf	___ftge@ff2+1
  3288  0045  0021               	movlb	1	; select bank1
  3289  0046  083A               	movf	(_Pwm_1_Desired+2)^(0+128),w
  3290  0047  0020               	movlb	0	; select bank0
  3291  0048  00A5               	movwf	___ftge@ff2+2
  3292  0049  318D  2532  3180   	fcall	___ftge
  3293  004C  1803               	btfsc	3,0
  3294  004D  0008               	return
  3295  004E  282E               	goto	l1838
  3296  004F                     l1842:	
  3297                           ;main.c: 129: }
  3298                           ;main.c: 130: } else if (Pwm_1_Step < 0) {
  3299                           
  3300  004F  0021               	movlb	1	; select bank1
  3301  0050  0832               	movf	_Pwm_1_Step^(0+128),w
  3302  0051  0020               	movlb	0	; select bank0
  3303  0052  00A0               	movwf	___ftge@ff1
  3304  0053  0021               	movlb	1	; select bank1
  3305  0054  0833               	movf	(_Pwm_1_Step+1)^(0+128),w
  3306  0055  0020               	movlb	0	; select bank0
  3307  0056  00A1               	movwf	___ftge@ff1+1
  3308  0057  0021               	movlb	1	; select bank1
  3309  0058  0834               	movf	(_Pwm_1_Step+2)^(0+128),w
  3310  0059  0020               	movlb	0	; select bank0
  3311  005A  00A2               	movwf	___ftge@ff1+2
  3312  005B  3000               	movlw	0
  3313  005C  00A3               	movwf	___ftge@ff2
  3314  005D  3000               	movlw	0
  3315  005E  00A4               	movwf	___ftge@ff2+1
  3316  005F  3000               	movlw	0
  3317  0060  00A5               	movwf	___ftge@ff2+2
  3318  0061  318D  2532  3180   	fcall	___ftge
  3319  0064  1803               	btfsc	3,0
  3320  0065  0008               	return
  3321  0066                     l1848:	
  3322  0066  0021               	movlb	1	; select bank1
  3323  0067  0838               	movf	_Pwm_1_Desired^(0+128),w
  3324  0068  0020               	movlb	0	; select bank0
  3325  0069  00A0               	movwf	___ftge@ff1
  3326  006A  0021               	movlb	1	; select bank1
  3327  006B  0839               	movf	(_Pwm_1_Desired+1)^(0+128),w
  3328  006C  0020               	movlb	0	; select bank0
  3329  006D  00A1               	movwf	___ftge@ff1+1
  3330  006E  0021               	movlb	1	; select bank1
  3331  006F  083A               	movf	(_Pwm_1_Desired+2)^(0+128),w
  3332  0070  0020               	movlb	0	; select bank0
  3333  0071  00A2               	movwf	___ftge@ff1+2
  3334  0072  0021               	movlb	1	; select bank1
  3335  0073  0835               	movf	_Pwm_1_Current^(0+128),w
  3336  0074  0020               	movlb	0	; select bank0
  3337  0075  00A3               	movwf	___ftge@ff2
  3338  0076  0021               	movlb	1	; select bank1
  3339  0077  0836               	movf	(_Pwm_1_Current+1)^(0+128),w
  3340  0078  0020               	movlb	0	; select bank0
  3341  0079  00A4               	movwf	___ftge@ff2+1
  3342  007A  0021               	movlb	1	; select bank1
  3343  007B  0837               	movf	(_Pwm_1_Current+2)^(0+128),w
  3344  007C  0020               	movlb	0	; select bank0
  3345  007D  00A5               	movwf	___ftge@ff2+2
  3346  007E  318D  2532  3180   	fcall	___ftge
  3347  0081  1803               	btfsc	3,0
  3348  0082  0008               	return
  3349                           
  3350                           ;main.c: 132: Step();
  3351                           
  3352                           ;main.c: 131: while (Pwm_1_Current > Pwm_1_Desired) {
  3353  0083  3183  23A5  3180   	fcall	_Step
  3354  0086  2866               	goto	l1848
  3355  0087                     __end_of_Go_To_Desired:	
  3356                           
  3357                           	psect	text12
  3358  03A5                     __ptext12:	
  3359 ;; *************** function _Step *****************
  3360 ;; Defined at:
  3361 ;;		line 101 in file "main.c"
  3362 ;; Parameters:    Size  Location     Type
  3363 ;;		None
  3364 ;; Auto vars:     Size  Location     Type
  3365 ;;		None
  3366 ;; Return value:  Size  Location     Type
  3367 ;;                  1    wreg      void 
  3368 ;; Registers used:
  3369 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3370 ;; Tracked objects:
  3371 ;;		On entry : 0/0
  3372 ;;		On exit  : 0/0
  3373 ;;		Unchanged: 0/0
  3374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3375 ;;      Params:         0       0       0       0       0       0       0       0
  3376 ;;      Locals:         0       0       3       0       0       0       0       0
  3377 ;;      Temps:          0       0       1       0       0       0       0       0
  3378 ;;      Totals:         0       0       4       0       0       0       0       0
  3379 ;;Total ram usage:        4 bytes
  3380 ;; Hardware stack levels used:    1
  3381 ;; Hardware stack levels required when called:    5
  3382 ;; This function calls:
  3383 ;;		_Generate_Desired
  3384 ;;		_Heartbeat
  3385 ;;		_PWM1_LoadDutyValue
  3386 ;;		_PWM2_LoadDutyValue
  3387 ;;		_PWM3_LoadDutyValue
  3388 ;;		___ftadd
  3389 ;;		___ftge
  3390 ;;		___fttol
  3391 ;;		___lwtoft
  3392 ;; This function is called by:
  3393 ;;		_Go_To_Desired
  3394 ;; This function uses a non-reentrant model
  3395 ;;
  3396                           
  3397                           
  3398                           ;psect for function _Step
  3399  03A5                     _Step:	
  3400                           
  3401                           ;main.c: 102: Pwm_1_Current += Pwm_1_Step;
  3402                           
  3403                           ;incstack = 0
  3404                           ; Regs used in _Step: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3405  03A5  0021               	movlb	1	; select bank1
  3406  03A6  0832               	movf	_Pwm_1_Step^(0+128),w
  3407  03A7  0020               	movlb	0	; select bank0
  3408  03A8  00B0               	movwf	___ftadd@f1
  3409  03A9  0021               	movlb	1	; select bank1
  3410  03AA  0833               	movf	(_Pwm_1_Step+1)^(0+128),w
  3411  03AB  0020               	movlb	0	; select bank0
  3412  03AC  00B1               	movwf	___ftadd@f1+1
  3413  03AD  0021               	movlb	1	; select bank1
  3414  03AE  0834               	movf	(_Pwm_1_Step+2)^(0+128),w
  3415  03AF  0020               	movlb	0	; select bank0
  3416  03B0  00B2               	movwf	___ftadd@f1+2
  3417  03B1  0021               	movlb	1	; select bank1
  3418  03B2  0835               	movf	_Pwm_1_Current^(0+128),w
  3419  03B3  0020               	movlb	0	; select bank0
  3420  03B4  00B3               	movwf	___ftadd@f2
  3421  03B5  0021               	movlb	1	; select bank1
  3422  03B6  0836               	movf	(_Pwm_1_Current+1)^(0+128),w
  3423  03B7  0020               	movlb	0	; select bank0
  3424  03B8  00B4               	movwf	___ftadd@f2+1
  3425  03B9  0021               	movlb	1	; select bank1
  3426  03BA  0837               	movf	(_Pwm_1_Current+2)^(0+128),w
  3427  03BB  0020               	movlb	0	; select bank0
  3428  03BC  00B5               	movwf	___ftadd@f2+2
  3429  03BD  3182  22AF  3183   	fcall	___ftadd
  3430  03C0  0020               	movlb	0	; select bank0
  3431  03C1  0830               	movf	?___ftadd,w
  3432  03C2  0021               	movlb	1	; select bank1
  3433  03C3  00B5               	movwf	_Pwm_1_Current^(0+128)
  3434  03C4  0020               	movlb	0	; select bank0
  3435  03C5  0831               	movf	?___ftadd+1,w
  3436  03C6  0021               	movlb	1	; select bank1
  3437  03C7  00B6               	movwf	(_Pwm_1_Current+1)^(0+128)
  3438  03C8  0020               	movlb	0	; select bank0
  3439  03C9  0832               	movf	?___ftadd+2,w
  3440  03CA  0021               	movlb	1	; select bank1
  3441  03CB  00B7               	movwf	(_Pwm_1_Current+2)^(0+128)
  3442                           
  3443                           ;main.c: 103: Pwm_2_Current += Pwm_2_Step;
  3444  03CC  0829               	movf	_Pwm_2_Step^(0+128),w
  3445  03CD  0020               	movlb	0	; select bank0
  3446  03CE  00B0               	movwf	___ftadd@f1
  3447  03CF  0021               	movlb	1	; select bank1
  3448  03D0  082A               	movf	(_Pwm_2_Step+1)^(0+128),w
  3449  03D1  0020               	movlb	0	; select bank0
  3450  03D2  00B1               	movwf	___ftadd@f1+1
  3451  03D3  0021               	movlb	1	; select bank1
  3452  03D4  082B               	movf	(_Pwm_2_Step+2)^(0+128),w
  3453  03D5  0020               	movlb	0	; select bank0
  3454  03D6  00B2               	movwf	___ftadd@f1+2
  3455  03D7  0021               	movlb	1	; select bank1
  3456  03D8  082C               	movf	_Pwm_2_Current^(0+128),w
  3457  03D9  0020               	movlb	0	; select bank0
  3458  03DA  00B3               	movwf	___ftadd@f2
  3459  03DB  0021               	movlb	1	; select bank1
  3460  03DC  082D               	movf	(_Pwm_2_Current+1)^(0+128),w
  3461  03DD  0020               	movlb	0	; select bank0
  3462  03DE  00B4               	movwf	___ftadd@f2+1
  3463  03DF  0021               	movlb	1	; select bank1
  3464  03E0  082E               	movf	(_Pwm_2_Current+2)^(0+128),w
  3465  03E1  0020               	movlb	0	; select bank0
  3466  03E2  00B5               	movwf	___ftadd@f2+2
  3467  03E3  3182  22AF  3183   	fcall	___ftadd
  3468  03E6  0020               	movlb	0	; select bank0
  3469  03E7  0830               	movf	?___ftadd,w
  3470  03E8  0021               	movlb	1	; select bank1
  3471  03E9  00AC               	movwf	_Pwm_2_Current^(0+128)
  3472  03EA  0020               	movlb	0	; select bank0
  3473  03EB  0831               	movf	?___ftadd+1,w
  3474  03EC  0021               	movlb	1	; select bank1
  3475  03ED  00AD               	movwf	(_Pwm_2_Current+1)^(0+128)
  3476  03EE  0020               	movlb	0	; select bank0
  3477  03EF  0832               	movf	?___ftadd+2,w
  3478  03F0  0021               	movlb	1	; select bank1
  3479  03F1  00AE               	movwf	(_Pwm_2_Current+2)^(0+128)
  3480                           
  3481                           ;main.c: 104: Pwm_3_Current += Pwm_3_Step;
  3482  03F2  0820               	movf	_Pwm_3_Step^(0+128),w
  3483  03F3  0020               	movlb	0	; select bank0
  3484  03F4  00B0               	movwf	___ftadd@f1
  3485  03F5  0021               	movlb	1	; select bank1
  3486  03F6  0821               	movf	(_Pwm_3_Step+1)^(0+128),w
  3487  03F7  0020               	movlb	0	; select bank0
  3488  03F8  00B1               	movwf	___ftadd@f1+1
  3489  03F9  0021               	movlb	1	; select bank1
  3490  03FA  0822               	movf	(_Pwm_3_Step+2)^(0+128),w
  3491  03FB  0020               	movlb	0	; select bank0
  3492  03FC  00B2               	movwf	___ftadd@f1+2
  3493  03FD  0021               	movlb	1	; select bank1
  3494  03FE  0823               	movf	_Pwm_3_Current^(0+128),w
  3495  03FF  0020               	movlb	0	; select bank0
  3496  0400  00B3               	movwf	___ftadd@f2
  3497  0401  0021               	movlb	1	; select bank1
  3498  0402  0824               	movf	(_Pwm_3_Current+1)^(0+128),w
  3499  0403  0020               	movlb	0	; select bank0
  3500  0404  00B4               	movwf	___ftadd@f2+1
  3501  0405  0021               	movlb	1	; select bank1
  3502  0406  0825               	movf	(_Pwm_3_Current+2)^(0+128),w
  3503  0407  0020               	movlb	0	; select bank0
  3504  0408  00B5               	movwf	___ftadd@f2+2
  3505  0409  3182  22AF  3183   	fcall	___ftadd
  3506  040C  0020               	movlb	0	; select bank0
  3507  040D  0830               	movf	?___ftadd,w
  3508  040E  0021               	movlb	1	; select bank1
  3509  040F  00A3               	movwf	_Pwm_3_Current^(0+128)
  3510  0410  0020               	movlb	0	; select bank0
  3511  0411  0831               	movf	?___ftadd+1,w
  3512  0412  0021               	movlb	1	; select bank1
  3513  0413  00A4               	movwf	(_Pwm_3_Current+1)^(0+128)
  3514  0414  0020               	movlb	0	; select bank0
  3515  0415  0832               	movf	?___ftadd+2,w
  3516  0416  0021               	movlb	1	; select bank1
  3517  0417  00A5               	movwf	(_Pwm_3_Current+2)^(0+128)
  3518                           
  3519                           ;main.c: 106: PWM1_LoadDutyValue(Heartbeat(Pwm_1_Current));
  3520  0418  0835               	movf	_Pwm_1_Current^(0+128),w
  3521  0419  0020               	movlb	0	; select bank0
  3522  041A  00EB               	movwf	Heartbeat@SetVal
  3523  041B  0021               	movlb	1	; select bank1
  3524  041C  0836               	movf	(_Pwm_1_Current+1)^(0+128),w
  3525  041D  0020               	movlb	0	; select bank0
  3526  041E  00EC               	movwf	Heartbeat@SetVal+1
  3527  041F  0021               	movlb	1	; select bank1
  3528  0420  0837               	movf	(_Pwm_1_Current+2)^(0+128),w
  3529  0421  0020               	movlb	0	; select bank0
  3530  0422  00ED               	movwf	Heartbeat@SetVal+2
  3531  0423  3181  21E4  3183   	fcall	_Heartbeat
  3532  0426  0020               	movlb	0	; select bank0
  3533  0427  086B               	movf	?_Heartbeat,w
  3534  0428  0021               	movlb	1	; select bank1
  3535  0429  00CF               	movwf	_Step$768^(0+128)
  3536  042A  0020               	movlb	0	; select bank0
  3537  042B  086C               	movf	?_Heartbeat+1,w
  3538  042C  0021               	movlb	1	; select bank1
  3539  042D  00D0               	movwf	(_Step$768+1)^(0+128)
  3540  042E  0020               	movlb	0	; select bank0
  3541  042F  086D               	movf	?_Heartbeat+2,w
  3542  0430  0021               	movlb	1	; select bank1
  3543  0431  00D1               	movwf	(_Step$768+2)^(0+128)
  3544                           
  3545                           ;main.c: 106: PWM1_LoadDutyValue(Heartbeat(Pwm_1_Current));
  3546  0432  084F               	movf	_Step$768^(0+128),w
  3547  0433  00F0               	movwf	___fttol@f1
  3548  0434  0850               	movf	(_Step$768+1)^(0+128),w
  3549  0435  00F1               	movwf	___fttol@f1+1
  3550  0436  0851               	movf	(_Step$768+2)^(0+128),w
  3551  0437  00F2               	movwf	___fttol@f1+2
  3552  0438  318F  277A  3183   	fcall	___fttol
  3553  043B  0871               	movf	?___fttol+1,w
  3554  043C  0020               	movlb	0	; select bank0
  3555  043D  00EF               	movwf	PWM1_LoadDutyValue@dutyValue+1
  3556  043E  0870               	movf	?___fttol,w
  3557  043F  00EE               	movwf	PWM1_LoadDutyValue@dutyValue
  3558  0440  318C  246C  3183   	fcall	_PWM1_LoadDutyValue
  3559                           
  3560                           ;main.c: 107: PWM2_LoadDutyValue(Heartbeat(Pwm_2_Current));
  3561  0443  0021               	movlb	1	; select bank1
  3562  0444  082C               	movf	_Pwm_2_Current^(0+128),w
  3563  0445  0020               	movlb	0	; select bank0
  3564  0446  00EB               	movwf	Heartbeat@SetVal
  3565  0447  0021               	movlb	1	; select bank1
  3566  0448  082D               	movf	(_Pwm_2_Current+1)^(0+128),w
  3567  0449  0020               	movlb	0	; select bank0
  3568  044A  00EC               	movwf	Heartbeat@SetVal+1
  3569  044B  0021               	movlb	1	; select bank1
  3570  044C  082E               	movf	(_Pwm_2_Current+2)^(0+128),w
  3571  044D  0020               	movlb	0	; select bank0
  3572  044E  00ED               	movwf	Heartbeat@SetVal+2
  3573  044F  3181  21E4  3183   	fcall	_Heartbeat
  3574  0452  0020               	movlb	0	; select bank0
  3575  0453  086B               	movf	?_Heartbeat,w
  3576  0454  0021               	movlb	1	; select bank1
  3577  0455  00CF               	movwf	_Step$768^(0+128)
  3578  0456  0020               	movlb	0	; select bank0
  3579  0457  086C               	movf	?_Heartbeat+1,w
  3580  0458  0021               	movlb	1	; select bank1
  3581  0459  00D0               	movwf	(_Step$768+1)^(0+128)
  3582  045A  0020               	movlb	0	; select bank0
  3583  045B  086D               	movf	?_Heartbeat+2,w
  3584  045C  0021               	movlb	1	; select bank1
  3585  045D  00D1               	movwf	(_Step$768+2)^(0+128)
  3586                           
  3587                           ;main.c: 107: PWM2_LoadDutyValue(Heartbeat(Pwm_2_Current));
  3588  045E  084F               	movf	_Step$768^(0+128),w
  3589  045F  00F0               	movwf	___fttol@f1
  3590  0460  0850               	movf	(_Step$768+1)^(0+128),w
  3591  0461  00F1               	movwf	___fttol@f1+1
  3592  0462  0851               	movf	(_Step$768+2)^(0+128),w
  3593  0463  00F2               	movwf	___fttol@f1+2
  3594  0464  318F  277A  3183   	fcall	___fttol
  3595  0467  0871               	movf	?___fttol+1,w
  3596  0468  0020               	movlb	0	; select bank0
  3597  0469  00EF               	movwf	PWM2_LoadDutyValue@dutyValue+1
  3598  046A  0870               	movf	?___fttol,w
  3599  046B  00EE               	movwf	PWM2_LoadDutyValue@dutyValue
  3600  046C  318C  248C  3183   	fcall	_PWM2_LoadDutyValue
  3601                           
  3602                           ;main.c: 108: PWM3_LoadDutyValue(Heartbeat(Pwm_3_Current));
  3603  046F  0021               	movlb	1	; select bank1
  3604  0470  0823               	movf	_Pwm_3_Current^(0+128),w
  3605  0471  0020               	movlb	0	; select bank0
  3606  0472  00EB               	movwf	Heartbeat@SetVal
  3607  0473  0021               	movlb	1	; select bank1
  3608  0474  0824               	movf	(_Pwm_3_Current+1)^(0+128),w
  3609  0475  0020               	movlb	0	; select bank0
  3610  0476  00EC               	movwf	Heartbeat@SetVal+1
  3611  0477  0021               	movlb	1	; select bank1
  3612  0478  0825               	movf	(_Pwm_3_Current+2)^(0+128),w
  3613  0479  0020               	movlb	0	; select bank0
  3614  047A  00ED               	movwf	Heartbeat@SetVal+2
  3615  047B  3181  21E4  3183   	fcall	_Heartbeat
  3616  047E  0020               	movlb	0	; select bank0
  3617  047F  086B               	movf	?_Heartbeat,w
  3618  0480  0021               	movlb	1	; select bank1
  3619  0481  00CF               	movwf	_Step$768^(0+128)
  3620  0482  0020               	movlb	0	; select bank0
  3621  0483  086C               	movf	?_Heartbeat+1,w
  3622  0484  0021               	movlb	1	; select bank1
  3623  0485  00D0               	movwf	(_Step$768+1)^(0+128)
  3624  0486  0020               	movlb	0	; select bank0
  3625  0487  086D               	movf	?_Heartbeat+2,w
  3626  0488  0021               	movlb	1	; select bank1
  3627  0489  00D1               	movwf	(_Step$768+2)^(0+128)
  3628                           
  3629                           ;main.c: 108: PWM3_LoadDutyValue(Heartbeat(Pwm_3_Current));
  3630  048A  084F               	movf	_Step$768^(0+128),w
  3631  048B  00F0               	movwf	___fttol@f1
  3632  048C  0850               	movf	(_Step$768+1)^(0+128),w
  3633  048D  00F1               	movwf	___fttol@f1+1
  3634  048E  0851               	movf	(_Step$768+2)^(0+128),w
  3635  048F  00F2               	movwf	___fttol@f1+2
  3636  0490  318F  277A  3183   	fcall	___fttol
  3637  0493  0871               	movf	?___fttol+1,w
  3638  0494  0020               	movlb	0	; select bank0
  3639  0495  00EF               	movwf	PWM3_LoadDutyValue@dutyValue+1
  3640  0496  0870               	movf	?___fttol,w
  3641  0497  00EE               	movwf	PWM3_LoadDutyValue@dutyValue
  3642  0498  318C  2431  3183   	fcall	_PWM3_LoadDutyValue
  3643                           
  3644                           ;main.c: 110: _delay((unsigned long)((10)*(16000000/4000.0)));
  3645  049B  3034               	movlw	52
  3646  049C  0021               	movlb	1	; select bank1
  3647  049D  00CE               	movwf	??_Step^(0+128)
  3648  049E  30F1               	movlw	241
  3649  049F                     u2187:	
  3650  049F  0B89               	decfsz	9,f
  3651  04A0  2C9F               	goto	u2187
  3652  04A1  0BCE               	decfsz	??_Step^(0+128),f
  3653  04A2  2C9F               	goto	u2187
  3654  04A3  3200               	nop2
  3655                           
  3656                           ;main.c: 112: timeSinceLastUpdate++;
  3657  04A4  3001               	movlw	1
  3658  04A5  0021               	movlb	1	; select bank1
  3659  04A6  07BF               	addwf	_timeSinceLastUpdate^(0+128),f
  3660  04A7  3000               	movlw	0
  3661  04A8  3DC0               	addwfc	(_timeSinceLastUpdate+1)^(0+128),f
  3662                           
  3663                           ;main.c: 114: if(timeSinceLastUpdate > (1000 * 1.1)){
  3664  04A9  3080               	movlw	128
  3665  04AA  0020               	movlb	0	; select bank0
  3666  04AB  00A0               	movwf	___ftge@ff1
  3667  04AC  3089               	movlw	137
  3668  04AD  00A1               	movwf	___ftge@ff1+1
  3669  04AE  3044               	movlw	68
  3670  04AF  00A2               	movwf	___ftge@ff1+2
  3671  04B0  0021               	movlb	1	; select bank1
  3672  04B1  0840               	movf	(_timeSinceLastUpdate+1)^(0+128),w
  3673  04B2  00F9               	movwf	___lwtoft@c+1
  3674  04B3  083F               	movf	_timeSinceLastUpdate^(0+128),w
  3675  04B4  00F8               	movwf	___lwtoft@c
  3676  04B5  318B  23EE  3183   	fcall	___lwtoft
  3677  04B8  0878               	movf	?___lwtoft,w
  3678  04B9  0020               	movlb	0	; select bank0
  3679  04BA  00A3               	movwf	___ftge@ff2
  3680  04BB  0879               	movf	?___lwtoft+1,w
  3681  04BC  00A4               	movwf	___ftge@ff2+1
  3682  04BD  087A               	movf	?___lwtoft+2,w
  3683  04BE  00A5               	movwf	___ftge@ff2+2
  3684  04BF  318D  2532  3183   	fcall	___ftge
  3685  04C2  1803               	btfsc	3,0
  3686  04C3  2CC7               	goto	l1828
  3687                           
  3688                           ;main.c: 115: Generate_Desired();
  3689  04C4  3186  262D  3183   	fcall	_Generate_Desired
  3690  04C7                     l1828:	
  3691                           
  3692                           ;main.c: 116: }
  3693                           ;main.c: 118: heartbeat++;
  3694  04C7  3001               	movlw	1
  3695  04C8  0021               	movlb	1	; select bank1
  3696  04C9  07BD               	addwf	_heartbeat^(0+128),f
  3697  04CA  3000               	movlw	0
  3698  04CB  3DBE               	addwfc	(_heartbeat+1)^(0+128),f
  3699                           
  3700                           ;main.c: 120: if(heartbeat > 100){
  3701  04CC  3000               	movlw	0
  3702  04CD  023E               	subwf	(_heartbeat+1)^(0+128),w
  3703  04CE  3065               	movlw	101
  3704  04CF  1903               	skipnz
  3705  04D0  023D               	subwf	_heartbeat^(0+128),w
  3706  04D1  1C03               	skipc
  3707  04D2  0008               	return
  3708                           
  3709                           ;main.c: 121: heartbeat = 0;
  3710  04D3  01BD               	clrf	_heartbeat^(0+128)
  3711  04D4  01BE               	clrf	(_heartbeat+1)^(0+128)
  3712  04D5  0008               	return
  3713  04D6                     __end_of_Step:	
  3714                           
  3715                           	psect	text13
  3716  0C31                     __ptext13:	
  3717 ;; *************** function _PWM3_LoadDutyValue *****************
  3718 ;; Defined at:
  3719 ;;		line 74 in file "mcc_generated_files/pwm3.c"
  3720 ;; Parameters:    Size  Location     Type
  3721 ;;  dutyValue       2   78[BANK0 ] unsigned int 
  3722 ;; Auto vars:     Size  Location     Type
  3723 ;;		None
  3724 ;; Return value:  Size  Location     Type
  3725 ;;                  1    wreg      void 
  3726 ;; Registers used:
  3727 ;;		wreg, status,2, status,0
  3728 ;; Tracked objects:
  3729 ;;		On entry : 0/0
  3730 ;;		On exit  : 0/0
  3731 ;;		Unchanged: 0/0
  3732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3733 ;;      Params:         0       2       0       0       0       0       0       0
  3734 ;;      Locals:         0       0       0       0       0       0       0       0
  3735 ;;      Temps:          0       0       2       0       0       0       0       0
  3736 ;;      Totals:         0       2       2       0       0       0       0       0
  3737 ;;Total ram usage:        4 bytes
  3738 ;; Hardware stack levels used:    1
  3739 ;; This function calls:
  3740 ;;		Nothing
  3741 ;; This function is called by:
  3742 ;;		_Step
  3743 ;; This function uses a non-reentrant model
  3744 ;;
  3745                           
  3746                           
  3747                           ;psect for function _PWM3_LoadDutyValue
  3748  0C31                     _PWM3_LoadDutyValue:	
  3749                           
  3750                           ;pwm3.c: 77: PWM3DCH = (dutyValue & 0x03FC)>>2;
  3751                           
  3752                           ;incstack = 0
  3753                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2+status,0]
  3754  0C31  0020               	movlb	0	; select bank0
  3755  0C32  086F               	movf	PWM3_LoadDutyValue@dutyValue+1,w
  3756  0C33  0021               	movlb	1	; select bank1
  3757  0C34  00CD               	movwf	(??_PWM3_LoadDutyValue^(0+128)+1)
  3758  0C35  0020               	movlb	0	; select bank0
  3759  0C36  086E               	movf	PWM3_LoadDutyValue@dutyValue,w
  3760  0C37  0021               	movlb	1	; select bank1
  3761  0C38  00CC               	movwf	??_PWM3_LoadDutyValue^(0+128)
  3762  0C39  36CD               	lsrf	(??_PWM3_LoadDutyValue^(0+128)+1),f
  3763  0C3A  0CCC               	rrf	??_PWM3_LoadDutyValue^(0+128),f
  3764  0C3B  36CD               	lsrf	(??_PWM3_LoadDutyValue^(0+128)+1),f
  3765  0C3C  0CCC               	rrf	??_PWM3_LoadDutyValue^(0+128),f
  3766  0C3D  084C               	movf	??_PWM3_LoadDutyValue^(0+128),w
  3767  0C3E  002C               	movlb	12	; select bank12
  3768  0C3F  0098               	movwf	24	;volatile
  3769                           
  3770                           ;pwm3.c: 80: PWM3DCL = (dutyValue & 0x0003)<<6;
  3771  0C40  0020               	movlb	0	; select bank0
  3772  0C41  086E               	movf	PWM3_LoadDutyValue@dutyValue,w
  3773  0C42  3903               	andlw	3
  3774  0C43  0021               	movlb	1	; select bank1
  3775  0C44  00CC               	movwf	??_PWM3_LoadDutyValue^(0+128)
  3776  0C45  3005               	movlw	5
  3777  0C46                     u2085:	
  3778  0C46  35CC               	lslf	??_PWM3_LoadDutyValue^(0+128),f
  3779  0C47  3EFF               	addlw	-1
  3780  0C48  1D03               	skipz
  3781  0C49  2C46               	goto	u2085
  3782  0C4A  354C               	lslf	??_PWM3_LoadDutyValue^(0+128),w
  3783  0C4B  002C               	movlb	12	; select bank12
  3784  0C4C  0097               	movwf	23	;volatile
  3785  0C4D  0008               	return
  3786  0C4E                     __end_of_PWM3_LoadDutyValue:	
  3787                           
  3788                           	psect	text14
  3789  0C8C                     __ptext14:	
  3790 ;; *************** function _PWM2_LoadDutyValue *****************
  3791 ;; Defined at:
  3792 ;;		line 80 in file "mcc_generated_files/pwm2.c"
  3793 ;; Parameters:    Size  Location     Type
  3794 ;;  dutyValue       2   78[BANK0 ] unsigned int 
  3795 ;; Auto vars:     Size  Location     Type
  3796 ;;		None
  3797 ;; Return value:  Size  Location     Type
  3798 ;;                  1    wreg      void 
  3799 ;; Registers used:
  3800 ;;		wreg, status,2, status,0
  3801 ;; Tracked objects:
  3802 ;;		On entry : 0/0
  3803 ;;		On exit  : 0/0
  3804 ;;		Unchanged: 0/0
  3805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3806 ;;      Params:         0       2       0       0       0       0       0       0
  3807 ;;      Locals:         0       0       0       0       0       0       0       0
  3808 ;;      Temps:          0       0       2       0       0       0       0       0
  3809 ;;      Totals:         0       2       2       0       0       0       0       0
  3810 ;;Total ram usage:        4 bytes
  3811 ;; Hardware stack levels used:    1
  3812 ;; This function calls:
  3813 ;;		Nothing
  3814 ;; This function is called by:
  3815 ;;		_Step
  3816 ;; This function uses a non-reentrant model
  3817 ;;
  3818                           
  3819                           
  3820                           ;psect for function _PWM2_LoadDutyValue
  3821  0C8C                     _PWM2_LoadDutyValue:	
  3822                           
  3823                           ;pwm2.c: 83: CCPR2L = ((dutyValue & 0x03FC)>>2);
  3824                           
  3825                           ;incstack = 0
  3826                           ; Regs used in _PWM2_LoadDutyValue: [wreg+status,2+status,0]
  3827  0C8C  0020               	movlb	0	; select bank0
  3828  0C8D  086F               	movf	PWM2_LoadDutyValue@dutyValue+1,w
  3829  0C8E  0021               	movlb	1	; select bank1
  3830  0C8F  00CD               	movwf	(??_PWM2_LoadDutyValue^(0+128)+1)
  3831  0C90  0020               	movlb	0	; select bank0
  3832  0C91  086E               	movf	PWM2_LoadDutyValue@dutyValue,w
  3833  0C92  0021               	movlb	1	; select bank1
  3834  0C93  00CC               	movwf	??_PWM2_LoadDutyValue^(0+128)
  3835  0C94  36CD               	lsrf	(??_PWM2_LoadDutyValue^(0+128)+1),f
  3836  0C95  0CCC               	rrf	??_PWM2_LoadDutyValue^(0+128),f
  3837  0C96  36CD               	lsrf	(??_PWM2_LoadDutyValue^(0+128)+1),f
  3838  0C97  0CCC               	rrf	??_PWM2_LoadDutyValue^(0+128),f
  3839  0C98  084C               	movf	??_PWM2_LoadDutyValue^(0+128),w
  3840  0C99  0025               	movlb	5	; select bank5
  3841  0C9A  0098               	movwf	24	;volatile
  3842                           
  3843                           ;pwm2.c: 86: CCP2CON = (CCP2CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  3844  0C9B  0020               	movlb	0	; select bank0
  3845  0C9C  086E               	movf	PWM2_LoadDutyValue@dutyValue,w
  3846  0C9D  3903               	andlw	3
  3847  0C9E  0021               	movlb	1	; select bank1
  3848  0C9F  00CC               	movwf	??_PWM2_LoadDutyValue^(0+128)
  3849  0CA0  3004               	movlw	4
  3850  0CA1                     u2075:	
  3851  0CA1  35CC               	lslf	??_PWM2_LoadDutyValue^(0+128),f
  3852  0CA2  0B89               	decfsz	9,f
  3853  0CA3  2CA1               	goto	u2075
  3854  0CA4  0025               	movlb	5	; select bank5
  3855  0CA5  081A               	movf	26,w	;volatile
  3856  0CA6  39CF               	andlw	207
  3857  0CA7  0021               	movlb	1	; select bank1
  3858  0CA8  044C               	iorwf	??_PWM2_LoadDutyValue^(0+128),w
  3859  0CA9  0025               	movlb	5	; select bank5
  3860  0CAA  009A               	movwf	26	;volatile
  3861  0CAB  0008               	return
  3862  0CAC                     __end_of_PWM2_LoadDutyValue:	
  3863                           
  3864                           	psect	text15
  3865  0C6C                     __ptext15:	
  3866 ;; *************** function _PWM1_LoadDutyValue *****************
  3867 ;; Defined at:
  3868 ;;		line 80 in file "mcc_generated_files/pwm1.c"
  3869 ;; Parameters:    Size  Location     Type
  3870 ;;  dutyValue       2   78[BANK0 ] unsigned int 
  3871 ;; Auto vars:     Size  Location     Type
  3872 ;;		None
  3873 ;; Return value:  Size  Location     Type
  3874 ;;                  1    wreg      void 
  3875 ;; Registers used:
  3876 ;;		wreg, status,2, status,0
  3877 ;; Tracked objects:
  3878 ;;		On entry : 0/0
  3879 ;;		On exit  : 0/0
  3880 ;;		Unchanged: 0/0
  3881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3882 ;;      Params:         0       2       0       0       0       0       0       0
  3883 ;;      Locals:         0       0       0       0       0       0       0       0
  3884 ;;      Temps:          0       0       2       0       0       0       0       0
  3885 ;;      Totals:         0       2       2       0       0       0       0       0
  3886 ;;Total ram usage:        4 bytes
  3887 ;; Hardware stack levels used:    1
  3888 ;; This function calls:
  3889 ;;		Nothing
  3890 ;; This function is called by:
  3891 ;;		_Step
  3892 ;; This function uses a non-reentrant model
  3893 ;;
  3894                           
  3895                           
  3896                           ;psect for function _PWM1_LoadDutyValue
  3897  0C6C                     _PWM1_LoadDutyValue:	
  3898                           
  3899                           ;pwm1.c: 83: CCPR1L = ((dutyValue & 0x03FC)>>2);
  3900                           
  3901                           ;incstack = 0
  3902                           ; Regs used in _PWM1_LoadDutyValue: [wreg+status,2+status,0]
  3903  0C6C  0020               	movlb	0	; select bank0
  3904  0C6D  086F               	movf	PWM1_LoadDutyValue@dutyValue+1,w
  3905  0C6E  0021               	movlb	1	; select bank1
  3906  0C6F  00CD               	movwf	(??_PWM1_LoadDutyValue^(0+128)+1)
  3907  0C70  0020               	movlb	0	; select bank0
  3908  0C71  086E               	movf	PWM1_LoadDutyValue@dutyValue,w
  3909  0C72  0021               	movlb	1	; select bank1
  3910  0C73  00CC               	movwf	??_PWM1_LoadDutyValue^(0+128)
  3911  0C74  36CD               	lsrf	(??_PWM1_LoadDutyValue^(0+128)+1),f
  3912  0C75  0CCC               	rrf	??_PWM1_LoadDutyValue^(0+128),f
  3913  0C76  36CD               	lsrf	(??_PWM1_LoadDutyValue^(0+128)+1),f
  3914  0C77  0CCC               	rrf	??_PWM1_LoadDutyValue^(0+128),f
  3915  0C78  084C               	movf	??_PWM1_LoadDutyValue^(0+128),w
  3916  0C79  0025               	movlb	5	; select bank5
  3917  0C7A  0091               	movwf	17	;volatile
  3918                           
  3919                           ;pwm1.c: 86: CCP1CON = (CCP1CON & 0xCF) | ((dutyValue & 0x0003)<<4);
  3920  0C7B  0020               	movlb	0	; select bank0
  3921  0C7C  086E               	movf	PWM1_LoadDutyValue@dutyValue,w
  3922  0C7D  3903               	andlw	3
  3923  0C7E  0021               	movlb	1	; select bank1
  3924  0C7F  00CC               	movwf	??_PWM1_LoadDutyValue^(0+128)
  3925  0C80  3004               	movlw	4
  3926  0C81                     u2065:	
  3927  0C81  35CC               	lslf	??_PWM1_LoadDutyValue^(0+128),f
  3928  0C82  0B89               	decfsz	9,f
  3929  0C83  2C81               	goto	u2065
  3930  0C84  0025               	movlb	5	; select bank5
  3931  0C85  0813               	movf	19,w	;volatile
  3932  0C86  39CF               	andlw	207
  3933  0C87  0021               	movlb	1	; select bank1
  3934  0C88  044C               	iorwf	??_PWM1_LoadDutyValue^(0+128),w
  3935  0C89  0025               	movlb	5	; select bank5
  3936  0C8A  0093               	movwf	19	;volatile
  3937  0C8B  0008               	return
  3938  0C8C                     __end_of_PWM1_LoadDutyValue:	
  3939                           
  3940                           	psect	text16
  3941  01E4                     __ptext16:	
  3942 ;; *************** function _Heartbeat *****************
  3943 ;; Defined at:
  3944 ;;		line 70 in file "main.c"
  3945 ;; Parameters:    Size  Location     Type
  3946 ;;  SetVal          3   75[BANK0 ] float 
  3947 ;; Auto vars:     Size  Location     Type
  3948 ;;		None
  3949 ;; Return value:  Size  Location     Type
  3950 ;;                  3   75[BANK0 ] float 
  3951 ;; Registers used:
  3952 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3953 ;; Tracked objects:
  3954 ;;		On entry : 0/0
  3955 ;;		On exit  : 0/0
  3956 ;;		Unchanged: 0/0
  3957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3958 ;;      Params:         0       3       0       0       0       0       0       0
  3959 ;;      Locals:         0       0       9       0       0       0       0       0
  3960 ;;      Temps:          0       0       0       0       0       0       0       0
  3961 ;;      Totals:         0       3       9       0       0       0       0       0
  3962 ;;Total ram usage:       12 bytes
  3963 ;; Hardware stack levels used:    1
  3964 ;; Hardware stack levels required when called:    4
  3965 ;; This function calls:
  3966 ;;		___ftdiv
  3967 ;;		___ftge
  3968 ;;		___ftmul
  3969 ;;		___ftsub
  3970 ;;		___lwtoft
  3971 ;;		_sin
  3972 ;; This function is called by:
  3973 ;;		_Step
  3974 ;; This function uses a non-reentrant model
  3975 ;;
  3976                           
  3977                           
  3978                           ;psect for function _Heartbeat
  3979  01E4                     _Heartbeat:	
  3980                           
  3981                           ;main.c: 71: if(SetVal < 0){
  3982                           
  3983                           ;incstack = 0
  3984                           ; Regs used in _Heartbeat: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3985  01E4  0020               	movlb	0	; select bank0
  3986  01E5  086B               	movf	Heartbeat@SetVal,w
  3987  01E6  00A0               	movwf	___ftge@ff1
  3988  01E7  086C               	movf	Heartbeat@SetVal+1,w
  3989  01E8  00A1               	movwf	___ftge@ff1+1
  3990  01E9  086D               	movf	Heartbeat@SetVal+2,w
  3991  01EA  00A2               	movwf	___ftge@ff1+2
  3992  01EB  3000               	movlw	0
  3993  01EC  00A3               	movwf	___ftge@ff2
  3994  01ED  3000               	movlw	0
  3995  01EE  00A4               	movwf	___ftge@ff2+1
  3996  01EF  3000               	movlw	0
  3997  01F0  00A5               	movwf	___ftge@ff2+2
  3998  01F1  318D  2532  3181   	fcall	___ftge
  3999  01F4  1803               	btfsc	3,0
  4000  01F5  29FD               	goto	l1768
  4001                           
  4002                           ;main.c: 72: SetVal = 0;
  4003  01F6  3000               	movlw	0
  4004  01F7  0020               	movlb	0	; select bank0
  4005  01F8  00EB               	movwf	Heartbeat@SetVal
  4006  01F9  3000               	movlw	0
  4007  01FA  00EC               	movwf	Heartbeat@SetVal+1
  4008  01FB  3000               	movlw	0
  4009  01FC  2A15               	goto	L1
  4010  01FD                     l1768:	
  4011                           ;main.c: 73: } else if (SetVal > 1023){
  4012                           
  4013  01FD  30C0               	movlw	192
  4014  01FE  0020               	movlb	0	; select bank0
  4015  01FF  00A0               	movwf	___ftge@ff1
  4016  0200  307F               	movlw	127
  4017  0201  00A1               	movwf	___ftge@ff1+1
  4018  0202  3044               	movlw	68
  4019  0203  00A2               	movwf	___ftge@ff1+2
  4020  0204  086B               	movf	Heartbeat@SetVal,w
  4021  0205  00A3               	movwf	___ftge@ff2
  4022  0206  086C               	movf	Heartbeat@SetVal+1,w
  4023  0207  00A4               	movwf	___ftge@ff2+1
  4024  0208  086D               	movf	Heartbeat@SetVal+2,w
  4025  0209  00A5               	movwf	___ftge@ff2+2
  4026  020A  318D  2532  3181   	fcall	___ftge
  4027  020D  1803               	btfsc	3,0
  4028  020E  2A16               	goto	l1772
  4029                           
  4030                           ;main.c: 74: SetVal = 1023;
  4031  020F  30C0               	movlw	192
  4032  0210  0020               	movlb	0	; select bank0
  4033  0211  00EB               	movwf	Heartbeat@SetVal
  4034  0212  307F               	movlw	127
  4035  0213  00EC               	movwf	Heartbeat@SetVal+1
  4036  0214  3044               	movlw	68
  4037  0215                     L1:	
  4038  0215  00ED               	movwf	Heartbeat@SetVal+2
  4039  0216                     l1772:	
  4040                           
  4041                           ;main.c: 75: }
  4042                           ;main.c: 77: SetVal -= SetVal * 0.66 * sin(heartbeat * 3.14 / (100));
  4043  0216  0021               	movlb	1	; select bank1
  4044  0217  083E               	movf	(_heartbeat+1)^(0+128),w
  4045  0218  00F9               	movwf	___lwtoft@c+1
  4046  0219  083D               	movf	_heartbeat^(0+128),w
  4047  021A  00F8               	movwf	___lwtoft@c
  4048  021B  318B  23EE  3181   	fcall	___lwtoft
  4049  021E  0878               	movf	?___lwtoft,w
  4050  021F  0020               	movlb	0	; select bank0
  4051  0220  00A3               	movwf	___ftmul@f2
  4052  0221  0879               	movf	?___lwtoft+1,w
  4053  0222  00A4               	movwf	___ftmul@f2+1
  4054  0223  087A               	movf	?___lwtoft+2,w
  4055  0224  00A5               	movwf	___ftmul@f2+2
  4056  0225  30F6               	movlw	246
  4057  0226  00A0               	movwf	___ftmul@f1
  4058  0227  3048               	movlw	72
  4059  0228  00A1               	movwf	___ftmul@f1+1
  4060  0229  3040               	movlw	64
  4061  022A  00A2               	movwf	___ftmul@f1+2
  4062  022B  3181  2130  3181   	fcall	___ftmul
  4063  022E  0020               	movlb	0	; select bank0
  4064  022F  0820               	movf	?___ftmul,w
  4065  0230  00CA               	movwf	___ftdiv@f1
  4066  0231  0821               	movf	?___ftmul+1,w
  4067  0232  00CB               	movwf	___ftdiv@f1+1
  4068  0233  0822               	movf	?___ftmul+2,w
  4069  0234  00CC               	movwf	___ftdiv@f1+2
  4070  0235  3000               	movlw	0
  4071  0236  00C7               	movwf	___ftdiv@f2
  4072  0237  30C8               	movlw	200
  4073  0238  00C8               	movwf	___ftdiv@f2+1
  4074  0239  3042               	movlw	66
  4075  023A  00C9               	movwf	___ftdiv@f2+2
  4076  023B  3180  2087  3181   	fcall	___ftdiv
  4077  023E  0020               	movlb	0	; select bank0
  4078  023F  0847               	movf	?___ftdiv,w
  4079  0240  0021               	movlb	1	; select bank1
  4080  0241  00C3               	movwf	_Heartbeat$764^(0+128)
  4081  0242  0020               	movlb	0	; select bank0
  4082  0243  0848               	movf	?___ftdiv+1,w
  4083  0244  0021               	movlb	1	; select bank1
  4084  0245  00C4               	movwf	(_Heartbeat$764+1)^(0+128)
  4085  0246  0020               	movlb	0	; select bank0
  4086  0247  0849               	movf	?___ftdiv+2,w
  4087  0248  0021               	movlb	1	; select bank1
  4088  0249  00C5               	movwf	(_Heartbeat$764+2)^(0+128)
  4089                           
  4090                           ;main.c: 75: }
  4091                           ;main.c: 77: SetVal -= SetVal * 0.66 * sin(heartbeat * 3.14 / (100));
  4092  024A  0843               	movf	_Heartbeat$764^(0+128),w
  4093  024B  0020               	movlb	0	; select bank0
  4094  024C  00DD               	movwf	sin@f
  4095  024D  0021               	movlb	1	; select bank1
  4096  024E  0844               	movf	(_Heartbeat$764+1)^(0+128),w
  4097  024F  0020               	movlb	0	; select bank0
  4098  0250  00DE               	movwf	sin@f+1
  4099  0251  0021               	movlb	1	; select bank1
  4100  0252  0845               	movf	(_Heartbeat$764+2)^(0+128),w
  4101  0253  0020               	movlb	0	; select bank0
  4102  0254  00DF               	movwf	sin@f+2
  4103  0255  3184  24D6  3181   	fcall	_sin
  4104  0258  0020               	movlb	0	; select bank0
  4105  0259  085D               	movf	?_sin,w
  4106  025A  0021               	movlb	1	; select bank1
  4107  025B  00C6               	movwf	_Heartbeat$765^(0+128)
  4108  025C  0020               	movlb	0	; select bank0
  4109  025D  085E               	movf	?_sin+1,w
  4110  025E  0021               	movlb	1	; select bank1
  4111  025F  00C7               	movwf	(_Heartbeat$765+1)^(0+128)
  4112  0260  0020               	movlb	0	; select bank0
  4113  0261  085F               	movf	?_sin+2,w
  4114  0262  0021               	movlb	1	; select bank1
  4115  0263  00C8               	movwf	(_Heartbeat$765+2)^(0+128)
  4116                           
  4117                           ;main.c: 75: }
  4118                           ;main.c: 77: SetVal -= SetVal * 0.66 * sin(heartbeat * 3.14 / (100));
  4119  0264  0846               	movf	_Heartbeat$765^(0+128),w
  4120  0265  0020               	movlb	0	; select bank0
  4121  0266  00A3               	movwf	___ftmul@f2
  4122  0267  0021               	movlb	1	; select bank1
  4123  0268  0847               	movf	(_Heartbeat$765+1)^(0+128),w
  4124  0269  0020               	movlb	0	; select bank0
  4125  026A  00A4               	movwf	___ftmul@f2+1
  4126  026B  0021               	movlb	1	; select bank1
  4127  026C  0848               	movf	(_Heartbeat$765+2)^(0+128),w
  4128  026D  0020               	movlb	0	; select bank0
  4129  026E  00A5               	movwf	___ftmul@f2+2
  4130  026F  086B               	movf	Heartbeat@SetVal,w
  4131  0270  00A0               	movwf	___ftmul@f1
  4132  0271  086C               	movf	Heartbeat@SetVal+1,w
  4133  0272  00A1               	movwf	___ftmul@f1+1
  4134  0273  086D               	movf	Heartbeat@SetVal+2,w
  4135  0274  00A2               	movwf	___ftmul@f1+2
  4136  0275  3181  2130  3181   	fcall	___ftmul
  4137  0278  0020               	movlb	0	; select bank0
  4138  0279  0820               	movf	?___ftmul,w
  4139  027A  0021               	movlb	1	; select bank1
  4140  027B  00C9               	movwf	_Heartbeat$766^(0+128)
  4141  027C  0020               	movlb	0	; select bank0
  4142  027D  0821               	movf	?___ftmul+1,w
  4143  027E  0021               	movlb	1	; select bank1
  4144  027F  00CA               	movwf	(_Heartbeat$766+1)^(0+128)
  4145  0280  0020               	movlb	0	; select bank0
  4146  0281  0822               	movf	?___ftmul+2,w
  4147  0282  0021               	movlb	1	; select bank1
  4148  0283  00CB               	movwf	(_Heartbeat$766+2)^(0+128)
  4149                           
  4150                           ;main.c: 75: }
  4151                           ;main.c: 77: SetVal -= SetVal * 0.66 * sin(heartbeat * 3.14 / (100));
  4152  0284  0849               	movf	_Heartbeat$766^(0+128),w
  4153  0285  0020               	movlb	0	; select bank0
  4154  0286  00A3               	movwf	___ftmul@f2
  4155  0287  0021               	movlb	1	; select bank1
  4156  0288  084A               	movf	(_Heartbeat$766+1)^(0+128),w
  4157  0289  0020               	movlb	0	; select bank0
  4158  028A  00A4               	movwf	___ftmul@f2+1
  4159  028B  0021               	movlb	1	; select bank1
  4160  028C  084B               	movf	(_Heartbeat$766+2)^(0+128),w
  4161  028D  0020               	movlb	0	; select bank0
  4162  028E  00A5               	movwf	___ftmul@f2+2
  4163  028F  30F6               	movlw	246
  4164  0290  00A0               	movwf	___ftmul@f1
  4165  0291  3028               	movlw	40
  4166  0292  00A1               	movwf	___ftmul@f1+1
  4167  0293  303F               	movlw	63
  4168  0294  00A2               	movwf	___ftmul@f1+2
  4169  0295  3181  2130  3181   	fcall	___ftmul
  4170  0298  0020               	movlb	0	; select bank0
  4171  0299  0820               	movf	?___ftmul,w
  4172  029A  00D7               	movwf	___ftsub@f2
  4173  029B  0821               	movf	?___ftmul+1,w
  4174  029C  00D8               	movwf	___ftsub@f2+1
  4175  029D  0822               	movf	?___ftmul+2,w
  4176  029E  00D9               	movwf	___ftsub@f2+2
  4177  029F  086B               	movf	Heartbeat@SetVal,w
  4178  02A0  00DA               	movwf	___ftsub@f1
  4179  02A1  086C               	movf	Heartbeat@SetVal+1,w
  4180  02A2  00DB               	movwf	___ftsub@f1+1
  4181  02A3  086D               	movf	Heartbeat@SetVal+2,w
  4182  02A4  00DC               	movwf	___ftsub@f1+2
  4183  02A5  318C  244E         	fcall	___ftsub
  4184  02A7  0020               	movlb	0	; select bank0
  4185  02A8  0857               	movf	?___ftsub,w
  4186  02A9  00EB               	movwf	Heartbeat@SetVal
  4187  02AA  0858               	movf	?___ftsub+1,w
  4188  02AB  00EC               	movwf	Heartbeat@SetVal+1
  4189  02AC  0859               	movf	?___ftsub+2,w
  4190  02AD  00ED               	movwf	Heartbeat@SetVal+2
  4191                           
  4192                           ;main.c: 79: return SetVal;
  4193  02AE  0008               	return
  4194  02AF                     __end_of_Heartbeat:	
  4195                           
  4196                           	psect	text17
  4197  04D6                     __ptext17:	
  4198 ;; *************** function _sin *****************
  4199 ;; Defined at:
  4200 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\sin.c"
  4201 ;; Parameters:    Size  Location     Type
  4202 ;;  f               3   61[BANK0 ] float 
  4203 ;; Auto vars:     Size  Location     Type
  4204 ;;  x2              3   71[BANK0 ] float 
  4205 ;;  y               3   65[BANK0 ] float 
  4206 ;;  sgn             1   74[BANK0 ] unsigned char 
  4207 ;; Return value:  Size  Location     Type
  4208 ;;                  3   61[BANK0 ] unsigned char 
  4209 ;; Registers used:
  4210 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4211 ;; Tracked objects:
  4212 ;;		On entry : 0/0
  4213 ;;		On exit  : 0/0
  4214 ;;		Unchanged: 0/0
  4215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4216 ;;      Params:         0       3       0       0       0       0       0       0
  4217 ;;      Locals:         0      10       0       0       0       0       0       0
  4218 ;;      Temps:          0       1       0       0       0       0       0       0
  4219 ;;      Totals:         0      14       0       0       0       0       0       0
  4220 ;;Total ram usage:       14 bytes
  4221 ;; Hardware stack levels used:    1
  4222 ;; Hardware stack levels required when called:    3
  4223 ;; This function calls:
  4224 ;;		___ftadd
  4225 ;;		___ftdiv
  4226 ;;		___ftge
  4227 ;;		___ftmul
  4228 ;;		___ftneg
  4229 ;;		___ftsub
  4230 ;;		_eval_poly
  4231 ;;		_floor
  4232 ;; This function is called by:
  4233 ;;		_Heartbeat
  4234 ;; This function uses a non-reentrant model
  4235 ;;
  4236                           
  4237                           
  4238                           ;psect for function _sin
  4239  04D6                     _sin:	
  4240                           
  4241                           ;incstack = 0
  4242                           ; Regs used in _sin: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4243  04D6  0020               	movlb	0	; select bank0
  4244  04D7  01EA               	clrf	sin@sgn
  4245  04D8  085D               	movf	sin@f,w
  4246  04D9  00A0               	movwf	___ftge@ff1
  4247  04DA  085E               	movf	sin@f+1,w
  4248  04DB  00A1               	movwf	___ftge@ff1+1
  4249  04DC  085F               	movf	sin@f+2,w
  4250  04DD  00A2               	movwf	___ftge@ff1+2
  4251  04DE  3000               	movlw	0
  4252  04DF  00A3               	movwf	___ftge@ff2
  4253  04E0  3000               	movlw	0
  4254  04E1  00A4               	movwf	___ftge@ff2+1
  4255  04E2  3000               	movlw	0
  4256  04E3  00A5               	movwf	___ftge@ff2+2
  4257  04E4  318D  2532  3184   	fcall	___ftge
  4258  04E7  1803               	btfsc	3,0
  4259  04E8  2CFC               	goto	l1708
  4260  04E9  0020               	movlb	0	; select bank0
  4261  04EA  085D               	movf	sin@f,w
  4262  04EB  00F0               	movwf	___ftneg@f1
  4263  04EC  085E               	movf	sin@f+1,w
  4264  04ED  00F1               	movwf	___ftneg@f1+1
  4265  04EE  085F               	movf	sin@f+2,w
  4266  04EF  00F2               	movwf	___ftneg@f1+2
  4267  04F0  318B  23BC  3184   	fcall	___ftneg
  4268  04F3  0870               	movf	?___ftneg,w
  4269  04F4  0020               	movlb	0	; select bank0
  4270  04F5  00DD               	movwf	sin@f
  4271  04F6  0871               	movf	?___ftneg+1,w
  4272  04F7  00DE               	movwf	sin@f+1
  4273  04F8  0872               	movf	?___ftneg+2,w
  4274  04F9  00DF               	movwf	sin@f+2
  4275  04FA  01EA               	clrf	sin@sgn
  4276  04FB  0AEA               	incf	sin@sgn,f
  4277  04FC                     l1708:	
  4278  04FC  30FA               	movlw	250
  4279  04FD  0020               	movlb	0	; select bank0
  4280  04FE  00A0               	movwf	___ftmul@f1
  4281  04FF  3022               	movlw	34
  4282  0500  00A1               	movwf	___ftmul@f1+1
  4283  0501  303E               	movlw	62
  4284  0502  00A2               	movwf	___ftmul@f1+2
  4285  0503  085D               	movf	sin@f,w
  4286  0504  00A3               	movwf	___ftmul@f2
  4287  0505  085E               	movf	sin@f+1,w
  4288  0506  00A4               	movwf	___ftmul@f2+1
  4289  0507  085F               	movf	sin@f+2,w
  4290  0508  00A5               	movwf	___ftmul@f2+2
  4291  0509  3181  2130  3184   	fcall	___ftmul
  4292  050C  0020               	movlb	0	; select bank0
  4293  050D  0820               	movf	?___ftmul,w
  4294  050E  00DD               	movwf	sin@f
  4295  050F  0821               	movf	?___ftmul+1,w
  4296  0510  00DE               	movwf	sin@f+1
  4297  0511  0822               	movf	?___ftmul+2,w
  4298  0512  00DF               	movwf	sin@f+2
  4299  0513  085D               	movf	sin@f,w
  4300  0514  00BD               	movwf	floor@x
  4301  0515  085E               	movf	sin@f+1,w
  4302  0516  00BE               	movwf	floor@x+1
  4303  0517  085F               	movf	sin@f+2,w
  4304  0518  00BF               	movwf	floor@x+2
  4305  0519  318E  26F5  3184   	fcall	_floor
  4306  051C  0020               	movlb	0	; select bank0
  4307  051D  083D               	movf	?_floor,w
  4308  051E  00D7               	movwf	___ftsub@f2
  4309  051F  083E               	movf	?_floor+1,w
  4310  0520  00D8               	movwf	___ftsub@f2+1
  4311  0521  083F               	movf	?_floor+2,w
  4312  0522  00D9               	movwf	___ftsub@f2+2
  4313  0523  085D               	movf	sin@f,w
  4314  0524  00DA               	movwf	___ftsub@f1
  4315  0525  085E               	movf	sin@f+1,w
  4316  0526  00DB               	movwf	___ftsub@f1+1
  4317  0527  085F               	movf	sin@f+2,w
  4318  0528  00DC               	movwf	___ftsub@f1+2
  4319  0529  318C  244E  3184   	fcall	___ftsub
  4320  052C  0020               	movlb	0	; select bank0
  4321  052D  0857               	movf	?___ftsub,w
  4322  052E  00DD               	movwf	sin@f
  4323  052F  0858               	movf	?___ftsub+1,w
  4324  0530  00DE               	movwf	sin@f+1
  4325  0531  0859               	movf	?___ftsub+2,w
  4326  0532  00DF               	movwf	sin@f+2
  4327  0533  3000               	movlw	0
  4328  0534  00A0               	movwf	___ftmul@f1
  4329  0535  3080               	movlw	128
  4330  0536  00A1               	movwf	___ftmul@f1+1
  4331  0537  3040               	movlw	64
  4332  0538  00A2               	movwf	___ftmul@f1+2
  4333  0539  085D               	movf	sin@f,w
  4334  053A  00A3               	movwf	___ftmul@f2
  4335  053B  085E               	movf	sin@f+1,w
  4336  053C  00A4               	movwf	___ftmul@f2+1
  4337  053D  085F               	movf	sin@f+2,w
  4338  053E  00A5               	movwf	___ftmul@f2+2
  4339  053F  3181  2130  3184   	fcall	___ftmul
  4340  0542  0020               	movlb	0	; select bank0
  4341  0543  0820               	movf	?___ftmul,w
  4342  0544  00DD               	movwf	sin@f
  4343  0545  0821               	movf	?___ftmul+1,w
  4344  0546  00DE               	movwf	sin@f+1
  4345  0547  0822               	movf	?___ftmul+2,w
  4346  0548  00DF               	movwf	sin@f+2
  4347  0549  3000               	movlw	0
  4348  054A  00A0               	movwf	___ftge@ff1
  4349  054B  3000               	movlw	0
  4350  054C  00A1               	movwf	___ftge@ff1+1
  4351  054D  3040               	movlw	64
  4352  054E  00A2               	movwf	___ftge@ff1+2
  4353  054F  085D               	movf	sin@f,w
  4354  0550  00A3               	movwf	___ftge@ff2
  4355  0551  085E               	movf	sin@f+1,w
  4356  0552  00A4               	movwf	___ftge@ff2+1
  4357  0553  085F               	movf	sin@f+2,w
  4358  0554  00A5               	movwf	___ftge@ff2+2
  4359  0555  318D  2532  3184   	fcall	___ftge
  4360  0558  1803               	btfsc	3,0
  4361  0559  2D7A               	goto	l1720
  4362  055A  3000               	movlw	0
  4363  055B  0020               	movlb	0	; select bank0
  4364  055C  00D7               	movwf	___ftsub@f2
  4365  055D  3000               	movlw	0
  4366  055E  00D8               	movwf	___ftsub@f2+1
  4367  055F  3040               	movlw	64
  4368  0560  00D9               	movwf	___ftsub@f2+2
  4369  0561  085D               	movf	sin@f,w
  4370  0562  00DA               	movwf	___ftsub@f1
  4371  0563  085E               	movf	sin@f+1,w
  4372  0564  00DB               	movwf	___ftsub@f1+1
  4373  0565  085F               	movf	sin@f+2,w
  4374  0566  00DC               	movwf	___ftsub@f1+2
  4375  0567  318C  244E  3184   	fcall	___ftsub
  4376  056A  0020               	movlb	0	; select bank0
  4377  056B  0857               	movf	?___ftsub,w
  4378  056C  00DD               	movwf	sin@f
  4379  056D  0858               	movf	?___ftsub+1,w
  4380  056E  00DE               	movwf	sin@f+1
  4381  056F  0859               	movf	?___ftsub+2,w
  4382  0570  00DF               	movwf	sin@f+2
  4383  0571  086A               	movf	sin@sgn,w
  4384  0572  1D03               	btfss	3,2
  4385  0573  2D76               	goto	u2000
  4386  0574  3001               	movlw	1
  4387  0575  2D77               	goto	u2010
  4388  0576                     u2000:	
  4389  0576  3000               	movlw	0
  4390  0577                     u2010:	
  4391  0577  00E0               	movwf	??_sin
  4392  0578  0860               	movf	??_sin,w
  4393  0579  00EA               	movwf	sin@sgn
  4394  057A                     l1720:	
  4395  057A  3000               	movlw	0
  4396  057B  0020               	movlb	0	; select bank0
  4397  057C  00A0               	movwf	___ftge@ff1
  4398  057D  3080               	movlw	128
  4399  057E  00A1               	movwf	___ftge@ff1+1
  4400  057F  303F               	movlw	63
  4401  0580  00A2               	movwf	___ftge@ff1+2
  4402  0581  085D               	movf	sin@f,w
  4403  0582  00A3               	movwf	___ftge@ff2
  4404  0583  085E               	movf	sin@f+1,w
  4405  0584  00A4               	movwf	___ftge@ff2+1
  4406  0585  085F               	movf	sin@f+2,w
  4407  0586  00A5               	movwf	___ftge@ff2+2
  4408  0587  318D  2532  3184   	fcall	___ftge
  4409  058A  1803               	btfsc	3,0
  4410  058B  2DAD               	goto	l609
  4411  058C  3000               	movlw	0
  4412  058D  0020               	movlb	0	; select bank0
  4413  058E  00B0               	movwf	___ftadd@f1
  4414  058F  3000               	movlw	0
  4415  0590  00B1               	movwf	___ftadd@f1+1
  4416  0591  3040               	movlw	64
  4417  0592  00B2               	movwf	___ftadd@f1+2
  4418  0593  085D               	movf	sin@f,w
  4419  0594  00F0               	movwf	___ftneg@f1
  4420  0595  085E               	movf	sin@f+1,w
  4421  0596  00F1               	movwf	___ftneg@f1+1
  4422  0597  085F               	movf	sin@f+2,w
  4423  0598  00F2               	movwf	___ftneg@f1+2
  4424  0599  318B  23BC  3184   	fcall	___ftneg
  4425  059C  0870               	movf	?___ftneg,w
  4426  059D  0020               	movlb	0	; select bank0
  4427  059E  00B3               	movwf	___ftadd@f2
  4428  059F  0871               	movf	?___ftneg+1,w
  4429  05A0  00B4               	movwf	___ftadd@f2+1
  4430  05A1  0872               	movf	?___ftneg+2,w
  4431  05A2  00B5               	movwf	___ftadd@f2+2
  4432  05A3  3182  22AF  3184   	fcall	___ftadd
  4433  05A6  0020               	movlb	0	; select bank0
  4434  05A7  0830               	movf	?___ftadd,w
  4435  05A8  00DD               	movwf	sin@f
  4436  05A9  0831               	movf	?___ftadd+1,w
  4437  05AA  00DE               	movwf	sin@f+1
  4438  05AB  0832               	movf	?___ftadd+2,w
  4439  05AC  00DF               	movwf	sin@f+2
  4440  05AD                     l609:	
  4441  05AD  0020               	movlb	0	; select bank0
  4442  05AE  085D               	movf	sin@f,w
  4443  05AF  00A0               	movwf	___ftmul@f1
  4444  05B0  085E               	movf	sin@f+1,w
  4445  05B1  00A1               	movwf	___ftmul@f1+1
  4446  05B2  085F               	movf	sin@f+2,w
  4447  05B3  00A2               	movwf	___ftmul@f1+2
  4448  05B4  085D               	movf	sin@f,w
  4449  05B5  00A3               	movwf	___ftmul@f2
  4450  05B6  085E               	movf	sin@f+1,w
  4451  05B7  00A4               	movwf	___ftmul@f2+1
  4452  05B8  085F               	movf	sin@f+2,w
  4453  05B9  00A5               	movwf	___ftmul@f2+2
  4454  05BA  3181  2130  3184   	fcall	___ftmul
  4455  05BD  0020               	movlb	0	; select bank0
  4456  05BE  0820               	movf	?___ftmul,w
  4457  05BF  00E7               	movwf	sin@x2
  4458  05C0  0821               	movf	?___ftmul+1,w
  4459  05C1  00E8               	movwf	sin@x2+1
  4460  05C2  0822               	movf	?___ftmul+2,w
  4461  05C3  00E9               	movwf	sin@x2+2
  4462  05C4  0867               	movf	sin@x2,w
  4463  05C5  00BD               	movwf	eval_poly@x
  4464  05C6  0868               	movf	sin@x2+1,w
  4465  05C7  00BE               	movwf	eval_poly@x+1
  4466  05C8  0869               	movf	sin@x2+2,w
  4467  05C9  00BF               	movwf	eval_poly@x+2
  4468  05CA  300F               	movlw	low (sin@coeff_b| (0+32768))
  4469  05CB  00C0               	movwf	eval_poly@d
  4470  05CC  3088               	movlw	high (sin@coeff_b| (0+32768))
  4471  05CD  00C1               	movwf	eval_poly@d+1
  4472  05CE  3003               	movlw	3
  4473  05CF  00C2               	movwf	eval_poly@n
  4474  05D0  3000               	movlw	0
  4475  05D1  00C3               	movwf	eval_poly@n+1
  4476  05D2  318E  2631  3184   	fcall	_eval_poly
  4477  05D5  0020               	movlb	0	; select bank0
  4478  05D6  083D               	movf	?_eval_poly,w
  4479  05D7  00E1               	movwf	sin@y
  4480  05D8  083E               	movf	?_eval_poly+1,w
  4481  05D9  00E2               	movwf	sin@y+1
  4482  05DA  083F               	movf	?_eval_poly+2,w
  4483  05DB  00E3               	movwf	sin@y+2
  4484  05DC  3004               	movlw	4
  4485  05DD  00C2               	movwf	eval_poly@n
  4486  05DE  3000               	movlw	0
  4487  05DF  00C3               	movwf	eval_poly@n+1
  4488  05E0  3000               	movlw	low (sin@coeff_a| (0+32768))
  4489  05E1  00C0               	movwf	eval_poly@d
  4490  05E2  3088               	movlw	high (sin@coeff_a| (0+32768))
  4491  05E3  00C1               	movwf	eval_poly@d+1
  4492  05E4  0867               	movf	sin@x2,w
  4493  05E5  00BD               	movwf	eval_poly@x
  4494  05E6  0868               	movf	sin@x2+1,w
  4495  05E7  00BE               	movwf	eval_poly@x+1
  4496  05E8  0869               	movf	sin@x2+2,w
  4497  05E9  00BF               	movwf	eval_poly@x+2
  4498  05EA  318E  2631  3184   	fcall	_eval_poly
  4499  05ED  0020               	movlb	0	; select bank0
  4500  05EE  083D               	movf	?_eval_poly,w
  4501  05EF  00CA               	movwf	___ftdiv@f1
  4502  05F0  083E               	movf	?_eval_poly+1,w
  4503  05F1  00CB               	movwf	___ftdiv@f1+1
  4504  05F2  083F               	movf	?_eval_poly+2,w
  4505  05F3  00CC               	movwf	___ftdiv@f1+2
  4506  05F4  0861               	movf	sin@y,w
  4507  05F5  00C7               	movwf	___ftdiv@f2
  4508  05F6  0862               	movf	sin@y+1,w
  4509  05F7  00C8               	movwf	___ftdiv@f2+1
  4510  05F8  0863               	movf	sin@y+2,w
  4511  05F9  00C9               	movwf	___ftdiv@f2+2
  4512  05FA  3180  2087  3184   	fcall	___ftdiv
  4513  05FD  0020               	movlb	0	; select bank0
  4514  05FE  0847               	movf	?___ftdiv,w
  4515  05FF  00E4               	movwf	_sin$769
  4516  0600  0848               	movf	?___ftdiv+1,w
  4517  0601  00E5               	movwf	_sin$769+1
  4518  0602  0849               	movf	?___ftdiv+2,w
  4519  0603  00E6               	movwf	_sin$769+2
  4520  0604  0864               	movf	_sin$769,w
  4521  0605  00A0               	movwf	___ftmul@f1
  4522  0606  0865               	movf	_sin$769+1,w
  4523  0607  00A1               	movwf	___ftmul@f1+1
  4524  0608  0866               	movf	_sin$769+2,w
  4525  0609  00A2               	movwf	___ftmul@f1+2
  4526  060A  085D               	movf	sin@f,w
  4527  060B  00A3               	movwf	___ftmul@f2
  4528  060C  085E               	movf	sin@f+1,w
  4529  060D  00A4               	movwf	___ftmul@f2+1
  4530  060E  085F               	movf	sin@f+2,w
  4531  060F  00A5               	movwf	___ftmul@f2+2
  4532  0610  3181  2130  3184   	fcall	___ftmul
  4533  0613  0020               	movlb	0	; select bank0
  4534  0614  0820               	movf	?___ftmul,w
  4535  0615  00DD               	movwf	sin@f
  4536  0616  0821               	movf	?___ftmul+1,w
  4537  0617  00DE               	movwf	sin@f+1
  4538  0618  0822               	movf	?___ftmul+2,w
  4539  0619  00DF               	movwf	sin@f+2
  4540  061A  086A               	movf	sin@sgn,w
  4541  061B  1903               	btfsc	3,2
  4542  061C  0008               	return
  4543  061D  085D               	movf	sin@f,w
  4544  061E  00F0               	movwf	___ftneg@f1
  4545  061F  085E               	movf	sin@f+1,w
  4546  0620  00F1               	movwf	___ftneg@f1+1
  4547  0621  085F               	movf	sin@f+2,w
  4548  0622  00F2               	movwf	___ftneg@f1+2
  4549  0623  318B  23BC         	fcall	___ftneg
  4550  0625  0870               	movf	?___ftneg,w
  4551  0626  0020               	movlb	0	; select bank0
  4552  0627  00DD               	movwf	?_sin
  4553  0628  0871               	movf	?___ftneg+1,w
  4554  0629  00DE               	movwf	?_sin+1
  4555  062A  0872               	movf	?___ftneg+2,w
  4556  062B  00DF               	movwf	?_sin+2
  4557  062C  0008               	return
  4558  062D                     __end_of_sin:	
  4559                           
  4560                           	psect	text18
  4561  0EF5                     __ptext18:	
  4562 ;; *************** function _floor *****************
  4563 ;; Defined at:
  4564 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\floor.c"
  4565 ;; Parameters:    Size  Location     Type
  4566 ;;  x               3   29[BANK0 ] unsigned char 
  4567 ;; Auto vars:     Size  Location     Type
  4568 ;;  i               3   33[BANK0 ] unsigned char 
  4569 ;;  expon           2   36[BANK0 ] int 
  4570 ;; Return value:  Size  Location     Type
  4571 ;;                  3   29[BANK0 ] int 
  4572 ;; Registers used:
  4573 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4574 ;; Tracked objects:
  4575 ;;		On entry : 0/0
  4576 ;;		On exit  : 0/0
  4577 ;;		Unchanged: 0/0
  4578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4579 ;;      Params:         0       3       0       0       0       0       0       0
  4580 ;;      Locals:         0       5       0       0       0       0       0       0
  4581 ;;      Temps:          0       1       0       0       0       0       0       0
  4582 ;;      Totals:         0       9       0       0       0       0       0       0
  4583 ;;Total ram usage:        9 bytes
  4584 ;; Hardware stack levels used:    1
  4585 ;; Hardware stack levels required when called:    2
  4586 ;; This function calls:
  4587 ;;		___altoft
  4588 ;;		___ftadd
  4589 ;;		___ftge
  4590 ;;		___fttol
  4591 ;;		_frexp
  4592 ;; This function is called by:
  4593 ;;		_sin
  4594 ;; This function uses a non-reentrant model
  4595 ;;
  4596                           
  4597                           
  4598                           ;psect for function _floor
  4599  0EF5                     _floor:	
  4600                           
  4601                           ;incstack = 0
  4602                           ; Regs used in _floor: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4603  0EF5  0020               	movlb	0	; select bank0
  4604  0EF6  083D               	movf	floor@x,w
  4605  0EF7  00F0               	movwf	frexp@value
  4606  0EF8  083E               	movf	floor@x+1,w
  4607  0EF9  00F1               	movwf	frexp@value+1
  4608  0EFA  083F               	movf	floor@x+2,w
  4609  0EFB  00F2               	movwf	frexp@value+2
  4610  0EFC  3044               	movlw	(low (floor@expon| 0))& (0+255)
  4611  0EFD  00C0               	movwf	??_floor
  4612  0EFE  0840               	movf	??_floor,w
  4613  0EFF  00F3               	movwf	frexp@eptr
  4614  0F00  318C  24FD  318E   	fcall	_frexp
  4615  0F03  0020               	movlb	0	; select bank0
  4616  0F04  1FC5               	btfss	floor@expon+1,7
  4617  0F05  2F27               	goto	l1676
  4618  0F06  083D               	movf	floor@x,w
  4619  0F07  00A0               	movwf	___ftge@ff1
  4620  0F08  083E               	movf	floor@x+1,w
  4621  0F09  00A1               	movwf	___ftge@ff1+1
  4622  0F0A  083F               	movf	floor@x+2,w
  4623  0F0B  00A2               	movwf	___ftge@ff1+2
  4624  0F0C  3000               	movlw	0
  4625  0F0D  00A3               	movwf	___ftge@ff2
  4626  0F0E  3000               	movlw	0
  4627  0F0F  00A4               	movwf	___ftge@ff2+1
  4628  0F10  3000               	movlw	0
  4629  0F11  00A5               	movwf	___ftge@ff2+2
  4630  0F12  318D  2532  318E   	fcall	___ftge
  4631  0F15  1803               	btfsc	3,0
  4632  0F16  2F1F               	goto	l1672
  4633  0F17  3000               	movlw	0
  4634  0F18  0020               	movlb	0	; select bank0
  4635  0F19  00BD               	movwf	?_floor
  4636  0F1A  3080               	movlw	128
  4637  0F1B  00BE               	movwf	?_floor+1
  4638  0F1C  30BF               	movlw	191
  4639  0F1D  00BF               	movwf	?_floor+2
  4640  0F1E  0008               	return
  4641  0F1F                     l1672:	
  4642  0F1F  3000               	movlw	0
  4643  0F20  0020               	movlb	0	; select bank0
  4644  0F21  00BD               	movwf	?_floor
  4645  0F22  3000               	movlw	0
  4646  0F23  00BE               	movwf	?_floor+1
  4647  0F24  3000               	movlw	0
  4648  0F25  00BF               	movwf	?_floor+2
  4649  0F26  0008               	return
  4650  0F27                     l1676:	
  4651  0F27  3000               	movlw	0
  4652  0F28  0245               	subwf	floor@expon+1,w
  4653  0F29  3015               	movlw	21
  4654  0F2A  1903               	skipnz
  4655  0F2B  0244               	subwf	floor@expon,w
  4656  0F2C  1803               	btfsc	3,0
  4657  0F2D  0008               	return
  4658  0F2E  083D               	movf	floor@x,w
  4659  0F2F  00F0               	movwf	___fttol@f1
  4660  0F30  083E               	movf	floor@x+1,w
  4661  0F31  00F1               	movwf	___fttol@f1+1
  4662  0F32  083F               	movf	floor@x+2,w
  4663  0F33  00F2               	movwf	___fttol@f1+2
  4664  0F34  318F  277A  318E   	fcall	___fttol
  4665  0F37  0873               	movf	?___fttol+3,w
  4666  0F38  0020               	movlb	0	; select bank0
  4667  0F39  00A3               	movwf	___altoft@c+3
  4668  0F3A  0872               	movf	?___fttol+2,w
  4669  0F3B  00A2               	movwf	___altoft@c+2
  4670  0F3C  0871               	movf	?___fttol+1,w
  4671  0F3D  00A1               	movwf	___altoft@c+1
  4672  0F3E  0870               	movf	?___fttol,w
  4673  0F3F  00A0               	movwf	___altoft@c
  4674  0F40  318D  256E  318E   	fcall	___altoft
  4675  0F43  0020               	movlb	0	; select bank0
  4676  0F44  0820               	movf	?___altoft,w
  4677  0F45  00C1               	movwf	floor@i
  4678  0F46  0821               	movf	?___altoft+1,w
  4679  0F47  00C2               	movwf	floor@i+1
  4680  0F48  0822               	movf	?___altoft+2,w
  4681  0F49  00C3               	movwf	floor@i+2
  4682  0F4A  083D               	movf	floor@x,w
  4683  0F4B  00A0               	movwf	___ftge@ff1
  4684  0F4C  083E               	movf	floor@x+1,w
  4685  0F4D  00A1               	movwf	___ftge@ff1+1
  4686  0F4E  083F               	movf	floor@x+2,w
  4687  0F4F  00A2               	movwf	___ftge@ff1+2
  4688  0F50  0841               	movf	floor@i,w
  4689  0F51  00A3               	movwf	___ftge@ff2
  4690  0F52  0842               	movf	floor@i+1,w
  4691  0F53  00A4               	movwf	___ftge@ff2+1
  4692  0F54  0843               	movf	floor@i+2,w
  4693  0F55  00A5               	movwf	___ftge@ff2+2
  4694  0F56  318D  2532  318E   	fcall	___ftge
  4695  0F59  1803               	btfsc	3,0
  4696  0F5A  2F72               	goto	l1686
  4697  0F5B  3000               	movlw	0
  4698  0F5C  0020               	movlb	0	; select bank0
  4699  0F5D  00B0               	movwf	___ftadd@f1
  4700  0F5E  3080               	movlw	128
  4701  0F5F  00B1               	movwf	___ftadd@f1+1
  4702  0F60  30BF               	movlw	191
  4703  0F61  00B2               	movwf	___ftadd@f1+2
  4704  0F62  0841               	movf	floor@i,w
  4705  0F63  00B3               	movwf	___ftadd@f2
  4706  0F64  0842               	movf	floor@i+1,w
  4707  0F65  00B4               	movwf	___ftadd@f2+1
  4708  0F66  0843               	movf	floor@i+2,w
  4709  0F67  00B5               	movwf	___ftadd@f2+2
  4710  0F68  3182  22AF         	fcall	___ftadd
  4711  0F6A  0020               	movlb	0	; select bank0
  4712  0F6B  0830               	movf	?___ftadd,w
  4713  0F6C  00BD               	movwf	?_floor
  4714  0F6D  0831               	movf	?___ftadd+1,w
  4715  0F6E  00BE               	movwf	?_floor+1
  4716  0F6F  0832               	movf	?___ftadd+2,w
  4717  0F70  00BF               	movwf	?_floor+2
  4718  0F71  0008               	return
  4719  0F72                     l1686:	
  4720  0F72  0020               	movlb	0	; select bank0
  4721  0F73  0841               	movf	floor@i,w
  4722  0F74  00BD               	movwf	?_floor
  4723  0F75  0842               	movf	floor@i+1,w
  4724  0F76  00BE               	movwf	?_floor+1
  4725  0F77  0843               	movf	floor@i+2,w
  4726  0F78  00BF               	movwf	?_floor+2
  4727  0F79  0008               	return
  4728  0F7A                     __end_of_floor:	
  4729                           
  4730                           	psect	text19
  4731  0CFD                     __ptext19:	
  4732 ;; *************** function _frexp *****************
  4733 ;; Defined at:
  4734 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\frexp.c"
  4735 ;; Parameters:    Size  Location     Type
  4736 ;;  value           3    0[COMMON] int 
  4737 ;;  eptr            1    3[COMMON] PTR int 
  4738 ;;		 -> floor@expon(2), 
  4739 ;; Auto vars:     Size  Location     Type
  4740 ;;		None
  4741 ;; Return value:  Size  Location     Type
  4742 ;;                  3    0[COMMON] PTR int 
  4743 ;; Registers used:
  4744 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4745 ;; Tracked objects:
  4746 ;;		On entry : 0/0
  4747 ;;		On exit  : 0/0
  4748 ;;		Unchanged: 0/0
  4749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4750 ;;      Params:         4       0       0       0       0       0       0       0
  4751 ;;      Locals:         0       0       0       0       0       0       0       0
  4752 ;;      Temps:          2       0       0       0       0       0       0       0
  4753 ;;      Totals:         6       0       0       0       0       0       0       0
  4754 ;;Total ram usage:        6 bytes
  4755 ;; Hardware stack levels used:    1
  4756 ;; This function calls:
  4757 ;;		Nothing
  4758 ;; This function is called by:
  4759 ;;		_floor
  4760 ;; This function uses a non-reentrant model
  4761 ;;
  4762                           
  4763                           
  4764                           ;psect for function _frexp
  4765  0CFD                     _frexp:	
  4766                           
  4767                           ;incstack = 0
  4768                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  4769  0CFD  0872               	movf	frexp@value+2,w
  4770  0CFE  0471               	iorwf	frexp@value+1,w
  4771  0CFF  0470               	iorwf	frexp@value,w
  4772  0D00  1D03               	skipz
  4773  0D01  2D09               	goto	l1580
  4774  0D02  0873               	movf	frexp@eptr,w
  4775  0D03  0086               	movwf	6
  4776  0D04  0187               	clrf	7
  4777  0D05  3000               	movlw	0
  4778  0D06  3FC0               	movwi [0]fsr1
  4779  0D07  3FC1               	movwi [1]fsr1
  4780                           
  4781                           ;	Return value of _frexp is never used
  4782  0D08  0008               	return
  4783  0D09                     l1580:	
  4784  0D09  0872               	movf	frexp@value+2,w
  4785  0D0A  397F               	andlw	127
  4786  0D0B  00F4               	movwf	??_frexp
  4787  0D0C  01F5               	clrf	??_frexp+1
  4788  0D0D  35F4               	lslf	??_frexp,f
  4789  0D0E  0DF5               	rlf	??_frexp+1,f
  4790  0D0F  0873               	movf	frexp@eptr,w
  4791  0D10  0086               	movwf	6
  4792  0D11  0187               	clrf	7
  4793  0D12  0874               	movf	??_frexp,w
  4794  0D13  3FC0               	movwi [0]fsr1
  4795  0D14  0875               	movf	??_frexp+1,w
  4796  0D15  3FC1               	movwi [1]fsr1
  4797  0D16  0D71               	rlf	frexp@value+1,w
  4798  0D17  0D71               	rlf	frexp@value+1,w
  4799  0D18  3901               	andlw	1
  4800  0D19  00F4               	movwf	??_frexp
  4801  0D1A  01F5               	clrf	??_frexp+1
  4802  0D1B  0873               	movf	frexp@eptr,w
  4803  0D1C  0086               	movwf	6
  4804  0D1D  0187               	clrf	7
  4805  0D1E  0874               	movf	??_frexp,w
  4806  0D1F  0481               	iorwf	1,f
  4807  0D20  3141               	addfsr 1,1
  4808  0D21  0875               	movf	??_frexp+1,w
  4809  0D22  0481               	iorwf	1,f
  4810  0D23  0873               	movf	frexp@eptr,w
  4811  0D24  0086               	movwf	6
  4812  0D25  0187               	clrf	7
  4813  0D26  3082               	movlw	130
  4814  0D27  0781               	addwf	1,f
  4815  0D28  3141               	addfsr 1,1
  4816  0D29  30FF               	movlw	255
  4817  0D2A  3D81               	addwfc	1,f
  4818  0D2B  317F               	addfsr 1,-1
  4819  0D2C  0872               	movf	frexp@value+2,w
  4820  0D2D  3980               	andlw	-128
  4821  0D2E  383F               	iorlw	63
  4822  0D2F  00F2               	movwf	frexp@value+2
  4823  0D30  13F1               	bcf	frexp@value+1,7
  4824  0D31  0008               	return
  4825  0D32                     __end_of_frexp:	
  4826                           ;	Return value of _frexp is never used
  4827                           
  4828                           
  4829                           	psect	text20
  4830  0F7A                     __ptext20:	
  4831 ;; *************** function ___fttol *****************
  4832 ;; Defined at:
  4833 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\fttol.c"
  4834 ;; Parameters:    Size  Location     Type
  4835 ;;  f1              3    0[COMMON] float 
  4836 ;; Auto vars:     Size  Location     Type
  4837 ;;  lval            4    9[COMMON] unsigned long 
  4838 ;;  exp1            1   13[COMMON] unsigned char 
  4839 ;;  sign1           1    8[COMMON] unsigned char 
  4840 ;; Return value:  Size  Location     Type
  4841 ;;                  4    0[COMMON] long 
  4842 ;; Registers used:
  4843 ;;		wreg, status,2, status,0
  4844 ;; Tracked objects:
  4845 ;;		On entry : 0/0
  4846 ;;		On exit  : 0/0
  4847 ;;		Unchanged: 0/0
  4848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4849 ;;      Params:         4       0       0       0       0       0       0       0
  4850 ;;      Locals:         6       0       0       0       0       0       0       0
  4851 ;;      Temps:          4       0       0       0       0       0       0       0
  4852 ;;      Totals:        14       0       0       0       0       0       0       0
  4853 ;;Total ram usage:       14 bytes
  4854 ;; Hardware stack levels used:    1
  4855 ;; This function calls:
  4856 ;;		Nothing
  4857 ;; This function is called by:
  4858 ;;		_Step
  4859 ;;		_floor
  4860 ;; This function uses a non-reentrant model
  4861 ;;
  4862                           
  4863                           
  4864                           ;psect for function ___fttol
  4865  0F7A                     ___fttol:	
  4866                           
  4867                           ;incstack = 0
  4868                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  4869  0F7A  0870               	movf	___fttol@f1,w
  4870  0F7B  00F4               	movwf	??___fttol
  4871  0F7C  0871               	movf	___fttol@f1+1,w
  4872  0F7D  00F5               	movwf	??___fttol+1
  4873  0F7E  0872               	movf	___fttol@f1+2,w
  4874  0F7F  00F6               	movwf	??___fttol+2
  4875  0F80  1003               	clrc
  4876  0F81  0D75               	rlf	??___fttol+1,w
  4877  0F82  0D76               	rlf	??___fttol+2,w
  4878  0F83  00F7               	movwf	??___fttol+3
  4879  0F84  0877               	movf	??___fttol+3,w
  4880  0F85  00FD               	movwf	___fttol@exp1
  4881  0F86  087D               	movf	___fttol@exp1,w
  4882  0F87  1D03               	btfss	3,2
  4883  0F88  2F92               	goto	l1538
  4884  0F89  3000               	movlw	0
  4885  0F8A  00F3               	movwf	?___fttol+3
  4886  0F8B  3000               	movlw	0
  4887  0F8C  00F2               	movwf	?___fttol+2
  4888  0F8D  3000               	movlw	0
  4889  0F8E  00F1               	movwf	?___fttol+1
  4890  0F8F  3000               	movlw	0
  4891  0F90  00F0               	movwf	?___fttol
  4892  0F91  0008               	return
  4893  0F92                     l1538:	
  4894  0F92  0870               	movf	___fttol@f1,w
  4895  0F93  00F4               	movwf	??___fttol
  4896  0F94  0871               	movf	___fttol@f1+1,w
  4897  0F95  00F5               	movwf	??___fttol+1
  4898  0F96  0872               	movf	___fttol@f1+2,w
  4899  0F97  00F6               	movwf	??___fttol+2
  4900  0F98  3017               	movlw	23
  4901  0F99                     u1695:	
  4902  0F99  36F6               	lsrf	??___fttol+2,f
  4903  0F9A  0CF5               	rrf	??___fttol+1,f
  4904  0F9B  0CF4               	rrf	??___fttol,f
  4905  0F9C  0B89               	decfsz	9,f
  4906  0F9D  2F99               	goto	u1695
  4907  0F9E  0874               	movf	??___fttol,w
  4908  0F9F  00F7               	movwf	??___fttol+3
  4909  0FA0  0877               	movf	??___fttol+3,w
  4910  0FA1  00F8               	movwf	___fttol@sign1
  4911  0FA2  17F1               	bsf	___fttol@f1+1,7
  4912  0FA3  30FF               	movlw	255
  4913  0FA4  05F0               	andwf	___fttol@f1,f
  4914  0FA5  30FF               	movlw	255
  4915  0FA6  05F1               	andwf	___fttol@f1+1,f
  4916  0FA7  3000               	movlw	0
  4917  0FA8  05F2               	andwf	___fttol@f1+2,f
  4918  0FA9  0870               	movf	___fttol@f1,w
  4919  0FAA  00F9               	movwf	___fttol@lval
  4920  0FAB  0871               	movf	___fttol@f1+1,w
  4921  0FAC  00FA               	movwf	___fttol@lval+1
  4922  0FAD  0872               	movf	___fttol@f1+2,w
  4923  0FAE  00FB               	movwf	___fttol@lval+2
  4924  0FAF  01FC               	clrf	___fttol@lval+3
  4925  0FB0  308E               	movlw	142
  4926  0FB1  02FD               	subwf	___fttol@exp1,f
  4927  0FB2  1FFD               	btfss	___fttol@exp1,7
  4928  0FB3  2FD0               	goto	l1558
  4929  0FB4  087D               	movf	___fttol@exp1,w
  4930  0FB5  3A80               	xorlw	128
  4931  0FB6  3E8F               	addlw	143
  4932  0FB7  1803               	skipnc
  4933  0FB8  2FC2               	goto	l1556
  4934  0FB9  3000               	movlw	0
  4935  0FBA  00F3               	movwf	?___fttol+3
  4936  0FBB  3000               	movlw	0
  4937  0FBC  00F2               	movwf	?___fttol+2
  4938  0FBD  3000               	movlw	0
  4939  0FBE  00F1               	movwf	?___fttol+1
  4940  0FBF  3000               	movlw	0
  4941  0FC0  00F0               	movwf	?___fttol
  4942  0FC1  0008               	return
  4943  0FC2                     l1556:	
  4944  0FC2  3001               	movlw	1
  4945  0FC3                     u1725:	
  4946  0FC3  36FC               	lsrf	___fttol@lval+3,f
  4947  0FC4  0CFB               	rrf	___fttol@lval+2,f
  4948  0FC5  0CFA               	rrf	___fttol@lval+1,f
  4949  0FC6  0CF9               	rrf	___fttol@lval,f
  4950  0FC7  0B89               	decfsz	9,f
  4951  0FC8  2FC3               	goto	u1725
  4952  0FC9  3001               	movlw	1
  4953  0FCA  00F4               	movwf	??___fttol
  4954  0FCB  0874               	movf	??___fttol,w
  4955  0FCC  07FD               	addwf	___fttol@exp1,f
  4956  0FCD  1903               	btfsc	3,2
  4957  0FCE  2FE9               	goto	l1566
  4958  0FCF  2FC2               	goto	l1556
  4959  0FD0                     l1558:	
  4960  0FD0  3018               	movlw	24
  4961  0FD1  027D               	subwf	___fttol@exp1,w
  4962  0FD2  1C03               	skipc
  4963  0FD3  2FE6               	goto	l486
  4964  0FD4  3000               	movlw	0
  4965  0FD5  00F3               	movwf	?___fttol+3
  4966  0FD6  3000               	movlw	0
  4967  0FD7  00F2               	movwf	?___fttol+2
  4968  0FD8  3000               	movlw	0
  4969  0FD9  00F1               	movwf	?___fttol+1
  4970  0FDA  3000               	movlw	0
  4971  0FDB  00F0               	movwf	?___fttol
  4972  0FDC  0008               	return
  4973  0FDD                     l1564:	
  4974  0FDD  3001               	movlw	1
  4975  0FDE                     u1755:	
  4976  0FDE  35F9               	lslf	___fttol@lval,f
  4977  0FDF  0DFA               	rlf	___fttol@lval+1,f
  4978  0FE0  0DFB               	rlf	___fttol@lval+2,f
  4979  0FE1  0DFC               	rlf	___fttol@lval+3,f
  4980  0FE2  0B89               	decfsz	9,f
  4981  0FE3  2FDE               	goto	u1755
  4982  0FE4  3001               	movlw	1
  4983  0FE5  02FD               	subwf	___fttol@exp1,f
  4984  0FE6                     l486:	
  4985  0FE6  087D               	movf	___fttol@exp1,w
  4986  0FE7  1D03               	btfss	3,2
  4987  0FE8  2FDD               	goto	l1564
  4988  0FE9                     l1566:	
  4989  0FE9  0878               	movf	___fttol@sign1,w
  4990  0FEA  1903               	btfsc	3,2
  4991  0FEB  2FF7               	goto	l1570
  4992  0FEC  09F9               	comf	___fttol@lval,f
  4993  0FED  09FA               	comf	___fttol@lval+1,f
  4994  0FEE  09FB               	comf	___fttol@lval+2,f
  4995  0FEF  09FC               	comf	___fttol@lval+3,f
  4996  0FF0  0AF9               	incf	___fttol@lval,f
  4997  0FF1  1903               	skipnz
  4998  0FF2  0AFA               	incf	___fttol@lval+1,f
  4999  0FF3  1903               	skipnz
  5000  0FF4  0AFB               	incf	___fttol@lval+2,f
  5001  0FF5  1903               	skipnz
  5002  0FF6  0AFC               	incf	___fttol@lval+3,f
  5003  0FF7                     l1570:	
  5004  0FF7  087C               	movf	___fttol@lval+3,w
  5005  0FF8  00F3               	movwf	?___fttol+3
  5006  0FF9  087B               	movf	___fttol@lval+2,w
  5007  0FFA  00F2               	movwf	?___fttol+2
  5008  0FFB  087A               	movf	___fttol@lval+1,w
  5009  0FFC  00F1               	movwf	?___fttol+1
  5010  0FFD  0879               	movf	___fttol@lval,w
  5011  0FFE  00F0               	movwf	?___fttol
  5012  0FFF  0008               	return
  5013  1000                     __end_of___fttol:	
  5014                           
  5015                           	psect	text21
  5016  0D6E                     __ptext21:	
  5017 ;; *************** function ___altoft *****************
  5018 ;; Defined at:
  5019 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\altoft.c"
  5020 ;; Parameters:    Size  Location     Type
  5021 ;;  c               4    0[BANK0 ] long 
  5022 ;; Auto vars:     Size  Location     Type
  5023 ;;  sign            1    7[BANK0 ] unsigned char 
  5024 ;;  exp             1    6[BANK0 ] unsigned char 
  5025 ;; Return value:  Size  Location     Type
  5026 ;;                  3    0[BANK0 ] float 
  5027 ;; Registers used:
  5028 ;;		wreg, status,2, status,0, pclath, cstack
  5029 ;; Tracked objects:
  5030 ;;		On entry : 0/0
  5031 ;;		On exit  : 0/0
  5032 ;;		Unchanged: 0/0
  5033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5034 ;;      Params:         0       4       0       0       0       0       0       0
  5035 ;;      Locals:         0       2       0       0       0       0       0       0
  5036 ;;      Temps:          0       2       0       0       0       0       0       0
  5037 ;;      Totals:         0       8       0       0       0       0       0       0
  5038 ;;Total ram usage:        8 bytes
  5039 ;; Hardware stack levels used:    1
  5040 ;; Hardware stack levels required when called:    1
  5041 ;; This function calls:
  5042 ;;		___ftpack
  5043 ;; This function is called by:
  5044 ;;		_floor
  5045 ;; This function uses a non-reentrant model
  5046 ;;
  5047                           
  5048                           
  5049                           ;psect for function ___altoft
  5050  0D6E                     ___altoft:	
  5051                           
  5052                           ;incstack = 0
  5053                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  5054  0D6E  0020               	movlb	0	; select bank0
  5055  0D6F  01A7               	clrf	___altoft@sign
  5056  0D70  308E               	movlw	142
  5057  0D71  00A4               	movwf	??___altoft
  5058  0D72  0824               	movf	??___altoft,w
  5059  0D73  00A6               	movwf	___altoft@exp
  5060  0D74  1FA3               	btfss	___altoft@c+3,7
  5061  0D75  2D83               	goto	l1386
  5062  0D76  09A0               	comf	___altoft@c,f
  5063  0D77  09A1               	comf	___altoft@c+1,f
  5064  0D78  09A2               	comf	___altoft@c+2,f
  5065  0D79  09A3               	comf	___altoft@c+3,f
  5066  0D7A  0AA0               	incf	___altoft@c,f
  5067  0D7B  1903               	skipnz
  5068  0D7C  0AA1               	incf	___altoft@c+1,f
  5069  0D7D  1903               	skipnz
  5070  0D7E  0AA2               	incf	___altoft@c+2,f
  5071  0D7F  1903               	skipnz
  5072  0D80  0AA3               	incf	___altoft@c+3,f
  5073  0D81  01A7               	clrf	___altoft@sign
  5074  0D82  0AA7               	incf	___altoft@sign,f
  5075  0D83                     l1386:	
  5076  0D83  30FF               	movlw	255
  5077  0D84  0523               	andwf	___altoft@c+3,w
  5078  0D85  1903               	btfsc	3,2
  5079  0D86  2D93               	goto	l1388
  5080  0D87  3001               	movlw	1
  5081  0D88                     u1285:	
  5082  0D88  36A3               	lsrf	___altoft@c+3,f
  5083  0D89  0CA2               	rrf	___altoft@c+2,f
  5084  0D8A  0CA1               	rrf	___altoft@c+1,f
  5085  0D8B  0CA0               	rrf	___altoft@c,f
  5086  0D8C  0B89               	decfsz	9,f
  5087  0D8D  2D88               	goto	u1285
  5088  0D8E  3001               	movlw	1
  5089  0D8F  00A4               	movwf	??___altoft
  5090  0D90  0824               	movf	??___altoft,w
  5091  0D91  07A6               	addwf	___altoft@exp,f
  5092  0D92  2D83               	goto	l1386
  5093  0D93                     l1388:	
  5094  0D93  0820               	movf	___altoft@c,w
  5095  0D94  00F0               	movwf	___ftpack@arg
  5096  0D95  0821               	movf	___altoft@c+1,w
  5097  0D96  00F1               	movwf	___ftpack@arg+1
  5098  0D97  0822               	movf	___altoft@c+2,w
  5099  0D98  00F2               	movwf	___ftpack@arg+2
  5100  0D99  0826               	movf	___altoft@exp,w
  5101  0D9A  00A4               	movwf	??___altoft
  5102  0D9B  0824               	movf	??___altoft,w
  5103  0D9C  00F3               	movwf	___ftpack@exp
  5104  0D9D  0827               	movf	___altoft@sign,w
  5105  0D9E  00A5               	movwf	??___altoft+1
  5106  0D9F  0825               	movf	??___altoft+1,w
  5107  0DA0  00F4               	movwf	___ftpack@sign
  5108  0DA1  318E  2691         	fcall	___ftpack
  5109  0DA3  0870               	movf	?___ftpack,w
  5110  0DA4  0020               	movlb	0	; select bank0
  5111  0DA5  00A0               	movwf	?___altoft
  5112  0DA6  0871               	movf	?___ftpack+1,w
  5113  0DA7  00A1               	movwf	?___altoft+1
  5114  0DA8  0872               	movf	?___ftpack+2,w
  5115  0DA9  00A2               	movwf	?___altoft+2
  5116  0DAA  0008               	return
  5117  0DAB                     __end_of___altoft:	
  5118                           
  5119                           	psect	text22
  5120  0E31                     __ptext22:	
  5121 ;; *************** function _eval_poly *****************
  5122 ;; Defined at:
  5123 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\evalpoly.c"
  5124 ;; Parameters:    Size  Location     Type
  5125 ;;  x               3   29[BANK0 ] float 
  5126 ;;  d               2   32[BANK0 ] PTR const 
  5127 ;;		 -> sin@coeff_a(15), sin@coeff_b(12), 
  5128 ;;  n               2   34[BANK0 ] int 
  5129 ;; Auto vars:     Size  Location     Type
  5130 ;;  res             3   36[BANK0 ] int 
  5131 ;; Return value:  Size  Location     Type
  5132 ;;                  3   29[BANK0 ] int 
  5133 ;; Registers used:
  5134 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5135 ;; Tracked objects:
  5136 ;;		On entry : 0/0
  5137 ;;		On exit  : 0/0
  5138 ;;		Unchanged: 0/0
  5139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5140 ;;      Params:         0       7       0       0       0       0       0       0
  5141 ;;      Locals:         0       3       0       0       0       0       0       0
  5142 ;;      Temps:          0       0       0       0       0       0       0       0
  5143 ;;      Totals:         0      10       0       0       0       0       0       0
  5144 ;;Total ram usage:       10 bytes
  5145 ;; Hardware stack levels used:    1
  5146 ;; Hardware stack levels required when called:    2
  5147 ;; This function calls:
  5148 ;;		___ftadd
  5149 ;;		___ftmul
  5150 ;;		___wmul
  5151 ;; This function is called by:
  5152 ;;		_sin
  5153 ;; This function uses a non-reentrant model
  5154 ;;
  5155                           
  5156                           
  5157                           ;psect for function _eval_poly
  5158  0E31                     _eval_poly:	
  5159                           
  5160                           ;incstack = 0
  5161                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5162  0E31  0020               	movlb	0	; select bank0
  5163  0E32  0843               	movf	eval_poly@n+1,w
  5164  0E33  00F1               	movwf	___wmul@multiplier+1
  5165  0E34  0842               	movf	eval_poly@n,w
  5166  0E35  00F0               	movwf	___wmul@multiplier
  5167  0E36  3003               	movlw	3
  5168  0E37  00F2               	movwf	___wmul@multiplicand
  5169  0E38  3000               	movlw	0
  5170  0E39  00F3               	movwf	___wmul@multiplicand+1
  5171  0E3A  318C  2416  318E   	fcall	___wmul
  5172  0E3D  0020               	movlb	0	; select bank0
  5173  0E3E  0840               	movf	eval_poly@d,w
  5174  0E3F  0770               	addwf	?___wmul,w
  5175  0E40  0084               	movwf	4
  5176  0E41  0841               	movf	eval_poly@d+1,w
  5177  0E42  3D71               	addwfc	?___wmul+1,w
  5178  0E43  0085               	movwf	5
  5179  0E44  3F00               	moviw [0]fsr0
  5180  0E45  00C4               	movwf	eval_poly@res
  5181  0E46  3F01               	moviw [1]fsr0
  5182  0E47  00C5               	movwf	eval_poly@res+1
  5183  0E48  3F02               	moviw [2]fsr0
  5184  0E49                     L2:	
  5185  0E49  00C6               	movwf	eval_poly@res+2
  5186  0E4A  0842               	movf	eval_poly@n,w
  5187  0E4B  0443               	iorwf	eval_poly@n+1,w
  5188  0E4C  1903               	btfsc	3,2
  5189  0E4D  2E8A               	goto	l1696
  5190  0E4E  30FF               	movlw	255
  5191  0E4F  07C2               	addwf	eval_poly@n,f
  5192  0E50  30FF               	movlw	255
  5193  0E51  3DC3               	addwfc	eval_poly@n+1,f
  5194  0E52  0843               	movf	eval_poly@n+1,w
  5195  0E53  00F1               	movwf	___wmul@multiplier+1
  5196  0E54  0842               	movf	eval_poly@n,w
  5197  0E55  00F0               	movwf	___wmul@multiplier
  5198  0E56  3003               	movlw	3
  5199  0E57  00F2               	movwf	___wmul@multiplicand
  5200  0E58  3000               	movlw	0
  5201  0E59  00F3               	movwf	___wmul@multiplicand+1
  5202  0E5A  318C  2416  318E   	fcall	___wmul
  5203  0E5D  0020               	movlb	0	; select bank0
  5204  0E5E  0840               	movf	eval_poly@d,w
  5205  0E5F  0770               	addwf	?___wmul,w
  5206  0E60  0084               	movwf	4
  5207  0E61  0841               	movf	eval_poly@d+1,w
  5208  0E62  3D71               	addwfc	?___wmul+1,w
  5209  0E63  0085               	movwf	5
  5210  0E64  3F00               	moviw [0]fsr0
  5211  0E65  00B0               	movwf	___ftadd@f1
  5212  0E66  3F01               	moviw [1]fsr0
  5213  0E67  00B1               	movwf	___ftadd@f1+1
  5214  0E68  3F02               	moviw [2]fsr0
  5215  0E69  00B2               	movwf	___ftadd@f1+2
  5216  0E6A  0844               	movf	eval_poly@res,w
  5217  0E6B  00A0               	movwf	___ftmul@f1
  5218  0E6C  0845               	movf	eval_poly@res+1,w
  5219  0E6D  00A1               	movwf	___ftmul@f1+1
  5220  0E6E  0846               	movf	eval_poly@res+2,w
  5221  0E6F  00A2               	movwf	___ftmul@f1+2
  5222  0E70  083D               	movf	eval_poly@x,w
  5223  0E71  00A3               	movwf	___ftmul@f2
  5224  0E72  083E               	movf	eval_poly@x+1,w
  5225  0E73  00A4               	movwf	___ftmul@f2+1
  5226  0E74  083F               	movf	eval_poly@x+2,w
  5227  0E75  00A5               	movwf	___ftmul@f2+2
  5228  0E76  3181  2130  318E   	fcall	___ftmul
  5229  0E79  0020               	movlb	0	; select bank0
  5230  0E7A  0820               	movf	?___ftmul,w
  5231  0E7B  00B3               	movwf	___ftadd@f2
  5232  0E7C  0821               	movf	?___ftmul+1,w
  5233  0E7D  00B4               	movwf	___ftadd@f2+1
  5234  0E7E  0822               	movf	?___ftmul+2,w
  5235  0E7F  00B5               	movwf	___ftadd@f2+2
  5236  0E80  3182  22AF  318E   	fcall	___ftadd
  5237  0E83  0020               	movlb	0	; select bank0
  5238  0E84  0830               	movf	?___ftadd,w
  5239  0E85  00C4               	movwf	eval_poly@res
  5240  0E86  0831               	movf	?___ftadd+1,w
  5241  0E87  00C5               	movwf	eval_poly@res+1
  5242  0E88  0832               	movf	?___ftadd+2,w
  5243  0E89  2E49               	goto	L2
  5244  0E8A                     l1696:	
  5245  0E8A  0844               	movf	eval_poly@res,w
  5246  0E8B  00BD               	movwf	?_eval_poly
  5247  0E8C  0845               	movf	eval_poly@res+1,w
  5248  0E8D  00BE               	movwf	?_eval_poly+1
  5249  0E8E  0846               	movf	eval_poly@res+2,w
  5250  0E8F  00BF               	movwf	?_eval_poly+2
  5251  0E90  0008               	return
  5252  0E91                     __end_of_eval_poly:	
  5253                           
  5254                           	psect	text23
  5255  0C16                     __ptext23:	
  5256 ;; *************** function ___wmul *****************
  5257 ;; Defined at:
  5258 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
  5259 ;; Parameters:    Size  Location     Type
  5260 ;;  multiplier      2    0[COMMON] unsigned int 
  5261 ;;  multiplicand    2    2[COMMON] unsigned int 
  5262 ;; Auto vars:     Size  Location     Type
  5263 ;;  product         2    4[COMMON] unsigned int 
  5264 ;; Return value:  Size  Location     Type
  5265 ;;                  2    0[COMMON] unsigned int 
  5266 ;; Registers used:
  5267 ;;		wreg, status,2, status,0
  5268 ;; Tracked objects:
  5269 ;;		On entry : 0/0
  5270 ;;		On exit  : 0/0
  5271 ;;		Unchanged: 0/0
  5272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5273 ;;      Params:         4       0       0       0       0       0       0       0
  5274 ;;      Locals:         2       0       0       0       0       0       0       0
  5275 ;;      Temps:          0       0       0       0       0       0       0       0
  5276 ;;      Totals:         6       0       0       0       0       0       0       0
  5277 ;;Total ram usage:        6 bytes
  5278 ;; Hardware stack levels used:    1
  5279 ;; This function calls:
  5280 ;;		Nothing
  5281 ;; This function is called by:
  5282 ;;		_eval_poly
  5283 ;; This function uses a non-reentrant model
  5284 ;;
  5285                           
  5286                           
  5287                           ;psect for function ___wmul
  5288  0C16                     ___wmul:	
  5289                           
  5290                           ;incstack = 0
  5291                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5292  0C16  01F4               	clrf	___wmul@product
  5293  0C17  01F5               	clrf	___wmul@product+1
  5294  0C18                     l1364:	
  5295  0C18  1C70               	btfss	___wmul@multiplier,0
  5296  0C19  2C1E               	goto	l234
  5297  0C1A  0872               	movf	___wmul@multiplicand,w
  5298  0C1B  07F4               	addwf	___wmul@product,f
  5299  0C1C  0873               	movf	___wmul@multiplicand+1,w
  5300  0C1D  3DF5               	addwfc	___wmul@product+1,f
  5301  0C1E                     l234:	
  5302  0C1E  3001               	movlw	1
  5303  0C1F                     u1245:	
  5304  0C1F  35F2               	lslf	___wmul@multiplicand,f
  5305  0C20  0DF3               	rlf	___wmul@multiplicand+1,f
  5306  0C21  0B89               	decfsz	9,f
  5307  0C22  2C1F               	goto	u1245
  5308  0C23  3001               	movlw	1
  5309  0C24                     u1255:	
  5310  0C24  36F1               	lsrf	___wmul@multiplier+1,f
  5311  0C25  0CF0               	rrf	___wmul@multiplier,f
  5312  0C26  0B89               	decfsz	9,f
  5313  0C27  2C24               	goto	u1255
  5314  0C28  0870               	movf	___wmul@multiplier,w
  5315  0C29  0471               	iorwf	___wmul@multiplier+1,w
  5316  0C2A  1D03               	btfss	3,2
  5317  0C2B  2C18               	goto	l1364
  5318  0C2C  0875               	movf	___wmul@product+1,w
  5319  0C2D  00F1               	movwf	?___wmul+1
  5320  0C2E  0874               	movf	___wmul@product,w
  5321  0C2F  00F0               	movwf	?___wmul
  5322  0C30  0008               	return
  5323  0C31                     __end_of___wmul:	
  5324                           
  5325                           	psect	text24
  5326  0C4E                     __ptext24:	
  5327 ;; *************** function ___ftsub *****************
  5328 ;; Defined at:
  5329 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftsub.c"
  5330 ;; Parameters:    Size  Location     Type
  5331 ;;  f2              3   55[BANK0 ] float 
  5332 ;;  f1              3   58[BANK0 ] float 
  5333 ;; Auto vars:     Size  Location     Type
  5334 ;;		None
  5335 ;; Return value:  Size  Location     Type
  5336 ;;                  3   55[BANK0 ] float 
  5337 ;; Registers used:
  5338 ;;		wreg, status,2, status,0, pclath, cstack
  5339 ;; Tracked objects:
  5340 ;;		On entry : 0/0
  5341 ;;		On exit  : 0/0
  5342 ;;		Unchanged: 0/0
  5343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5344 ;;      Params:         0       6       0       0       0       0       0       0
  5345 ;;      Locals:         0       0       0       0       0       0       0       0
  5346 ;;      Temps:          0       0       0       0       0       0       0       0
  5347 ;;      Totals:         0       6       0       0       0       0       0       0
  5348 ;;Total ram usage:        6 bytes
  5349 ;; Hardware stack levels used:    1
  5350 ;; Hardware stack levels required when called:    2
  5351 ;; This function calls:
  5352 ;;		___ftadd
  5353 ;; This function is called by:
  5354 ;;		_Heartbeat
  5355 ;;		_sin
  5356 ;; This function uses a non-reentrant model
  5357 ;;
  5358                           
  5359                           
  5360                           ;psect for function ___ftsub
  5361  0C4E                     ___ftsub:	
  5362                           
  5363                           ;incstack = 0
  5364                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  5365  0C4E  0020               	movlb	0	; select bank0
  5366  0C4F  0859               	movf	___ftsub@f2+2,w
  5367  0C50  0458               	iorwf	___ftsub@f2+1,w
  5368  0C51  0457               	iorwf	___ftsub@f2,w
  5369  0C52  1903               	skipnz
  5370  0C53  2C56               	goto	l1658
  5371  0C54  3080               	movlw	128
  5372  0C55  06D9               	xorwf	___ftsub@f2+2,f
  5373  0C56                     l1658:	
  5374  0C56  085A               	movf	___ftsub@f1,w
  5375  0C57  00B0               	movwf	___ftadd@f1
  5376  0C58  085B               	movf	___ftsub@f1+1,w
  5377  0C59  00B1               	movwf	___ftadd@f1+1
  5378  0C5A  085C               	movf	___ftsub@f1+2,w
  5379  0C5B  00B2               	movwf	___ftadd@f1+2
  5380  0C5C  0857               	movf	___ftsub@f2,w
  5381  0C5D  00B3               	movwf	___ftadd@f2
  5382  0C5E  0858               	movf	___ftsub@f2+1,w
  5383  0C5F  00B4               	movwf	___ftadd@f2+1
  5384  0C60  0859               	movf	___ftsub@f2+2,w
  5385  0C61  00B5               	movwf	___ftadd@f2+2
  5386  0C62  3182  22AF         	fcall	___ftadd
  5387  0C64  0020               	movlb	0	; select bank0
  5388  0C65  0830               	movf	?___ftadd,w
  5389  0C66  00D7               	movwf	?___ftsub
  5390  0C67  0831               	movf	?___ftadd+1,w
  5391  0C68  00D8               	movwf	?___ftsub+1
  5392  0C69  0832               	movf	?___ftadd+2,w
  5393  0C6A  00D9               	movwf	?___ftsub+2
  5394  0C6B  0008               	return
  5395  0C6C                     __end_of___ftsub:	
  5396                           
  5397                           	psect	text25
  5398  0BEE                     __ptext25:	
  5399 ;; *************** function ___lwtoft *****************
  5400 ;; Defined at:
  5401 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwtoft.c"
  5402 ;; Parameters:    Size  Location     Type
  5403 ;;  c               2    8[COMMON] unsigned int 
  5404 ;; Auto vars:     Size  Location     Type
  5405 ;;		None
  5406 ;; Return value:  Size  Location     Type
  5407 ;;                  3    8[COMMON] float 
  5408 ;; Registers used:
  5409 ;;		wreg, status,2, status,0, pclath, cstack
  5410 ;; Tracked objects:
  5411 ;;		On entry : 0/0
  5412 ;;		On exit  : 0/0
  5413 ;;		Unchanged: 0/0
  5414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5415 ;;      Params:         3       0       0       0       0       0       0       0
  5416 ;;      Locals:         0       0       0       0       0       0       0       0
  5417 ;;      Temps:          1       0       0       0       0       0       0       0
  5418 ;;      Totals:         4       0       0       0       0       0       0       0
  5419 ;;Total ram usage:        4 bytes
  5420 ;; Hardware stack levels used:    1
  5421 ;; Hardware stack levels required when called:    1
  5422 ;; This function calls:
  5423 ;;		___ftpack
  5424 ;; This function is called by:
  5425 ;;		_Heartbeat
  5426 ;;		_Step
  5427 ;; This function uses a non-reentrant model
  5428 ;;
  5429                           
  5430                           
  5431                           ;psect for function ___lwtoft
  5432  0BEE                     ___lwtoft:	
  5433                           
  5434                           ;incstack = 0
  5435                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  5436  0BEE  0878               	movf	___lwtoft@c,w
  5437  0BEF  00F0               	movwf	___ftpack@arg
  5438  0BF0  0879               	movf	___lwtoft@c+1,w
  5439  0BF1  00F1               	movwf	___ftpack@arg+1
  5440  0BF2  01F2               	clrf	___ftpack@arg+2
  5441  0BF3  308E               	movlw	142
  5442  0BF4  00FB               	movwf	??___lwtoft
  5443  0BF5  087B               	movf	??___lwtoft,w
  5444  0BF6  00F3               	movwf	___ftpack@exp
  5445  0BF7  01F4               	clrf	___ftpack@sign
  5446  0BF8  318E  2691         	fcall	___ftpack
  5447  0BFA  0870               	movf	?___ftpack,w
  5448  0BFB  00F8               	movwf	?___lwtoft
  5449  0BFC  0871               	movf	?___ftpack+1,w
  5450  0BFD  00F9               	movwf	?___lwtoft+1
  5451  0BFE  0872               	movf	?___ftpack+2,w
  5452  0BFF  00FA               	movwf	?___lwtoft+2
  5453  0C00  0008               	return
  5454  0C01                     __end_of___lwtoft:	
  5455                           
  5456                           	psect	text26
  5457  062D                     __ptext26:	
  5458 ;; *************** function _Generate_Desired *****************
  5459 ;; Defined at:
  5460 ;;		line 82 in file "main.c"
  5461 ;; Parameters:    Size  Location     Type
  5462 ;;		None
  5463 ;; Auto vars:     Size  Location     Type
  5464 ;;  sum             3   67[BANK0 ] float 
  5465 ;;  rand3           3   64[BANK0 ] float 
  5466 ;;  rand2           3   61[BANK0 ] float 
  5467 ;;  rand1           3   58[BANK0 ] float 
  5468 ;; Return value:  Size  Location     Type
  5469 ;;                  1    wreg      void 
  5470 ;; Registers used:
  5471 ;;		wreg, status,2, status,0, pclath, cstack
  5472 ;; Tracked objects:
  5473 ;;		On entry : 0/0
  5474 ;;		On exit  : 0/0
  5475 ;;		Unchanged: 0/0
  5476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5477 ;;      Params:         0       0       0       0       0       0       0       0
  5478 ;;      Locals:         0      15       0       0       0       0       0       0
  5479 ;;      Temps:          0       0       0       0       0       0       0       0
  5480 ;;      Totals:         0      15       0       0       0       0       0       0
  5481 ;;Total ram usage:       15 bytes
  5482 ;; Hardware stack levels used:    1
  5483 ;; Hardware stack levels required when called:    2
  5484 ;; This function calls:
  5485 ;;		___awtoft
  5486 ;;		___ftadd
  5487 ;;		___ftdiv
  5488 ;;		___ftge
  5489 ;;		___ftmul
  5490 ;;		___ftneg
  5491 ;;		_rand
  5492 ;; This function is called by:
  5493 ;;		_Step
  5494 ;;		_main
  5495 ;; This function uses a non-reentrant model
  5496 ;;
  5497                           
  5498                           
  5499                           ;psect for function _Generate_Desired
  5500  062D                     _Generate_Desired:	
  5501                           
  5502                           ;main.c: 83: timeSinceLastUpdate = 0;
  5503                           
  5504                           ;incstack = 0
  5505                           ; Regs used in _Generate_Desired: [wreg+status,2+status,0+pclath+cstack]
  5506  062D  0021               	movlb	1	; select bank1
  5507  062E  01BF               	clrf	_timeSinceLastUpdate^(0+128)
  5508  062F  01C0               	clrf	(_timeSinceLastUpdate+1)^(0+128)
  5509                           
  5510                           ;main.c: 84: float rand1 = rand();
  5511  0630  318D  25AB  3186   	fcall	_rand
  5512  0633  087D               	movf	?_rand+1,w
  5513  0634  0020               	movlb	0	; select bank0
  5514  0635  00A6               	movwf	___awtoft@c+1
  5515  0636  087C               	movf	?_rand,w
  5516  0637  00A5               	movwf	___awtoft@c
  5517  0638  318C  24AC  3186   	fcall	___awtoft
  5518  063B  0020               	movlb	0	; select bank0
  5519  063C  0825               	movf	?___awtoft,w
  5520  063D  00DA               	movwf	Generate_Desired@rand1
  5521  063E  0826               	movf	?___awtoft+1,w
  5522  063F  00DB               	movwf	Generate_Desired@rand1+1
  5523  0640  0827               	movf	?___awtoft+2,w
  5524  0641  00DC               	movwf	Generate_Desired@rand1+2
  5525                           
  5526                           ;main.c: 85: float rand2 = rand();
  5527  0642  318D  25AB  3186   	fcall	_rand
  5528  0645  087D               	movf	?_rand+1,w
  5529  0646  0020               	movlb	0	; select bank0
  5530  0647  00A6               	movwf	___awtoft@c+1
  5531  0648  087C               	movf	?_rand,w
  5532  0649  00A5               	movwf	___awtoft@c
  5533  064A  318C  24AC  3186   	fcall	___awtoft
  5534  064D  0020               	movlb	0	; select bank0
  5535  064E  0825               	movf	?___awtoft,w
  5536  064F  00DD               	movwf	Generate_Desired@rand2
  5537  0650  0826               	movf	?___awtoft+1,w
  5538  0651  00DE               	movwf	Generate_Desired@rand2+1
  5539  0652  0827               	movf	?___awtoft+2,w
  5540  0653  00DF               	movwf	Generate_Desired@rand2+2
  5541                           
  5542                           ;main.c: 86: float rand3 = rand();
  5543  0654  318D  25AB  3186   	fcall	_rand
  5544  0657  087D               	movf	?_rand+1,w
  5545  0658  0020               	movlb	0	; select bank0
  5546  0659  00A6               	movwf	___awtoft@c+1
  5547  065A  087C               	movf	?_rand,w
  5548  065B  00A5               	movwf	___awtoft@c
  5549  065C  318C  24AC  3186   	fcall	___awtoft
  5550  065F  0020               	movlb	0	; select bank0
  5551  0660  0825               	movf	?___awtoft,w
  5552  0661  00E0               	movwf	Generate_Desired@rand3
  5553  0662  0826               	movf	?___awtoft+1,w
  5554  0663  00E1               	movwf	Generate_Desired@rand3+1
  5555  0664  0827               	movf	?___awtoft+2,w
  5556  0665  00E2               	movwf	Generate_Desired@rand3+2
  5557                           
  5558                           ;main.c: 87: float sum = rand1+rand2+rand3;
  5559  0666  085D               	movf	Generate_Desired@rand2,w
  5560  0667  00B0               	movwf	___ftadd@f1
  5561  0668  085E               	movf	Generate_Desired@rand2+1,w
  5562  0669  00B1               	movwf	___ftadd@f1+1
  5563  066A  085F               	movf	Generate_Desired@rand2+2,w
  5564  066B  00B2               	movwf	___ftadd@f1+2
  5565  066C  085A               	movf	Generate_Desired@rand1,w
  5566  066D  00B3               	movwf	___ftadd@f2
  5567  066E  085B               	movf	Generate_Desired@rand1+1,w
  5568  066F  00B4               	movwf	___ftadd@f2+1
  5569  0670  085C               	movf	Generate_Desired@rand1+2,w
  5570  0671  00B5               	movwf	___ftadd@f2+2
  5571  0672  3182  22AF  3186   	fcall	___ftadd
  5572  0675  0020               	movlb	0	; select bank0
  5573  0676  0830               	movf	?___ftadd,w
  5574  0677  00D7               	movwf	_Generate_Desired$767
  5575  0678  0831               	movf	?___ftadd+1,w
  5576  0679  00D8               	movwf	_Generate_Desired$767+1
  5577  067A  0832               	movf	?___ftadd+2,w
  5578  067B  00D9               	movwf	_Generate_Desired$767+2
  5579                           
  5580                           ;main.c: 87: float sum = rand1+rand2+rand3;
  5581  067C  0860               	movf	Generate_Desired@rand3,w
  5582  067D  00B0               	movwf	___ftadd@f1
  5583  067E  0861               	movf	Generate_Desired@rand3+1,w
  5584  067F  00B1               	movwf	___ftadd@f1+1
  5585  0680  0862               	movf	Generate_Desired@rand3+2,w
  5586  0681  00B2               	movwf	___ftadd@f1+2
  5587  0682  0857               	movf	_Generate_Desired$767,w
  5588  0683  00B3               	movwf	___ftadd@f2
  5589  0684  0858               	movf	_Generate_Desired$767+1,w
  5590  0685  00B4               	movwf	___ftadd@f2+1
  5591  0686  0859               	movf	_Generate_Desired$767+2,w
  5592  0687  00B5               	movwf	___ftadd@f2+2
  5593  0688  3182  22AF  3186   	fcall	___ftadd
  5594  068B  0020               	movlb	0	; select bank0
  5595  068C  0830               	movf	?___ftadd,w
  5596  068D  00E3               	movwf	Generate_Desired@sum
  5597  068E  0831               	movf	?___ftadd+1,w
  5598  068F  00E4               	movwf	Generate_Desired@sum+1
  5599  0690  0832               	movf	?___ftadd+2,w
  5600  0691  00E5               	movwf	Generate_Desired@sum+2
  5601                           
  5602                           ;main.c: 88: if(sum < 1){
  5603  0692  0863               	movf	Generate_Desired@sum,w
  5604  0693  00A0               	movwf	___ftge@ff1
  5605  0694  0864               	movf	Generate_Desired@sum+1,w
  5606  0695  00A1               	movwf	___ftge@ff1+1
  5607  0696  0865               	movf	Generate_Desired@sum+2,w
  5608  0697  00A2               	movwf	___ftge@ff1+2
  5609  0698  3000               	movlw	0
  5610  0699  00A3               	movwf	___ftge@ff2
  5611  069A  3080               	movlw	128
  5612  069B  00A4               	movwf	___ftge@ff2+1
  5613  069C  303F               	movlw	63
  5614  069D  00A5               	movwf	___ftge@ff2+2
  5615  069E  318D  2532  3186   	fcall	___ftge
  5616  06A1  1803               	btfsc	3,0
  5617  06A2  2EAA               	goto	l1800
  5618                           
  5619                           ;main.c: 89: sum = 1;
  5620  06A3  3000               	movlw	0
  5621  06A4  0020               	movlb	0	; select bank0
  5622  06A5  00E3               	movwf	Generate_Desired@sum
  5623  06A6  3080               	movlw	128
  5624  06A7  00E4               	movwf	Generate_Desired@sum+1
  5625  06A8  303F               	movlw	63
  5626  06A9  00E5               	movwf	Generate_Desired@sum+2
  5627  06AA                     l1800:	
  5628                           
  5629                           ;main.c: 90: }
  5630                           ;main.c: 92: Pwm_1_Desired = (rand1 / sum) * 1023;
  5631  06AA  30C0               	movlw	192
  5632  06AB  0020               	movlb	0	; select bank0
  5633  06AC  00A0               	movwf	___ftmul@f1
  5634  06AD  307F               	movlw	127
  5635  06AE  00A1               	movwf	___ftmul@f1+1
  5636  06AF  3044               	movlw	68
  5637  06B0  00A2               	movwf	___ftmul@f1+2
  5638  06B1  0863               	movf	Generate_Desired@sum,w
  5639  06B2  00C7               	movwf	___ftdiv@f2
  5640  06B3  0864               	movf	Generate_Desired@sum+1,w
  5641  06B4  00C8               	movwf	___ftdiv@f2+1
  5642  06B5  0865               	movf	Generate_Desired@sum+2,w
  5643  06B6  00C9               	movwf	___ftdiv@f2+2
  5644  06B7  085A               	movf	Generate_Desired@rand1,w
  5645  06B8  00CA               	movwf	___ftdiv@f1
  5646  06B9  085B               	movf	Generate_Desired@rand1+1,w
  5647  06BA  00CB               	movwf	___ftdiv@f1+1
  5648  06BB  085C               	movf	Generate_Desired@rand1+2,w
  5649  06BC  00CC               	movwf	___ftdiv@f1+2
  5650  06BD  3180  2087  3186   	fcall	___ftdiv
  5651  06C0  0020               	movlb	0	; select bank0
  5652  06C1  0847               	movf	?___ftdiv,w
  5653  06C2  00A3               	movwf	___ftmul@f2
  5654  06C3  0848               	movf	?___ftdiv+1,w
  5655  06C4  00A4               	movwf	___ftmul@f2+1
  5656  06C5  0849               	movf	?___ftdiv+2,w
  5657  06C6  00A5               	movwf	___ftmul@f2+2
  5658  06C7  3181  2130  3186   	fcall	___ftmul
  5659  06CA  0020               	movlb	0	; select bank0
  5660  06CB  0820               	movf	?___ftmul,w
  5661  06CC  0021               	movlb	1	; select bank1
  5662  06CD  00B8               	movwf	_Pwm_1_Desired^(0+128)
  5663  06CE  0020               	movlb	0	; select bank0
  5664  06CF  0821               	movf	?___ftmul+1,w
  5665  06D0  0021               	movlb	1	; select bank1
  5666  06D1  00B9               	movwf	(_Pwm_1_Desired+1)^(0+128)
  5667  06D2  0020               	movlb	0	; select bank0
  5668  06D3  0822               	movf	?___ftmul+2,w
  5669  06D4  0021               	movlb	1	; select bank1
  5670  06D5  00BA               	movwf	(_Pwm_1_Desired+2)^(0+128)
  5671                           
  5672                           ;main.c: 93: Pwm_2_Desired = (rand2 / sum) * 1023;
  5673  06D6  30C0               	movlw	192
  5674  06D7  0020               	movlb	0	; select bank0
  5675  06D8  00A0               	movwf	___ftmul@f1
  5676  06D9  307F               	movlw	127
  5677  06DA  00A1               	movwf	___ftmul@f1+1
  5678  06DB  3044               	movlw	68
  5679  06DC  00A2               	movwf	___ftmul@f1+2
  5680  06DD  0863               	movf	Generate_Desired@sum,w
  5681  06DE  00C7               	movwf	___ftdiv@f2
  5682  06DF  0864               	movf	Generate_Desired@sum+1,w
  5683  06E0  00C8               	movwf	___ftdiv@f2+1
  5684  06E1  0865               	movf	Generate_Desired@sum+2,w
  5685  06E2  00C9               	movwf	___ftdiv@f2+2
  5686  06E3  085D               	movf	Generate_Desired@rand2,w
  5687  06E4  00CA               	movwf	___ftdiv@f1
  5688  06E5  085E               	movf	Generate_Desired@rand2+1,w
  5689  06E6  00CB               	movwf	___ftdiv@f1+1
  5690  06E7  085F               	movf	Generate_Desired@rand2+2,w
  5691  06E8  00CC               	movwf	___ftdiv@f1+2
  5692  06E9  3180  2087  3186   	fcall	___ftdiv
  5693  06EC  0020               	movlb	0	; select bank0
  5694  06ED  0847               	movf	?___ftdiv,w
  5695  06EE  00A3               	movwf	___ftmul@f2
  5696  06EF  0848               	movf	?___ftdiv+1,w
  5697  06F0  00A4               	movwf	___ftmul@f2+1
  5698  06F1  0849               	movf	?___ftdiv+2,w
  5699  06F2  00A5               	movwf	___ftmul@f2+2
  5700  06F3  3181  2130  3186   	fcall	___ftmul
  5701  06F6  0020               	movlb	0	; select bank0
  5702  06F7  0820               	movf	?___ftmul,w
  5703  06F8  0021               	movlb	1	; select bank1
  5704  06F9  00AF               	movwf	_Pwm_2_Desired^(0+128)
  5705  06FA  0020               	movlb	0	; select bank0
  5706  06FB  0821               	movf	?___ftmul+1,w
  5707  06FC  0021               	movlb	1	; select bank1
  5708  06FD  00B0               	movwf	(_Pwm_2_Desired+1)^(0+128)
  5709  06FE  0020               	movlb	0	; select bank0
  5710  06FF  0822               	movf	?___ftmul+2,w
  5711  0700  0021               	movlb	1	; select bank1
  5712  0701  00B1               	movwf	(_Pwm_2_Desired+2)^(0+128)
  5713                           
  5714                           ;main.c: 94: Pwm_3_Desired = (rand3 / sum) * 1023;
  5715  0702  30C0               	movlw	192
  5716  0703  0020               	movlb	0	; select bank0
  5717  0704  00A0               	movwf	___ftmul@f1
  5718  0705  307F               	movlw	127
  5719  0706  00A1               	movwf	___ftmul@f1+1
  5720  0707  3044               	movlw	68
  5721  0708  00A2               	movwf	___ftmul@f1+2
  5722  0709  0863               	movf	Generate_Desired@sum,w
  5723  070A  00C7               	movwf	___ftdiv@f2
  5724  070B  0864               	movf	Generate_Desired@sum+1,w
  5725  070C  00C8               	movwf	___ftdiv@f2+1
  5726  070D  0865               	movf	Generate_Desired@sum+2,w
  5727  070E  00C9               	movwf	___ftdiv@f2+2
  5728  070F  0860               	movf	Generate_Desired@rand3,w
  5729  0710  00CA               	movwf	___ftdiv@f1
  5730  0711  0861               	movf	Generate_Desired@rand3+1,w
  5731  0712  00CB               	movwf	___ftdiv@f1+1
  5732  0713  0862               	movf	Generate_Desired@rand3+2,w
  5733  0714  00CC               	movwf	___ftdiv@f1+2
  5734  0715  3180  2087  3186   	fcall	___ftdiv
  5735  0718  0020               	movlb	0	; select bank0
  5736  0719  0847               	movf	?___ftdiv,w
  5737  071A  00A3               	movwf	___ftmul@f2
  5738  071B  0848               	movf	?___ftdiv+1,w
  5739  071C  00A4               	movwf	___ftmul@f2+1
  5740  071D  0849               	movf	?___ftdiv+2,w
  5741  071E  00A5               	movwf	___ftmul@f2+2
  5742  071F  3181  2130  3186   	fcall	___ftmul
  5743  0722  0020               	movlb	0	; select bank0
  5744  0723  0820               	movf	?___ftmul,w
  5745  0724  0021               	movlb	1	; select bank1
  5746  0725  00A6               	movwf	_Pwm_3_Desired^(0+128)
  5747  0726  0020               	movlb	0	; select bank0
  5748  0727  0821               	movf	?___ftmul+1,w
  5749  0728  0021               	movlb	1	; select bank1
  5750  0729  00A7               	movwf	(_Pwm_3_Desired+1)^(0+128)
  5751  072A  0020               	movlb	0	; select bank0
  5752  072B  0822               	movf	?___ftmul+2,w
  5753  072C  0021               	movlb	1	; select bank1
  5754  072D  00A8               	movwf	(_Pwm_3_Desired+2)^(0+128)
  5755                           
  5756                           ;main.c: 96: Pwm_1_Step = (Pwm_1_Desired - Pwm_1_Current) / 1000;
  5757  072E  3000               	movlw	0
  5758  072F  0020               	movlb	0	; select bank0
  5759  0730  00C7               	movwf	___ftdiv@f2
  5760  0731  307A               	movlw	122
  5761  0732  00C8               	movwf	___ftdiv@f2+1
  5762  0733  3044               	movlw	68
  5763  0734  00C9               	movwf	___ftdiv@f2+2
  5764  0735  0021               	movlb	1	; select bank1
  5765  0736  0838               	movf	_Pwm_1_Desired^(0+128),w
  5766  0737  0020               	movlb	0	; select bank0
  5767  0738  00B0               	movwf	___ftadd@f1
  5768  0739  0021               	movlb	1	; select bank1
  5769  073A  0839               	movf	(_Pwm_1_Desired+1)^(0+128),w
  5770  073B  0020               	movlb	0	; select bank0
  5771  073C  00B1               	movwf	___ftadd@f1+1
  5772  073D  0021               	movlb	1	; select bank1
  5773  073E  083A               	movf	(_Pwm_1_Desired+2)^(0+128),w
  5774  073F  0020               	movlb	0	; select bank0
  5775  0740  00B2               	movwf	___ftadd@f1+2
  5776  0741  0021               	movlb	1	; select bank1
  5777  0742  0835               	movf	_Pwm_1_Current^(0+128),w
  5778  0743  00F0               	movwf	___ftneg@f1
  5779  0744  0836               	movf	(_Pwm_1_Current+1)^(0+128),w
  5780  0745  00F1               	movwf	___ftneg@f1+1
  5781  0746  0837               	movf	(_Pwm_1_Current+2)^(0+128),w
  5782  0747  00F2               	movwf	___ftneg@f1+2
  5783  0748  318B  23BC  3186   	fcall	___ftneg
  5784  074B  0870               	movf	?___ftneg,w
  5785  074C  0020               	movlb	0	; select bank0
  5786  074D  00B3               	movwf	___ftadd@f2
  5787  074E  0871               	movf	?___ftneg+1,w
  5788  074F  00B4               	movwf	___ftadd@f2+1
  5789  0750  0872               	movf	?___ftneg+2,w
  5790  0751  00B5               	movwf	___ftadd@f2+2
  5791  0752  3182  22AF  3186   	fcall	___ftadd
  5792  0755  0020               	movlb	0	; select bank0
  5793  0756  0830               	movf	?___ftadd,w
  5794  0757  00CA               	movwf	___ftdiv@f1
  5795  0758  0831               	movf	?___ftadd+1,w
  5796  0759  00CB               	movwf	___ftdiv@f1+1
  5797  075A  0832               	movf	?___ftadd+2,w
  5798  075B  00CC               	movwf	___ftdiv@f1+2
  5799  075C  3180  2087  3186   	fcall	___ftdiv
  5800  075F  0020               	movlb	0	; select bank0
  5801  0760  0847               	movf	?___ftdiv,w
  5802  0761  0021               	movlb	1	; select bank1
  5803  0762  00B2               	movwf	_Pwm_1_Step^(0+128)
  5804  0763  0020               	movlb	0	; select bank0
  5805  0764  0848               	movf	?___ftdiv+1,w
  5806  0765  0021               	movlb	1	; select bank1
  5807  0766  00B3               	movwf	(_Pwm_1_Step+1)^(0+128)
  5808  0767  0020               	movlb	0	; select bank0
  5809  0768  0849               	movf	?___ftdiv+2,w
  5810  0769  0021               	movlb	1	; select bank1
  5811  076A  00B4               	movwf	(_Pwm_1_Step+2)^(0+128)
  5812                           
  5813                           ;main.c: 97: Pwm_2_Step = (Pwm_2_Desired - Pwm_2_Current) / 1000;
  5814  076B  3000               	movlw	0
  5815  076C  0020               	movlb	0	; select bank0
  5816  076D  00C7               	movwf	___ftdiv@f2
  5817  076E  307A               	movlw	122
  5818  076F  00C8               	movwf	___ftdiv@f2+1
  5819  0770  3044               	movlw	68
  5820  0771  00C9               	movwf	___ftdiv@f2+2
  5821  0772  0021               	movlb	1	; select bank1
  5822  0773  082F               	movf	_Pwm_2_Desired^(0+128),w
  5823  0774  0020               	movlb	0	; select bank0
  5824  0775  00B0               	movwf	___ftadd@f1
  5825  0776  0021               	movlb	1	; select bank1
  5826  0777  0830               	movf	(_Pwm_2_Desired+1)^(0+128),w
  5827  0778  0020               	movlb	0	; select bank0
  5828  0779  00B1               	movwf	___ftadd@f1+1
  5829  077A  0021               	movlb	1	; select bank1
  5830  077B  0831               	movf	(_Pwm_2_Desired+2)^(0+128),w
  5831  077C  0020               	movlb	0	; select bank0
  5832  077D  00B2               	movwf	___ftadd@f1+2
  5833  077E  0021               	movlb	1	; select bank1
  5834  077F  082C               	movf	_Pwm_2_Current^(0+128),w
  5835  0780  00F0               	movwf	___ftneg@f1
  5836  0781  082D               	movf	(_Pwm_2_Current+1)^(0+128),w
  5837  0782  00F1               	movwf	___ftneg@f1+1
  5838  0783  082E               	movf	(_Pwm_2_Current+2)^(0+128),w
  5839  0784  00F2               	movwf	___ftneg@f1+2
  5840  0785  318B  23BC  3186   	fcall	___ftneg
  5841  0788  0870               	movf	?___ftneg,w
  5842  0789  0020               	movlb	0	; select bank0
  5843  078A  00B3               	movwf	___ftadd@f2
  5844  078B  0871               	movf	?___ftneg+1,w
  5845  078C  00B4               	movwf	___ftadd@f2+1
  5846  078D  0872               	movf	?___ftneg+2,w
  5847  078E  00B5               	movwf	___ftadd@f2+2
  5848  078F  3182  22AF  3186   	fcall	___ftadd
  5849  0792  0020               	movlb	0	; select bank0
  5850  0793  0830               	movf	?___ftadd,w
  5851  0794  00CA               	movwf	___ftdiv@f1
  5852  0795  0831               	movf	?___ftadd+1,w
  5853  0796  00CB               	movwf	___ftdiv@f1+1
  5854  0797  0832               	movf	?___ftadd+2,w
  5855  0798  00CC               	movwf	___ftdiv@f1+2
  5856  0799  3180  2087  3186   	fcall	___ftdiv
  5857  079C  0020               	movlb	0	; select bank0
  5858  079D  0847               	movf	?___ftdiv,w
  5859  079E  0021               	movlb	1	; select bank1
  5860  079F  00A9               	movwf	_Pwm_2_Step^(0+128)
  5861  07A0  0020               	movlb	0	; select bank0
  5862  07A1  0848               	movf	?___ftdiv+1,w
  5863  07A2  0021               	movlb	1	; select bank1
  5864  07A3  00AA               	movwf	(_Pwm_2_Step+1)^(0+128)
  5865  07A4  0020               	movlb	0	; select bank0
  5866  07A5  0849               	movf	?___ftdiv+2,w
  5867  07A6  0021               	movlb	1	; select bank1
  5868  07A7  00AB               	movwf	(_Pwm_2_Step+2)^(0+128)
  5869                           
  5870                           ;main.c: 98: Pwm_3_Step = (Pwm_3_Desired - Pwm_3_Current) / 1000;
  5871  07A8  3000               	movlw	0
  5872  07A9  0020               	movlb	0	; select bank0
  5873  07AA  00C7               	movwf	___ftdiv@f2
  5874  07AB  307A               	movlw	122
  5875  07AC  00C8               	movwf	___ftdiv@f2+1
  5876  07AD  3044               	movlw	68
  5877  07AE  00C9               	movwf	___ftdiv@f2+2
  5878  07AF  0021               	movlb	1	; select bank1
  5879  07B0  0826               	movf	_Pwm_3_Desired^(0+128),w
  5880  07B1  0020               	movlb	0	; select bank0
  5881  07B2  00B0               	movwf	___ftadd@f1
  5882  07B3  0021               	movlb	1	; select bank1
  5883  07B4  0827               	movf	(_Pwm_3_Desired+1)^(0+128),w
  5884  07B5  0020               	movlb	0	; select bank0
  5885  07B6  00B1               	movwf	___ftadd@f1+1
  5886  07B7  0021               	movlb	1	; select bank1
  5887  07B8  0828               	movf	(_Pwm_3_Desired+2)^(0+128),w
  5888  07B9  0020               	movlb	0	; select bank0
  5889  07BA  00B2               	movwf	___ftadd@f1+2
  5890  07BB  0021               	movlb	1	; select bank1
  5891  07BC  0823               	movf	_Pwm_3_Current^(0+128),w
  5892  07BD  00F0               	movwf	___ftneg@f1
  5893  07BE  0824               	movf	(_Pwm_3_Current+1)^(0+128),w
  5894  07BF  00F1               	movwf	___ftneg@f1+1
  5895  07C0  0825               	movf	(_Pwm_3_Current+2)^(0+128),w
  5896  07C1  00F2               	movwf	___ftneg@f1+2
  5897  07C2  318B  23BC  3186   	fcall	___ftneg
  5898  07C5  0870               	movf	?___ftneg,w
  5899  07C6  0020               	movlb	0	; select bank0
  5900  07C7  00B3               	movwf	___ftadd@f2
  5901  07C8  0871               	movf	?___ftneg+1,w
  5902  07C9  00B4               	movwf	___ftadd@f2+1
  5903  07CA  0872               	movf	?___ftneg+2,w
  5904  07CB  00B5               	movwf	___ftadd@f2+2
  5905  07CC  3182  22AF  3186   	fcall	___ftadd
  5906  07CF  0020               	movlb	0	; select bank0
  5907  07D0  0830               	movf	?___ftadd,w
  5908  07D1  00CA               	movwf	___ftdiv@f1
  5909  07D2  0831               	movf	?___ftadd+1,w
  5910  07D3  00CB               	movwf	___ftdiv@f1+1
  5911  07D4  0832               	movf	?___ftadd+2,w
  5912  07D5  00CC               	movwf	___ftdiv@f1+2
  5913  07D6  3180  2087         	fcall	___ftdiv
  5914  07D8  0020               	movlb	0	; select bank0
  5915  07D9  0847               	movf	?___ftdiv,w
  5916  07DA  0021               	movlb	1	; select bank1
  5917  07DB  00A0               	movwf	_Pwm_3_Step^(0+128)
  5918  07DC  0020               	movlb	0	; select bank0
  5919  07DD  0848               	movf	?___ftdiv+1,w
  5920  07DE  0021               	movlb	1	; select bank1
  5921  07DF  00A1               	movwf	(_Pwm_3_Step+1)^(0+128)
  5922  07E0  0020               	movlb	0	; select bank0
  5923  07E1  0849               	movf	?___ftdiv+2,w
  5924  07E2  0021               	movlb	1	; select bank1
  5925  07E3  00A2               	movwf	(_Pwm_3_Step+2)^(0+128)
  5926  07E4  0008               	return
  5927  07E5                     __end_of_Generate_Desired:	
  5928                           
  5929                           	psect	text27
  5930  0DAB                     __ptext27:	
  5931 ;; *************** function _rand *****************
  5932 ;; Defined at:
  5933 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\rand.c"
  5934 ;; Parameters:    Size  Location     Type
  5935 ;;		None
  5936 ;; Auto vars:     Size  Location     Type
  5937 ;;		None
  5938 ;; Return value:  Size  Location     Type
  5939 ;;                  2   12[COMMON] int 
  5940 ;; Registers used:
  5941 ;;		wreg, status,2, status,0, pclath, cstack
  5942 ;; Tracked objects:
  5943 ;;		On entry : 0/0
  5944 ;;		On exit  : 0/0
  5945 ;;		Unchanged: 0/0
  5946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5947 ;;      Params:         2       0       0       0       0       0       0       0
  5948 ;;      Locals:         0       0       0       0       0       0       0       0
  5949 ;;      Temps:          0       5       0       0       0       0       0       0
  5950 ;;      Totals:         2       5       0       0       0       0       0       0
  5951 ;;Total ram usage:        7 bytes
  5952 ;; Hardware stack levels used:    1
  5953 ;; Hardware stack levels required when called:    1
  5954 ;; This function calls:
  5955 ;;		___lmul
  5956 ;; This function is called by:
  5957 ;;		_Generate_Desired
  5958 ;; This function uses a non-reentrant model
  5959 ;;
  5960                           
  5961                           
  5962                           ;psect for function _rand
  5963  0DAB                     _rand:	
  5964                           
  5965                           ;incstack = 0
  5966                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  5967  0DAB  0021               	movlb	1	; select bank1
  5968  0DAC  0855               	movf	(_randx+3)^(0+128),w
  5969  0DAD  00F3               	movwf	___lmul@multiplier+3
  5970  0DAE  0854               	movf	(_randx+2)^(0+128),w
  5971  0DAF  00F2               	movwf	___lmul@multiplier+2
  5972  0DB0  0853               	movf	(_randx+1)^(0+128),w
  5973  0DB1  00F1               	movwf	___lmul@multiplier+1
  5974  0DB2  0852               	movf	_randx^(0+128),w
  5975  0DB3  00F0               	movwf	___lmul@multiplier
  5976  0DB4  3041               	movlw	65
  5977  0DB5  00F7               	movwf	___lmul@multiplicand+3
  5978  0DB6  30C6               	movlw	198
  5979  0DB7  00F6               	movwf	___lmul@multiplicand+2
  5980  0DB8  304E               	movlw	78
  5981  0DB9  00F5               	movwf	___lmul@multiplicand+1
  5982  0DBA  306D               	movlw	109
  5983  0DBB  00F4               	movwf	___lmul@multiplicand
  5984  0DBC  318C  24CE  318D   	fcall	___lmul
  5985  0DBF  0873               	movf	?___lmul+3,w
  5986  0DC0  0021               	movlb	1	; select bank1
  5987  0DC1  00D5               	movwf	(_randx+3)^(0+128)
  5988  0DC2  0872               	movf	?___lmul+2,w
  5989  0DC3  00D4               	movwf	(_randx+2)^(0+128)
  5990  0DC4  0871               	movf	?___lmul+1,w
  5991  0DC5  00D3               	movwf	(_randx+1)^(0+128)
  5992  0DC6  0870               	movf	?___lmul,w
  5993  0DC7  00D2               	movwf	_randx^(0+128)
  5994  0DC8  3039               	movlw	57
  5995  0DC9  07D2               	addwf	_randx^(0+128),f
  5996  0DCA  3030               	movlw	48
  5997  0DCB  3DD3               	addwfc	(_randx+1)^(0+128),f
  5998  0DCC  3000               	movlw	0
  5999  0DCD  3DD4               	addwfc	(_randx+2)^(0+128),f
  6000  0DCE  3000               	movlw	0
  6001  0DCF  3DD5               	addwfc	(_randx+3)^(0+128),f
  6002  0DD0  0852               	movf	_randx^(0+128),w
  6003  0DD1  0020               	movlb	0	; select bank0
  6004  0DD2  00A0               	movwf	??_rand
  6005  0DD3  0021               	movlb	1	; select bank1
  6006  0DD4  0853               	movf	(_randx+1)^(0+128),w
  6007  0DD5  0020               	movlb	0	; select bank0
  6008  0DD6  00A1               	movwf	??_rand+1
  6009  0DD7  0021               	movlb	1	; select bank1
  6010  0DD8  0854               	movf	(_randx+2)^(0+128),w
  6011  0DD9  0020               	movlb	0	; select bank0
  6012  0DDA  00A2               	movwf	??_rand+2
  6013  0DDB  0021               	movlb	1	; select bank1
  6014  0DDC  0855               	movf	(_randx+3)^(0+128),w
  6015  0DDD  0020               	movlb	0	; select bank0
  6016  0DDE  00A3               	movwf	??_rand+3
  6017  0DDF  3010               	movlw	16
  6018  0DE0  00A4               	movwf	??_rand+4
  6019  0DE1                     u2045:	
  6020  0DE1  37A3               	asrf	??_rand+3,f
  6021  0DE2  0CA2               	rrf	??_rand+2,f
  6022  0DE3  0CA1               	rrf	??_rand+1,f
  6023  0DE4  0CA0               	rrf	??_rand,f
  6024  0DE5  0BA4               	decfsz	??_rand+4,f
  6025  0DE6  2DE1               	goto	u2045
  6026  0DE7  30FF               	movlw	255
  6027  0DE8  0520               	andwf	??_rand,w
  6028  0DE9  00FC               	movwf	?_rand
  6029  0DEA  307F               	movlw	127
  6030  0DEB  0521               	andwf	??_rand+1,w
  6031  0DEC  00FD               	movwf	?_rand+1
  6032  0DED  0008               	return
  6033  0DEE                     __end_of_rand:	
  6034                           
  6035                           	psect	text28
  6036  0CCE                     __ptext28:	
  6037 ;; *************** function ___lmul *****************
  6038 ;; Defined at:
  6039 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul32.c"
  6040 ;; Parameters:    Size  Location     Type
  6041 ;;  multiplier      4    0[COMMON] unsigned long 
  6042 ;;  multiplicand    4    4[COMMON] unsigned long 
  6043 ;; Auto vars:     Size  Location     Type
  6044 ;;  product         4    8[COMMON] unsigned long 
  6045 ;; Return value:  Size  Location     Type
  6046 ;;                  4    0[COMMON] unsigned long 
  6047 ;; Registers used:
  6048 ;;		wreg, status,2, status,0
  6049 ;; Tracked objects:
  6050 ;;		On entry : 0/0
  6051 ;;		On exit  : 0/0
  6052 ;;		Unchanged: 0/0
  6053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6054 ;;      Params:         8       0       0       0       0       0       0       0
  6055 ;;      Locals:         4       0       0       0       0       0       0       0
  6056 ;;      Temps:          0       0       0       0       0       0       0       0
  6057 ;;      Totals:        12       0       0       0       0       0       0       0
  6058 ;;Total ram usage:       12 bytes
  6059 ;; Hardware stack levels used:    1
  6060 ;; This function calls:
  6061 ;;		Nothing
  6062 ;; This function is called by:
  6063 ;;		_rand
  6064 ;; This function uses a non-reentrant model
  6065 ;;
  6066                           
  6067                           
  6068                           ;psect for function ___lmul
  6069  0CCE                     ___lmul:	
  6070                           
  6071                           ;incstack = 0
  6072                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  6073  0CCE  3000               	movlw	0
  6074  0CCF  00FB               	movwf	___lmul@product+3
  6075  0CD0  3000               	movlw	0
  6076  0CD1  00FA               	movwf	___lmul@product+2
  6077  0CD2  3000               	movlw	0
  6078  0CD3  00F9               	movwf	___lmul@product+1
  6079  0CD4  3000               	movlw	0
  6080  0CD5  00F8               	movwf	___lmul@product
  6081  0CD6                     l1592:	
  6082  0CD6  1C70               	btfss	___lmul@multiplier,0
  6083  0CD7  2CE0               	goto	l1596
  6084  0CD8  0874               	movf	___lmul@multiplicand,w
  6085  0CD9  07F8               	addwf	___lmul@product,f
  6086  0CDA  0875               	movf	___lmul@multiplicand+1,w
  6087  0CDB  3DF9               	addwfc	___lmul@product+1,f
  6088  0CDC  0876               	movf	___lmul@multiplicand+2,w
  6089  0CDD  3DFA               	addwfc	___lmul@product+2,f
  6090  0CDE  0877               	movf	___lmul@multiplicand+3,w
  6091  0CDF  3DFB               	addwfc	___lmul@product+3,f
  6092  0CE0                     l1596:	
  6093  0CE0  3001               	movlw	1
  6094  0CE1                     u1805:	
  6095  0CE1  35F4               	lslf	___lmul@multiplicand,f
  6096  0CE2  0DF5               	rlf	___lmul@multiplicand+1,f
  6097  0CE3  0DF6               	rlf	___lmul@multiplicand+2,f
  6098  0CE4  0DF7               	rlf	___lmul@multiplicand+3,f
  6099  0CE5  0B89               	decfsz	9,f
  6100  0CE6  2CE1               	goto	u1805
  6101  0CE7  3001               	movlw	1
  6102  0CE8                     u1815:	
  6103  0CE8  36F3               	lsrf	___lmul@multiplier+3,f
  6104  0CE9  0CF2               	rrf	___lmul@multiplier+2,f
  6105  0CEA  0CF1               	rrf	___lmul@multiplier+1,f
  6106  0CEB  0CF0               	rrf	___lmul@multiplier,f
  6107  0CEC  0B89               	decfsz	9,f
  6108  0CED  2CE8               	goto	u1815
  6109  0CEE  0873               	movf	___lmul@multiplier+3,w
  6110  0CEF  0472               	iorwf	___lmul@multiplier+2,w
  6111  0CF0  0471               	iorwf	___lmul@multiplier+1,w
  6112  0CF1  0470               	iorwf	___lmul@multiplier,w
  6113  0CF2  1D03               	skipz
  6114  0CF3  2CD6               	goto	l1592
  6115  0CF4  087B               	movf	___lmul@product+3,w
  6116  0CF5  00F3               	movwf	?___lmul+3
  6117  0CF6  087A               	movf	___lmul@product+2,w
  6118  0CF7  00F2               	movwf	?___lmul+2
  6119  0CF8  0879               	movf	___lmul@product+1,w
  6120  0CF9  00F1               	movwf	?___lmul+1
  6121  0CFA  0878               	movf	___lmul@product,w
  6122  0CFB  00F0               	movwf	?___lmul
  6123  0CFC  0008               	return
  6124  0CFD                     __end_of___lmul:	
  6125                           
  6126                           	psect	text29
  6127  0BBC                     __ptext29:	
  6128 ;; *************** function ___ftneg *****************
  6129 ;; Defined at:
  6130 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftneg.c"
  6131 ;; Parameters:    Size  Location     Type
  6132 ;;  f1              3    0[COMMON] float 
  6133 ;; Auto vars:     Size  Location     Type
  6134 ;;		None
  6135 ;; Return value:  Size  Location     Type
  6136 ;;                  3    0[COMMON] float 
  6137 ;; Registers used:
  6138 ;;		wreg
  6139 ;; Tracked objects:
  6140 ;;		On entry : 0/0
  6141 ;;		On exit  : 0/0
  6142 ;;		Unchanged: 0/0
  6143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6144 ;;      Params:         3       0       0       0       0       0       0       0
  6145 ;;      Locals:         0       0       0       0       0       0       0       0
  6146 ;;      Temps:          0       0       0       0       0       0       0       0
  6147 ;;      Totals:         3       0       0       0       0       0       0       0
  6148 ;;Total ram usage:        3 bytes
  6149 ;; Hardware stack levels used:    1
  6150 ;; This function calls:
  6151 ;;		Nothing
  6152 ;; This function is called by:
  6153 ;;		_Generate_Desired
  6154 ;;		_sin
  6155 ;; This function uses a non-reentrant model
  6156 ;;
  6157                           
  6158                           
  6159                           ;psect for function ___ftneg
  6160  0BBC                     ___ftneg:	
  6161                           
  6162                           ;incstack = 0
  6163                           ; Regs used in ___ftneg: [wreg]
  6164  0BBC  0872               	movf	___ftneg@f1+2,w
  6165  0BBD  0471               	iorwf	___ftneg@f1+1,w
  6166  0BBE  0470               	iorwf	___ftneg@f1,w
  6167  0BBF  1903               	skipnz
  6168  0BC0  0008               	return
  6169  0BC1  3080               	movlw	128
  6170  0BC2  06F2               	xorwf	___ftneg@f1+2,f
  6171  0BC3  0008               	return
  6172  0BC4                     __end_of___ftneg:	
  6173                           
  6174                           	psect	text30
  6175  0130                     __ptext30:	
  6176 ;; *************** function ___ftmul *****************
  6177 ;; Defined at:
  6178 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftmul.c"
  6179 ;; Parameters:    Size  Location     Type
  6180 ;;  f1              3    0[BANK0 ] float 
  6181 ;;  f2              3    3[BANK0 ] float 
  6182 ;; Auto vars:     Size  Location     Type
  6183 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  6184 ;;  sign            1   15[BANK0 ] unsigned char 
  6185 ;;  cntr            1   14[BANK0 ] unsigned char 
  6186 ;;  exp             1   10[BANK0 ] unsigned char 
  6187 ;; Return value:  Size  Location     Type
  6188 ;;                  3    0[BANK0 ] float 
  6189 ;; Registers used:
  6190 ;;		wreg, status,2, status,0, pclath, cstack
  6191 ;; Tracked objects:
  6192 ;;		On entry : 0/0
  6193 ;;		On exit  : 0/0
  6194 ;;		Unchanged: 0/0
  6195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6196 ;;      Params:         0       6       0       0       0       0       0       0
  6197 ;;      Locals:         0       6       0       0       0       0       0       0
  6198 ;;      Temps:          0       4       0       0       0       0       0       0
  6199 ;;      Totals:         0      16       0       0       0       0       0       0
  6200 ;;Total ram usage:       16 bytes
  6201 ;; Hardware stack levels used:    1
  6202 ;; Hardware stack levels required when called:    1
  6203 ;; This function calls:
  6204 ;;		___ftpack
  6205 ;; This function is called by:
  6206 ;;		_Heartbeat
  6207 ;;		_Generate_Desired
  6208 ;;		_sin
  6209 ;;		_eval_poly
  6210 ;; This function uses a non-reentrant model
  6211 ;;
  6212                           
  6213                           
  6214                           ;psect for function ___ftmul
  6215  0130                     ___ftmul:	
  6216                           
  6217                           ;incstack = 0
  6218                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  6219  0130  0020               	movlb	0	; select bank0
  6220  0131  0820               	movf	___ftmul@f1,w
  6221  0132  00A6               	movwf	??___ftmul
  6222  0133  0821               	movf	___ftmul@f1+1,w
  6223  0134  00A7               	movwf	??___ftmul+1
  6224  0135  0822               	movf	___ftmul@f1+2,w
  6225  0136  00A8               	movwf	??___ftmul+2
  6226  0137  1003               	clrc
  6227  0138  0D27               	rlf	??___ftmul+1,w
  6228  0139  0D28               	rlf	??___ftmul+2,w
  6229  013A  00A9               	movwf	??___ftmul+3
  6230  013B  0829               	movf	??___ftmul+3,w
  6231  013C  00AA               	movwf	___ftmul@exp
  6232  013D  082A               	movf	___ftmul@exp,w
  6233  013E  1D03               	btfss	3,2
  6234  013F  2947               	goto	l1488
  6235  0140  3000               	movlw	0
  6236  0141  00A0               	movwf	?___ftmul
  6237  0142  3000               	movlw	0
  6238  0143  00A1               	movwf	?___ftmul+1
  6239  0144  3000               	movlw	0
  6240  0145  00A2               	movwf	?___ftmul+2
  6241  0146  0008               	return
  6242  0147                     l1488:	
  6243  0147  0823               	movf	___ftmul@f2,w
  6244  0148  00A6               	movwf	??___ftmul
  6245  0149  0824               	movf	___ftmul@f2+1,w
  6246  014A  00A7               	movwf	??___ftmul+1
  6247  014B  0825               	movf	___ftmul@f2+2,w
  6248  014C  00A8               	movwf	??___ftmul+2
  6249  014D  1003               	clrc
  6250  014E  0D27               	rlf	??___ftmul+1,w
  6251  014F  0D28               	rlf	??___ftmul+2,w
  6252  0150  00A9               	movwf	??___ftmul+3
  6253  0151  0829               	movf	??___ftmul+3,w
  6254  0152  00AF               	movwf	___ftmul@sign
  6255  0153  082F               	movf	___ftmul@sign,w
  6256  0154  1D03               	btfss	3,2
  6257  0155  295D               	goto	l1494
  6258  0156  3000               	movlw	0
  6259  0157  00A0               	movwf	?___ftmul
  6260  0158  3000               	movlw	0
  6261  0159  00A1               	movwf	?___ftmul+1
  6262  015A  3000               	movlw	0
  6263  015B  00A2               	movwf	?___ftmul+2
  6264  015C  0008               	return
  6265  015D                     l1494:	
  6266  015D  082F               	movf	___ftmul@sign,w
  6267  015E  3E7B               	addlw	123
  6268  015F  00A6               	movwf	??___ftmul
  6269  0160  0826               	movf	??___ftmul,w
  6270  0161  07AA               	addwf	___ftmul@exp,f
  6271  0162  0820               	movf	___ftmul@f1,w
  6272  0163  00A6               	movwf	??___ftmul
  6273  0164  0821               	movf	___ftmul@f1+1,w
  6274  0165  00A7               	movwf	??___ftmul+1
  6275  0166  0822               	movf	___ftmul@f1+2,w
  6276  0167  00A8               	movwf	??___ftmul+2
  6277  0168  3010               	movlw	16
  6278  0169                     u1585:	
  6279  0169  36A8               	lsrf	??___ftmul+2,f
  6280  016A  0CA7               	rrf	??___ftmul+1,f
  6281  016B  0CA6               	rrf	??___ftmul,f
  6282  016C  0B89               	decfsz	9,f
  6283  016D  2969               	goto	u1585
  6284  016E  0826               	movf	??___ftmul,w
  6285  016F  00A9               	movwf	??___ftmul+3
  6286  0170  0829               	movf	??___ftmul+3,w
  6287  0171  00AF               	movwf	___ftmul@sign
  6288  0172  0823               	movf	___ftmul@f2,w
  6289  0173  00A6               	movwf	??___ftmul
  6290  0174  0824               	movf	___ftmul@f2+1,w
  6291  0175  00A7               	movwf	??___ftmul+1
  6292  0176  0825               	movf	___ftmul@f2+2,w
  6293  0177  00A8               	movwf	??___ftmul+2
  6294  0178  3010               	movlw	16
  6295  0179                     u1595:	
  6296  0179  36A8               	lsrf	??___ftmul+2,f
  6297  017A  0CA7               	rrf	??___ftmul+1,f
  6298  017B  0CA6               	rrf	??___ftmul,f
  6299  017C  0B89               	decfsz	9,f
  6300  017D  2979               	goto	u1595
  6301  017E  0826               	movf	??___ftmul,w
  6302  017F  00A9               	movwf	??___ftmul+3
  6303  0180  0829               	movf	??___ftmul+3,w
  6304  0181  06AF               	xorwf	___ftmul@sign,f
  6305  0182  3080               	movlw	128
  6306  0183  00A6               	movwf	??___ftmul
  6307  0184  0826               	movf	??___ftmul,w
  6308  0185  05AF               	andwf	___ftmul@sign,f
  6309  0186  17A1               	bsf	___ftmul@f1+1,7
  6310  0187  17A4               	bsf	___ftmul@f2+1,7
  6311  0188  30FF               	movlw	255
  6312  0189  05A3               	andwf	___ftmul@f2,f
  6313  018A  30FF               	movlw	255
  6314  018B  05A4               	andwf	___ftmul@f2+1,f
  6315  018C  3000               	movlw	0
  6316  018D  05A5               	andwf	___ftmul@f2+2,f
  6317  018E  3000               	movlw	0
  6318  018F  00AB               	movwf	___ftmul@f3_as_product
  6319  0190  3000               	movlw	0
  6320  0191  00AC               	movwf	___ftmul@f3_as_product+1
  6321  0192  3000               	movlw	0
  6322  0193  00AD               	movwf	___ftmul@f3_as_product+2
  6323  0194  3007               	movlw	7
  6324  0195  00A6               	movwf	??___ftmul
  6325  0196  0826               	movf	??___ftmul,w
  6326  0197  00AE               	movwf	___ftmul@cntr
  6327  0198                     l1506:	
  6328  0198  1C20               	btfss	___ftmul@f1,0
  6329  0199  29A0               	goto	l1510
  6330  019A  0823               	movf	___ftmul@f2,w
  6331  019B  07AB               	addwf	___ftmul@f3_as_product,f
  6332  019C  0824               	movf	___ftmul@f2+1,w
  6333  019D  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  6334  019E  0825               	movf	___ftmul@f2+2,w
  6335  019F  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  6336  01A0                     l1510:	
  6337  01A0  3001               	movlw	1
  6338  01A1                     u1615:	
  6339  01A1  36A2               	lsrf	___ftmul@f1+2,f
  6340  01A2  0CA1               	rrf	___ftmul@f1+1,f
  6341  01A3  0CA0               	rrf	___ftmul@f1,f
  6342  01A4  0B89               	decfsz	9,f
  6343  01A5  29A1               	goto	u1615
  6344  01A6  3001               	movlw	1
  6345  01A7                     u1625:	
  6346  01A7  35A3               	lslf	___ftmul@f2,f
  6347  01A8  0DA4               	rlf	___ftmul@f2+1,f
  6348  01A9  0DA5               	rlf	___ftmul@f2+2,f
  6349  01AA  0B89               	decfsz	9,f
  6350  01AB  29A7               	goto	u1625
  6351  01AC  3001               	movlw	1
  6352  01AD  02AE               	subwf	___ftmul@cntr,f
  6353  01AE  1D03               	btfss	3,2
  6354  01AF  2998               	goto	l1506
  6355  01B0  3009               	movlw	9
  6356  01B1  00A6               	movwf	??___ftmul
  6357  01B2  0826               	movf	??___ftmul,w
  6358  01B3  00AE               	movwf	___ftmul@cntr
  6359  01B4                     l1518:	
  6360  01B4  1C20               	btfss	___ftmul@f1,0
  6361  01B5  29BC               	goto	l1522
  6362  01B6  0823               	movf	___ftmul@f2,w
  6363  01B7  07AB               	addwf	___ftmul@f3_as_product,f
  6364  01B8  0824               	movf	___ftmul@f2+1,w
  6365  01B9  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  6366  01BA  0825               	movf	___ftmul@f2+2,w
  6367  01BB  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  6368  01BC                     l1522:	
  6369  01BC  3001               	movlw	1
  6370  01BD                     u1655:	
  6371  01BD  36A2               	lsrf	___ftmul@f1+2,f
  6372  01BE  0CA1               	rrf	___ftmul@f1+1,f
  6373  01BF  0CA0               	rrf	___ftmul@f1,f
  6374  01C0  0B89               	decfsz	9,f
  6375  01C1  29BD               	goto	u1655
  6376  01C2  3001               	movlw	1
  6377  01C3                     u1665:	
  6378  01C3  36AD               	lsrf	___ftmul@f3_as_product+2,f
  6379  01C4  0CAC               	rrf	___ftmul@f3_as_product+1,f
  6380  01C5  0CAB               	rrf	___ftmul@f3_as_product,f
  6381  01C6  0B89               	decfsz	9,f
  6382  01C7  29C3               	goto	u1665
  6383  01C8  3001               	movlw	1
  6384  01C9  02AE               	subwf	___ftmul@cntr,f
  6385  01CA  1D03               	btfss	3,2
  6386  01CB  29B4               	goto	l1518
  6387  01CC  082B               	movf	___ftmul@f3_as_product,w
  6388  01CD  00F0               	movwf	___ftpack@arg
  6389  01CE  082C               	movf	___ftmul@f3_as_product+1,w
  6390  01CF  00F1               	movwf	___ftpack@arg+1
  6391  01D0  082D               	movf	___ftmul@f3_as_product+2,w
  6392  01D1  00F2               	movwf	___ftpack@arg+2
  6393  01D2  082A               	movf	___ftmul@exp,w
  6394  01D3  00A6               	movwf	??___ftmul
  6395  01D4  0826               	movf	??___ftmul,w
  6396  01D5  00F3               	movwf	___ftpack@exp
  6397  01D6  082F               	movf	___ftmul@sign,w
  6398  01D7  00A7               	movwf	??___ftmul+1
  6399  01D8  0827               	movf	??___ftmul+1,w
  6400  01D9  00F4               	movwf	___ftpack@sign
  6401  01DA  318E  2691         	fcall	___ftpack
  6402  01DC  0870               	movf	?___ftpack,w
  6403  01DD  0020               	movlb	0	; select bank0
  6404  01DE  00A0               	movwf	?___ftmul
  6405  01DF  0871               	movf	?___ftpack+1,w
  6406  01E0  00A1               	movwf	?___ftmul+1
  6407  01E1  0872               	movf	?___ftpack+2,w
  6408  01E2  00A2               	movwf	?___ftmul+2
  6409  01E3  0008               	return
  6410  01E4                     __end_of___ftmul:	
  6411                           
  6412                           	psect	text31
  6413  0D32                     __ptext31:	
  6414 ;; *************** function ___ftge *****************
  6415 ;; Defined at:
  6416 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftge.c"
  6417 ;; Parameters:    Size  Location     Type
  6418 ;;  ff1             3    0[BANK0 ] float 
  6419 ;;  ff2             3    3[BANK0 ] float 
  6420 ;; Auto vars:     Size  Location     Type
  6421 ;;		None
  6422 ;; Return value:  Size  Location     Type
  6423 ;;		None               void
  6424 ;; Registers used:
  6425 ;;		wreg, status,2, status,0
  6426 ;; Tracked objects:
  6427 ;;		On entry : 0/0
  6428 ;;		On exit  : 0/0
  6429 ;;		Unchanged: 0/0
  6430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6431 ;;      Params:         0       6       0       0       0       0       0       0
  6432 ;;      Locals:         0       0       0       0       0       0       0       0
  6433 ;;      Temps:          0       3       0       0       0       0       0       0
  6434 ;;      Totals:         0       9       0       0       0       0       0       0
  6435 ;;Total ram usage:        9 bytes
  6436 ;; Hardware stack levels used:    1
  6437 ;; This function calls:
  6438 ;;		Nothing
  6439 ;; This function is called by:
  6440 ;;		_Heartbeat
  6441 ;;		_Generate_Desired
  6442 ;;		_Step
  6443 ;;		_Go_To_Desired
  6444 ;;		_sin
  6445 ;;		_floor
  6446 ;; This function uses a non-reentrant model
  6447 ;;
  6448                           
  6449                           
  6450                           ;psect for function ___ftge
  6451  0D32                     ___ftge:	
  6452                           
  6453                           ;incstack = 0
  6454                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  6455  0D32  0020               	movlb	0	; select bank0
  6456  0D33  1FA2               	btfss	___ftge@ff1+2,7
  6457  0D34  2D49               	goto	l1466
  6458  0D35  0920               	comf	___ftge@ff1,w
  6459  0D36  00A6               	movwf	??___ftge
  6460  0D37  0921               	comf	___ftge@ff1+1,w
  6461  0D38  00A7               	movwf	??___ftge+1
  6462  0D39  0922               	comf	___ftge@ff1+2,w
  6463  0D3A  00A8               	movwf	??___ftge+2
  6464  0D3B  0AA6               	incf	??___ftge,f
  6465  0D3C  1903               	skipnz
  6466  0D3D  0AA7               	incf	??___ftge+1,f
  6467  0D3E  1903               	skipnz
  6468  0D3F  0AA8               	incf	??___ftge+2,f
  6469  0D40  3000               	movlw	0
  6470  0D41  0726               	addwf	??___ftge,w
  6471  0D42  00A0               	movwf	___ftge@ff1
  6472  0D43  3000               	movlw	0
  6473  0D44  3D27               	addwfc	??___ftge+1,w
  6474  0D45  00A1               	movwf	___ftge@ff1+1
  6475  0D46  3080               	movlw	128
  6476  0D47  3D28               	addwfc	??___ftge+2,w
  6477  0D48  00A2               	movwf	___ftge@ff1+2
  6478  0D49                     l1466:	
  6479  0D49  1FA5               	btfss	___ftge@ff2+2,7
  6480  0D4A  2D5F               	goto	l1470
  6481  0D4B  0923               	comf	___ftge@ff2,w
  6482  0D4C  00A6               	movwf	??___ftge
  6483  0D4D  0924               	comf	___ftge@ff2+1,w
  6484  0D4E  00A7               	movwf	??___ftge+1
  6485  0D4F  0925               	comf	___ftge@ff2+2,w
  6486  0D50  00A8               	movwf	??___ftge+2
  6487  0D51  0AA6               	incf	??___ftge,f
  6488  0D52  1903               	skipnz
  6489  0D53  0AA7               	incf	??___ftge+1,f
  6490  0D54  1903               	skipnz
  6491  0D55  0AA8               	incf	??___ftge+2,f
  6492  0D56  3000               	movlw	0
  6493  0D57  0726               	addwf	??___ftge,w
  6494  0D58  00A3               	movwf	___ftge@ff2
  6495  0D59  3000               	movlw	0
  6496  0D5A  3D27               	addwfc	??___ftge+1,w
  6497  0D5B  00A4               	movwf	___ftge@ff2+1
  6498  0D5C  3080               	movlw	128
  6499  0D5D  3D28               	addwfc	??___ftge+2,w
  6500  0D5E  00A5               	movwf	___ftge@ff2+2
  6501  0D5F                     l1470:	
  6502  0D5F  3080               	movlw	128
  6503  0D60  06A2               	xorwf	___ftge@ff1+2,f
  6504  0D61  3080               	movlw	128
  6505  0D62  06A5               	xorwf	___ftge@ff2+2,f
  6506  0D63  0825               	movf	___ftge@ff2+2,w
  6507  0D64  0222               	subwf	___ftge@ff1+2,w
  6508  0D65  1D03               	skipz
  6509  0D66  0008               	return
  6510  0D67  0824               	movf	___ftge@ff2+1,w
  6511  0D68  0221               	subwf	___ftge@ff1+1,w
  6512  0D69  1D03               	skipz
  6513  0D6A  0008               	return
  6514  0D6B  0823               	movf	___ftge@ff2,w
  6515  0D6C  0220               	subwf	___ftge@ff1,w
  6516  0D6D  0008               	return
  6517  0D6E                     __end_of___ftge:	
  6518                           
  6519                           	psect	text32
  6520  0087                     __ptext32:	
  6521 ;; *************** function ___ftdiv *****************
  6522 ;; Defined at:
  6523 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftdiv.c"
  6524 ;; Parameters:    Size  Location     Type
  6525 ;;  f2              3   39[BANK0 ] float 
  6526 ;;  f1              3   42[BANK0 ] float 
  6527 ;; Auto vars:     Size  Location     Type
  6528 ;;  f3              3   50[BANK0 ] float 
  6529 ;;  sign            1   54[BANK0 ] unsigned char 
  6530 ;;  exp             1   53[BANK0 ] unsigned char 
  6531 ;;  cntr            1   49[BANK0 ] unsigned char 
  6532 ;; Return value:  Size  Location     Type
  6533 ;;                  3   39[BANK0 ] float 
  6534 ;; Registers used:
  6535 ;;		wreg, status,2, status,0, pclath, cstack
  6536 ;; Tracked objects:
  6537 ;;		On entry : 0/0
  6538 ;;		On exit  : 0/0
  6539 ;;		Unchanged: 0/0
  6540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6541 ;;      Params:         0       6       0       0       0       0       0       0
  6542 ;;      Locals:         0       6       0       0       0       0       0       0
  6543 ;;      Temps:          0       4       0       0       0       0       0       0
  6544 ;;      Totals:         0      16       0       0       0       0       0       0
  6545 ;;Total ram usage:       16 bytes
  6546 ;; Hardware stack levels used:    1
  6547 ;; Hardware stack levels required when called:    1
  6548 ;; This function calls:
  6549 ;;		___ftpack
  6550 ;; This function is called by:
  6551 ;;		_Heartbeat
  6552 ;;		_Generate_Desired
  6553 ;;		_sin
  6554 ;; This function uses a non-reentrant model
  6555 ;;
  6556                           
  6557                           
  6558                           ;psect for function ___ftdiv
  6559  0087                     ___ftdiv:	
  6560                           
  6561                           ;incstack = 0
  6562                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  6563  0087  0020               	movlb	0	; select bank0
  6564  0088  084A               	movf	___ftdiv@f1,w
  6565  0089  00CD               	movwf	??___ftdiv
  6566  008A  084B               	movf	___ftdiv@f1+1,w
  6567  008B  00CE               	movwf	??___ftdiv+1
  6568  008C  084C               	movf	___ftdiv@f1+2,w
  6569  008D  00CF               	movwf	??___ftdiv+2
  6570  008E  1003               	clrc
  6571  008F  0D4E               	rlf	??___ftdiv+1,w
  6572  0090  0D4F               	rlf	??___ftdiv+2,w
  6573  0091  00D0               	movwf	??___ftdiv+3
  6574  0092  0850               	movf	??___ftdiv+3,w
  6575  0093  00D5               	movwf	___ftdiv@exp
  6576  0094  0855               	movf	___ftdiv@exp,w
  6577  0095  1D03               	btfss	3,2
  6578  0096  289E               	goto	l1610
  6579  0097  3000               	movlw	0
  6580  0098  00C7               	movwf	?___ftdiv
  6581  0099  3000               	movlw	0
  6582  009A  00C8               	movwf	?___ftdiv+1
  6583  009B  3000               	movlw	0
  6584  009C  00C9               	movwf	?___ftdiv+2
  6585  009D  0008               	return
  6586  009E                     l1610:	
  6587  009E  0847               	movf	___ftdiv@f2,w
  6588  009F  00CD               	movwf	??___ftdiv
  6589  00A0  0848               	movf	___ftdiv@f2+1,w
  6590  00A1  00CE               	movwf	??___ftdiv+1
  6591  00A2  0849               	movf	___ftdiv@f2+2,w
  6592  00A3  00CF               	movwf	??___ftdiv+2
  6593  00A4  1003               	clrc
  6594  00A5  0D4E               	rlf	??___ftdiv+1,w
  6595  00A6  0D4F               	rlf	??___ftdiv+2,w
  6596  00A7  00D0               	movwf	??___ftdiv+3
  6597  00A8  0850               	movf	??___ftdiv+3,w
  6598  00A9  00D6               	movwf	___ftdiv@sign
  6599  00AA  0856               	movf	___ftdiv@sign,w
  6600  00AB  1D03               	btfss	3,2
  6601  00AC  28B4               	goto	l1616
  6602  00AD  3000               	movlw	0
  6603  00AE  00C7               	movwf	?___ftdiv
  6604  00AF  3000               	movlw	0
  6605  00B0  00C8               	movwf	?___ftdiv+1
  6606  00B1  3000               	movlw	0
  6607  00B2  00C9               	movwf	?___ftdiv+2
  6608  00B3  0008               	return
  6609  00B4                     l1616:	
  6610  00B4  3000               	movlw	0
  6611  00B5  00D2               	movwf	___ftdiv@f3
  6612  00B6  3000               	movlw	0
  6613  00B7  00D3               	movwf	___ftdiv@f3+1
  6614  00B8  3000               	movlw	0
  6615  00B9  00D4               	movwf	___ftdiv@f3+2
  6616  00BA  3089               	movlw	137
  6617  00BB  0756               	addwf	___ftdiv@sign,w
  6618  00BC  00CD               	movwf	??___ftdiv
  6619  00BD  084D               	movf	??___ftdiv,w
  6620  00BE  02D5               	subwf	___ftdiv@exp,f
  6621  00BF  084A               	movf	___ftdiv@f1,w
  6622  00C0  00CD               	movwf	??___ftdiv
  6623  00C1  084B               	movf	___ftdiv@f1+1,w
  6624  00C2  00CE               	movwf	??___ftdiv+1
  6625  00C3  084C               	movf	___ftdiv@f1+2,w
  6626  00C4  00CF               	movwf	??___ftdiv+2
  6627  00C5  3010               	movlw	16
  6628  00C6                     u1855:	
  6629  00C6  36CF               	lsrf	??___ftdiv+2,f
  6630  00C7  0CCE               	rrf	??___ftdiv+1,f
  6631  00C8  0CCD               	rrf	??___ftdiv,f
  6632  00C9  0B89               	decfsz	9,f
  6633  00CA  28C6               	goto	u1855
  6634  00CB  084D               	movf	??___ftdiv,w
  6635  00CC  00D0               	movwf	??___ftdiv+3
  6636  00CD  0850               	movf	??___ftdiv+3,w
  6637  00CE  00D6               	movwf	___ftdiv@sign
  6638  00CF  0847               	movf	___ftdiv@f2,w
  6639  00D0  00CD               	movwf	??___ftdiv
  6640  00D1  0848               	movf	___ftdiv@f2+1,w
  6641  00D2  00CE               	movwf	??___ftdiv+1
  6642  00D3  0849               	movf	___ftdiv@f2+2,w
  6643  00D4  00CF               	movwf	??___ftdiv+2
  6644  00D5  3010               	movlw	16
  6645  00D6                     u1865:	
  6646  00D6  36CF               	lsrf	??___ftdiv+2,f
  6647  00D7  0CCE               	rrf	??___ftdiv+1,f
  6648  00D8  0CCD               	rrf	??___ftdiv,f
  6649  00D9  0B89               	decfsz	9,f
  6650  00DA  28D6               	goto	u1865
  6651  00DB  084D               	movf	??___ftdiv,w
  6652  00DC  00D0               	movwf	??___ftdiv+3
  6653  00DD  0850               	movf	??___ftdiv+3,w
  6654  00DE  06D6               	xorwf	___ftdiv@sign,f
  6655  00DF  3080               	movlw	128
  6656  00E0  00CD               	movwf	??___ftdiv
  6657  00E1  084D               	movf	??___ftdiv,w
  6658  00E2  05D6               	andwf	___ftdiv@sign,f
  6659  00E3  17CB               	bsf	___ftdiv@f1+1,7
  6660  00E4  30FF               	movlw	255
  6661  00E5  05CA               	andwf	___ftdiv@f1,f
  6662  00E6  30FF               	movlw	255
  6663  00E7  05CB               	andwf	___ftdiv@f1+1,f
  6664  00E8  3000               	movlw	0
  6665  00E9  05CC               	andwf	___ftdiv@f1+2,f
  6666  00EA  17C8               	bsf	___ftdiv@f2+1,7
  6667  00EB  30FF               	movlw	255
  6668  00EC  05C7               	andwf	___ftdiv@f2,f
  6669  00ED  30FF               	movlw	255
  6670  00EE  05C8               	andwf	___ftdiv@f2+1,f
  6671  00EF  3000               	movlw	0
  6672  00F0  05C9               	andwf	___ftdiv@f2+2,f
  6673  00F1  3018               	movlw	24
  6674  00F2  00CD               	movwf	??___ftdiv
  6675  00F3  084D               	movf	??___ftdiv,w
  6676  00F4  00D1               	movwf	___ftdiv@cntr
  6677  00F5                     l1630:	
  6678  00F5  3001               	movlw	1
  6679  00F6                     u1875:	
  6680  00F6  35D2               	lslf	___ftdiv@f3,f
  6681  00F7  0DD3               	rlf	___ftdiv@f3+1,f
  6682  00F8  0DD4               	rlf	___ftdiv@f3+2,f
  6683  00F9  0B89               	decfsz	9,f
  6684  00FA  28F6               	goto	u1875
  6685  00FB  0849               	movf	___ftdiv@f2+2,w
  6686  00FC  024C               	subwf	___ftdiv@f1+2,w
  6687  00FD  1D03               	skipz
  6688  00FE  2905               	goto	u1885
  6689  00FF  0848               	movf	___ftdiv@f2+1,w
  6690  0100  024B               	subwf	___ftdiv@f1+1,w
  6691  0101  1D03               	skipz
  6692  0102  2905               	goto	u1885
  6693  0103  0847               	movf	___ftdiv@f2,w
  6694  0104  024A               	subwf	___ftdiv@f1,w
  6695  0105                     u1885:	
  6696  0105  1C03               	skipc
  6697  0106  290E               	goto	l1638
  6698  0107  0847               	movf	___ftdiv@f2,w
  6699  0108  02CA               	subwf	___ftdiv@f1,f
  6700  0109  0848               	movf	___ftdiv@f2+1,w
  6701  010A  3BCB               	subwfb	___ftdiv@f1+1,f
  6702  010B  0849               	movf	___ftdiv@f2+2,w
  6703  010C  3BCC               	subwfb	___ftdiv@f1+2,f
  6704  010D  1452               	bsf	___ftdiv@f3,0
  6705  010E                     l1638:	
  6706  010E  3001               	movlw	1
  6707  010F                     u1895:	
  6708  010F  35CA               	lslf	___ftdiv@f1,f
  6709  0110  0DCB               	rlf	___ftdiv@f1+1,f
  6710  0111  0DCC               	rlf	___ftdiv@f1+2,f
  6711  0112  0B89               	decfsz	9,f
  6712  0113  290F               	goto	u1895
  6713  0114  3001               	movlw	1
  6714  0115  02D1               	subwf	___ftdiv@cntr,f
  6715  0116  1D03               	btfss	3,2
  6716  0117  28F5               	goto	l1630
  6717  0118  0852               	movf	___ftdiv@f3,w
  6718  0119  00F0               	movwf	___ftpack@arg
  6719  011A  0853               	movf	___ftdiv@f3+1,w
  6720  011B  00F1               	movwf	___ftpack@arg+1
  6721  011C  0854               	movf	___ftdiv@f3+2,w
  6722  011D  00F2               	movwf	___ftpack@arg+2
  6723  011E  0855               	movf	___ftdiv@exp,w
  6724  011F  00CD               	movwf	??___ftdiv
  6725  0120  084D               	movf	??___ftdiv,w
  6726  0121  00F3               	movwf	___ftpack@exp
  6727  0122  0856               	movf	___ftdiv@sign,w
  6728  0123  00CE               	movwf	??___ftdiv+1
  6729  0124  084E               	movf	??___ftdiv+1,w
  6730  0125  00F4               	movwf	___ftpack@sign
  6731  0126  318E  2691         	fcall	___ftpack
  6732  0128  0870               	movf	?___ftpack,w
  6733  0129  0020               	movlb	0	; select bank0
  6734  012A  00C7               	movwf	?___ftdiv
  6735  012B  0871               	movf	?___ftpack+1,w
  6736  012C  00C8               	movwf	?___ftdiv+1
  6737  012D  0872               	movf	?___ftpack+2,w
  6738  012E  00C9               	movwf	?___ftdiv+2
  6739  012F  0008               	return
  6740  0130                     __end_of___ftdiv:	
  6741                           
  6742                           	psect	text33
  6743  02AF                     __ptext33:	
  6744 ;; *************** function ___ftadd *****************
  6745 ;; Defined at:
  6746 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftadd.c"
  6747 ;; Parameters:    Size  Location     Type
  6748 ;;  f1              3   16[BANK0 ] float 
  6749 ;;  f2              3   19[BANK0 ] float 
  6750 ;; Auto vars:     Size  Location     Type
  6751 ;;  exp1            1   28[BANK0 ] unsigned char 
  6752 ;;  exp2            1   27[BANK0 ] unsigned char 
  6753 ;;  sign            1   26[BANK0 ] unsigned char 
  6754 ;; Return value:  Size  Location     Type
  6755 ;;                  3   16[BANK0 ] float 
  6756 ;; Registers used:
  6757 ;;		wreg, status,2, status,0, pclath, cstack
  6758 ;; Tracked objects:
  6759 ;;		On entry : 0/0
  6760 ;;		On exit  : 0/0
  6761 ;;		Unchanged: 0/0
  6762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6763 ;;      Params:         0       6       0       0       0       0       0       0
  6764 ;;      Locals:         0       3       0       0       0       0       0       0
  6765 ;;      Temps:          0       4       0       0       0       0       0       0
  6766 ;;      Totals:         0      13       0       0       0       0       0       0
  6767 ;;Total ram usage:       13 bytes
  6768 ;; Hardware stack levels used:    1
  6769 ;; Hardware stack levels required when called:    1
  6770 ;; This function calls:
  6771 ;;		___ftpack
  6772 ;; This function is called by:
  6773 ;;		_Generate_Desired
  6774 ;;		_Step
  6775 ;;		___ftsub
  6776 ;;		_sin
  6777 ;;		_eval_poly
  6778 ;;		_floor
  6779 ;; This function uses a non-reentrant model
  6780 ;;
  6781                           
  6782                           
  6783                           ;psect for function ___ftadd
  6784  02AF                     ___ftadd:	
  6785                           
  6786                           ;incstack = 0
  6787                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  6788  02AF  0020               	movlb	0	; select bank0
  6789  02B0  0830               	movf	___ftadd@f1,w
  6790  02B1  00B6               	movwf	??___ftadd
  6791  02B2  0831               	movf	___ftadd@f1+1,w
  6792  02B3  00B7               	movwf	??___ftadd+1
  6793  02B4  0832               	movf	___ftadd@f1+2,w
  6794  02B5  00B8               	movwf	??___ftadd+2
  6795  02B6  1003               	clrc
  6796  02B7  0D37               	rlf	??___ftadd+1,w
  6797  02B8  0D38               	rlf	??___ftadd+2,w
  6798  02B9  00B9               	movwf	??___ftadd+3
  6799  02BA  0839               	movf	??___ftadd+3,w
  6800  02BB  00BC               	movwf	___ftadd@exp1
  6801  02BC  0833               	movf	___ftadd@f2,w
  6802  02BD  00B6               	movwf	??___ftadd
  6803  02BE  0834               	movf	___ftadd@f2+1,w
  6804  02BF  00B7               	movwf	??___ftadd+1
  6805  02C0  0835               	movf	___ftadd@f2+2,w
  6806  02C1  00B8               	movwf	??___ftadd+2
  6807  02C2  1003               	clrc
  6808  02C3  0D37               	rlf	??___ftadd+1,w
  6809  02C4  0D38               	rlf	??___ftadd+2,w
  6810  02C5  00B9               	movwf	??___ftadd+3
  6811  02C6  0839               	movf	??___ftadd+3,w
  6812  02C7  00BB               	movwf	___ftadd@exp2
  6813  02C8  083C               	movf	___ftadd@exp1,w
  6814  02C9  1903               	btfsc	3,2
  6815  02CA  2AD7               	goto	l1398
  6816  02CB  083B               	movf	___ftadd@exp2,w
  6817  02CC  023C               	subwf	___ftadd@exp1,w
  6818  02CD  1803               	skipnc
  6819  02CE  2ADE               	goto	l1402
  6820  02CF  033C               	decf	___ftadd@exp1,w
  6821  02D0  3AFF               	xorlw	255
  6822  02D1  073B               	addwf	___ftadd@exp2,w
  6823  02D2  00B6               	movwf	??___ftadd
  6824  02D3  3019               	movlw	25
  6825  02D4  0236               	subwf	??___ftadd,w
  6826  02D5  1C03               	skipc
  6827  02D6  2ADE               	goto	l1402
  6828  02D7                     l1398:	
  6829  02D7  0833               	movf	___ftadd@f2,w
  6830  02D8  00B0               	movwf	?___ftadd
  6831  02D9  0834               	movf	___ftadd@f2+1,w
  6832  02DA  00B1               	movwf	?___ftadd+1
  6833  02DB  0835               	movf	___ftadd@f2+2,w
  6834  02DC  00B2               	movwf	?___ftadd+2
  6835  02DD  0008               	return
  6836  02DE                     l1402:	
  6837  02DE  083B               	movf	___ftadd@exp2,w
  6838  02DF  1903               	btfsc	3,2
  6839  02E0  0008               	return
  6840  02E1  083C               	movf	___ftadd@exp1,w
  6841  02E2  023B               	subwf	___ftadd@exp2,w
  6842  02E3  1803               	skipnc
  6843  02E4  2AED               	goto	l1408
  6844  02E5  033B               	decf	___ftadd@exp2,w
  6845  02E6  3AFF               	xorlw	255
  6846  02E7  073C               	addwf	___ftadd@exp1,w
  6847  02E8  00B6               	movwf	??___ftadd
  6848  02E9  3019               	movlw	25
  6849  02EA  0236               	subwf	??___ftadd,w
  6850  02EB  1803               	btfsc	3,0
  6851  02EC  0008               	return
  6852  02ED                     l1408:	
  6853  02ED  3006               	movlw	6
  6854  02EE  00B6               	movwf	??___ftadd
  6855  02EF  0836               	movf	??___ftadd,w
  6856  02F0  00BA               	movwf	___ftadd@sign
  6857  02F1  1BB2               	btfsc	___ftadd@f1+2,7
  6858  02F2  17BA               	bsf	___ftadd@sign,7
  6859  02F3  1BB5               	btfsc	___ftadd@f2+2,7
  6860  02F4  173A               	bsf	___ftadd@sign,6
  6861  02F5  17B1               	bsf	___ftadd@f1+1,7
  6862  02F6  30FF               	movlw	255
  6863  02F7  05B0               	andwf	___ftadd@f1,f
  6864  02F8  30FF               	movlw	255
  6865  02F9  05B1               	andwf	___ftadd@f1+1,f
  6866  02FA  3000               	movlw	0
  6867  02FB  05B2               	andwf	___ftadd@f1+2,f
  6868  02FC  17B4               	bsf	___ftadd@f2+1,7
  6869  02FD  30FF               	movlw	255
  6870  02FE  05B3               	andwf	___ftadd@f2,f
  6871  02FF  30FF               	movlw	255
  6872  0300  05B4               	andwf	___ftadd@f2+1,f
  6873  0301  3000               	movlw	0
  6874  0302  05B5               	andwf	___ftadd@f2+2,f
  6875  0303  083B               	movf	___ftadd@exp2,w
  6876  0304  023C               	subwf	___ftadd@exp1,w
  6877  0305  1803               	skipnc
  6878  0306  2B29               	goto	l1430
  6879  0307                     l1420:	
  6880  0307  3001               	movlw	1
  6881  0308                     u1395:	
  6882  0308  35B3               	lslf	___ftadd@f2,f
  6883  0309  0DB4               	rlf	___ftadd@f2+1,f
  6884  030A  0DB5               	rlf	___ftadd@f2+2,f
  6885  030B  0B89               	decfsz	9,f
  6886  030C  2B08               	goto	u1395
  6887  030D  3001               	movlw	1
  6888  030E  02BB               	subwf	___ftadd@exp2,f
  6889  030F  083B               	movf	___ftadd@exp2,w
  6890  0310  063C               	xorwf	___ftadd@exp1,w
  6891  0311  1903               	skipnz
  6892  0312  2B24               	goto	l1428
  6893  0313  3001               	movlw	1
  6894  0314  02BA               	subwf	___ftadd@sign,f
  6895  0315  083A               	movf	___ftadd@sign,w
  6896  0316  3907               	andlw	7
  6897  0317  1903               	btfsc	3,2
  6898  0318  2B24               	goto	l1428
  6899  0319  2B07               	goto	l1420
  6900  031A                     l1426:	
  6901  031A  3001               	movlw	1
  6902  031B                     u1425:	
  6903  031B  36B2               	lsrf	___ftadd@f1+2,f
  6904  031C  0CB1               	rrf	___ftadd@f1+1,f
  6905  031D  0CB0               	rrf	___ftadd@f1,f
  6906  031E  0B89               	decfsz	9,f
  6907  031F  2B1B               	goto	u1425
  6908  0320  3001               	movlw	1
  6909  0321  00B6               	movwf	??___ftadd
  6910  0322  0836               	movf	??___ftadd,w
  6911  0323  07BC               	addwf	___ftadd@exp1,f
  6912  0324                     l1428:	
  6913  0324  083C               	movf	___ftadd@exp1,w
  6914  0325  063B               	xorwf	___ftadd@exp2,w
  6915  0326  1903               	btfsc	3,2
  6916  0327  2B4E               	goto	l426
  6917  0328  2B1A               	goto	l1426
  6918  0329                     l1430:	
  6919  0329  083C               	movf	___ftadd@exp1,w
  6920  032A  023B               	subwf	___ftadd@exp2,w
  6921  032B  1803               	skipnc
  6922  032C  2B4E               	goto	l426
  6923  032D                     l1432:	
  6924  032D  3001               	movlw	1
  6925  032E                     u1455:	
  6926  032E  35B0               	lslf	___ftadd@f1,f
  6927  032F  0DB1               	rlf	___ftadd@f1+1,f
  6928  0330  0DB2               	rlf	___ftadd@f1+2,f
  6929  0331  0B89               	decfsz	9,f
  6930  0332  2B2E               	goto	u1455
  6931  0333  3001               	movlw	1
  6932  0334  02BC               	subwf	___ftadd@exp1,f
  6933  0335  083B               	movf	___ftadd@exp2,w
  6934  0336  063C               	xorwf	___ftadd@exp1,w
  6935  0337  1903               	skipnz
  6936  0338  2B4A               	goto	l1440
  6937  0339  3001               	movlw	1
  6938  033A  02BA               	subwf	___ftadd@sign,f
  6939  033B  083A               	movf	___ftadd@sign,w
  6940  033C  3907               	andlw	7
  6941  033D  1903               	btfsc	3,2
  6942  033E  2B4A               	goto	l1440
  6943  033F  2B2D               	goto	l1432
  6944  0340                     l1438:	
  6945  0340  3001               	movlw	1
  6946  0341                     u1485:	
  6947  0341  36B5               	lsrf	___ftadd@f2+2,f
  6948  0342  0CB4               	rrf	___ftadd@f2+1,f
  6949  0343  0CB3               	rrf	___ftadd@f2,f
  6950  0344  0B89               	decfsz	9,f
  6951  0345  2B41               	goto	u1485
  6952  0346  3001               	movlw	1
  6953  0347  00B6               	movwf	??___ftadd
  6954  0348  0836               	movf	??___ftadd,w
  6955  0349  07BB               	addwf	___ftadd@exp2,f
  6956  034A                     l1440:	
  6957  034A  083C               	movf	___ftadd@exp1,w
  6958  034B  063B               	xorwf	___ftadd@exp2,w
  6959  034C  1D03               	skipz
  6960  034D  2B40               	goto	l1438
  6961  034E                     l426:	
  6962  034E  1FBA               	btfss	___ftadd@sign,7
  6963  034F  2B60               	goto	l1444
  6964  0350  30FF               	movlw	255
  6965  0351  06B0               	xorwf	___ftadd@f1,f
  6966  0352  30FF               	movlw	255
  6967  0353  06B1               	xorwf	___ftadd@f1+1,f
  6968  0354  30FF               	movlw	255
  6969  0355  06B2               	xorwf	___ftadd@f1+2,f
  6970  0356  3001               	movlw	1
  6971  0357  07B0               	addwf	___ftadd@f1,f
  6972  0358  3000               	movlw	0
  6973  0359  1803               	skipnc
  6974  035A  3001               	movlw	1
  6975  035B  07B1               	addwf	___ftadd@f1+1,f
  6976  035C  3000               	movlw	0
  6977  035D  1803               	skipnc
  6978  035E  3001               	movlw	1
  6979  035F  07B2               	addwf	___ftadd@f1+2,f
  6980  0360                     l1444:	
  6981  0360  1F3A               	btfss	___ftadd@sign,6
  6982  0361  2B72               	goto	l1448
  6983  0362  30FF               	movlw	255
  6984  0363  06B3               	xorwf	___ftadd@f2,f
  6985  0364  30FF               	movlw	255
  6986  0365  06B4               	xorwf	___ftadd@f2+1,f
  6987  0366  30FF               	movlw	255
  6988  0367  06B5               	xorwf	___ftadd@f2+2,f
  6989  0368  3001               	movlw	1
  6990  0369  07B3               	addwf	___ftadd@f2,f
  6991  036A  3000               	movlw	0
  6992  036B  1803               	skipnc
  6993  036C  3001               	movlw	1
  6994  036D  07B4               	addwf	___ftadd@f2+1,f
  6995  036E  3000               	movlw	0
  6996  036F  1803               	skipnc
  6997  0370  3001               	movlw	1
  6998  0371  07B5               	addwf	___ftadd@f2+2,f
  6999  0372                     l1448:	
  7000  0372  01BA               	clrf	___ftadd@sign
  7001  0373  0830               	movf	___ftadd@f1,w
  7002  0374  07B3               	addwf	___ftadd@f2,f
  7003  0375  0831               	movf	___ftadd@f1+1,w
  7004  0376  3DB4               	addwfc	___ftadd@f2+1,f
  7005  0377  0832               	movf	___ftadd@f1+2,w
  7006  0378  3DB5               	addwfc	___ftadd@f2+2,f
  7007  0379  1FB5               	btfss	___ftadd@f2+2,7
  7008  037A  2B8D               	goto	l1458
  7009  037B  30FF               	movlw	255
  7010  037C  06B3               	xorwf	___ftadd@f2,f
  7011  037D  30FF               	movlw	255
  7012  037E  06B4               	xorwf	___ftadd@f2+1,f
  7013  037F  30FF               	movlw	255
  7014  0380  06B5               	xorwf	___ftadd@f2+2,f
  7015  0381  3001               	movlw	1
  7016  0382  07B3               	addwf	___ftadd@f2,f
  7017  0383  3000               	movlw	0
  7018  0384  1803               	skipnc
  7019  0385  3001               	movlw	1
  7020  0386  07B4               	addwf	___ftadd@f2+1,f
  7021  0387  3000               	movlw	0
  7022  0388  1803               	skipnc
  7023  0389  3001               	movlw	1
  7024  038A  07B5               	addwf	___ftadd@f2+2,f
  7025  038B  01BA               	clrf	___ftadd@sign
  7026  038C  0ABA               	incf	___ftadd@sign,f
  7027  038D                     l1458:	
  7028  038D  0833               	movf	___ftadd@f2,w
  7029  038E  00F0               	movwf	___ftpack@arg
  7030  038F  0834               	movf	___ftadd@f2+1,w
  7031  0390  00F1               	movwf	___ftpack@arg+1
  7032  0391  0835               	movf	___ftadd@f2+2,w
  7033  0392  00F2               	movwf	___ftpack@arg+2
  7034  0393  083C               	movf	___ftadd@exp1,w
  7035  0394  00B6               	movwf	??___ftadd
  7036  0395  0836               	movf	??___ftadd,w
  7037  0396  00F3               	movwf	___ftpack@exp
  7038  0397  083A               	movf	___ftadd@sign,w
  7039  0398  00B7               	movwf	??___ftadd+1
  7040  0399  0837               	movf	??___ftadd+1,w
  7041  039A  00F4               	movwf	___ftpack@sign
  7042  039B  318E  2691         	fcall	___ftpack
  7043  039D  0870               	movf	?___ftpack,w
  7044  039E  0020               	movlb	0	; select bank0
  7045  039F  00B0               	movwf	?___ftadd
  7046  03A0  0871               	movf	?___ftpack+1,w
  7047  03A1  00B1               	movwf	?___ftadd+1
  7048  03A2  0872               	movf	?___ftpack+2,w
  7049  03A3  00B2               	movwf	?___ftadd+2
  7050  03A4  0008               	return
  7051  03A5                     __end_of___ftadd:	
  7052                           
  7053                           	psect	text34
  7054  0CAC                     __ptext34:	
  7055 ;; *************** function ___awtoft *****************
  7056 ;; Defined at:
  7057 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awtoft.c"
  7058 ;; Parameters:    Size  Location     Type
  7059 ;;  c               2    5[BANK0 ] int 
  7060 ;; Auto vars:     Size  Location     Type
  7061 ;;  sign            1   10[BANK0 ] unsigned char 
  7062 ;; Return value:  Size  Location     Type
  7063 ;;                  3    5[BANK0 ] float 
  7064 ;; Registers used:
  7065 ;;		wreg, status,2, status,0, pclath, cstack
  7066 ;; Tracked objects:
  7067 ;;		On entry : 0/0
  7068 ;;		On exit  : 0/0
  7069 ;;		Unchanged: 0/0
  7070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7071 ;;      Params:         0       3       0       0       0       0       0       0
  7072 ;;      Locals:         0       1       0       0       0       0       0       0
  7073 ;;      Temps:          0       2       0       0       0       0       0       0
  7074 ;;      Totals:         0       6       0       0       0       0       0       0
  7075 ;;Total ram usage:        6 bytes
  7076 ;; Hardware stack levels used:    1
  7077 ;; Hardware stack levels required when called:    1
  7078 ;; This function calls:
  7079 ;;		___ftpack
  7080 ;; This function is called by:
  7081 ;;		_Generate_Desired
  7082 ;; This function uses a non-reentrant model
  7083 ;;
  7084                           
  7085                           
  7086                           ;psect for function ___awtoft
  7087  0CAC                     ___awtoft:	
  7088                           
  7089                           ;incstack = 0
  7090                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  7091  0CAC  0020               	movlb	0	; select bank0
  7092  0CAD  01AA               	clrf	___awtoft@sign
  7093  0CAE  1FA6               	btfss	___awtoft@c+1,7
  7094  0CAF  2CB7               	goto	l1750
  7095  0CB0  09A5               	comf	___awtoft@c,f
  7096  0CB1  09A6               	comf	___awtoft@c+1,f
  7097  0CB2  0AA5               	incf	___awtoft@c,f
  7098  0CB3  1903               	skipnz
  7099  0CB4  0AA6               	incf	___awtoft@c+1,f
  7100  0CB5  01AA               	clrf	___awtoft@sign
  7101  0CB6  0AAA               	incf	___awtoft@sign,f
  7102  0CB7                     l1750:	
  7103  0CB7  0825               	movf	___awtoft@c,w
  7104  0CB8  00F0               	movwf	___ftpack@arg
  7105  0CB9  0826               	movf	___awtoft@c+1,w
  7106  0CBA  00F1               	movwf	___ftpack@arg+1
  7107  0CBB  01F2               	clrf	___ftpack@arg+2
  7108  0CBC  308E               	movlw	142
  7109  0CBD  00A8               	movwf	??___awtoft
  7110  0CBE  0828               	movf	??___awtoft,w
  7111  0CBF  00F3               	movwf	___ftpack@exp
  7112  0CC0  082A               	movf	___awtoft@sign,w
  7113  0CC1  00A9               	movwf	??___awtoft+1
  7114  0CC2  0829               	movf	??___awtoft+1,w
  7115  0CC3  00F4               	movwf	___ftpack@sign
  7116  0CC4  318E  2691         	fcall	___ftpack
  7117  0CC6  0870               	movf	?___ftpack,w
  7118  0CC7  0020               	movlb	0	; select bank0
  7119  0CC8  00A5               	movwf	?___awtoft
  7120  0CC9  0871               	movf	?___ftpack+1,w
  7121  0CCA  00A6               	movwf	?___awtoft+1
  7122  0CCB  0872               	movf	?___ftpack+2,w
  7123  0CCC  00A7               	movwf	?___awtoft+2
  7124  0CCD  0008               	return
  7125  0CCE                     __end_of___awtoft:	
  7126                           
  7127                           	psect	text35
  7128  0E91                     __ptext35:	
  7129 ;; *************** function ___ftpack *****************
  7130 ;; Defined at:
  7131 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\float.c"
  7132 ;; Parameters:    Size  Location     Type
  7133 ;;  arg             3    0[COMMON] unsigned um
  7134 ;;  exp             1    3[COMMON] unsigned char 
  7135 ;;  sign            1    4[COMMON] unsigned char 
  7136 ;; Auto vars:     Size  Location     Type
  7137 ;;		None
  7138 ;; Return value:  Size  Location     Type
  7139 ;;                  3    0[COMMON] float 
  7140 ;; Registers used:
  7141 ;;		wreg, status,2, status,0
  7142 ;; Tracked objects:
  7143 ;;		On entry : 0/0
  7144 ;;		On exit  : 0/0
  7145 ;;		Unchanged: 0/0
  7146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7147 ;;      Params:         5       0       0       0       0       0       0       0
  7148 ;;      Locals:         0       0       0       0       0       0       0       0
  7149 ;;      Temps:          3       0       0       0       0       0       0       0
  7150 ;;      Totals:         8       0       0       0       0       0       0       0
  7151 ;;Total ram usage:        8 bytes
  7152 ;; Hardware stack levels used:    1
  7153 ;; This function calls:
  7154 ;;		Nothing
  7155 ;; This function is called by:
  7156 ;;		___altoft
  7157 ;;		___awtoft
  7158 ;;		___ftadd
  7159 ;;		___ftdiv
  7160 ;;		___ftmul
  7161 ;;		___lwtoft
  7162 ;; This function uses a non-reentrant model
  7163 ;;
  7164                           
  7165                           
  7166                           ;psect for function ___ftpack
  7167  0E91                     ___ftpack:	
  7168                           
  7169                           ;incstack = 0
  7170                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  7171  0E91  0873               	movf	___ftpack@exp,w
  7172  0E92  1903               	btfsc	3,2
  7173  0E93  2E99               	goto	l1334
  7174  0E94  0872               	movf	___ftpack@arg+2,w
  7175  0E95  0471               	iorwf	___ftpack@arg+1,w
  7176  0E96  0470               	iorwf	___ftpack@arg,w
  7177  0E97  1D03               	skipz
  7178  0E98  2EAA               	goto	l1340
  7179  0E99                     l1334:	
  7180  0E99  3000               	movlw	0
  7181  0E9A  00F0               	movwf	?___ftpack
  7182  0E9B  3000               	movlw	0
  7183  0E9C  00F1               	movwf	?___ftpack+1
  7184  0E9D  3000               	movlw	0
  7185  0E9E  00F2               	movwf	?___ftpack+2
  7186  0E9F  0008               	return
  7187  0EA0                     l1338:	
  7188  0EA0  3001               	movlw	1
  7189  0EA1  00F5               	movwf	??___ftpack
  7190  0EA2  0875               	movf	??___ftpack,w
  7191  0EA3  07F3               	addwf	___ftpack@exp,f
  7192  0EA4  3001               	movlw	1
  7193  0EA5                     u1135:	
  7194  0EA5  36F2               	lsrf	___ftpack@arg+2,f
  7195  0EA6  0CF1               	rrf	___ftpack@arg+1,f
  7196  0EA7  0CF0               	rrf	___ftpack@arg,f
  7197  0EA8  0B89               	decfsz	9,f
  7198  0EA9  2EA5               	goto	u1135
  7199  0EAA                     l1340:	
  7200  0EAA  30FE               	movlw	254
  7201  0EAB  0572               	andwf	___ftpack@arg+2,w
  7202  0EAC  1903               	btfsc	3,2
  7203  0EAD  2EC3               	goto	l395
  7204  0EAE  2EA0               	goto	l1338
  7205  0EAF                     l1342:	
  7206  0EAF  3001               	movlw	1
  7207  0EB0  00F5               	movwf	??___ftpack
  7208  0EB1  0875               	movf	??___ftpack,w
  7209  0EB2  07F3               	addwf	___ftpack@exp,f
  7210  0EB3  3001               	movlw	1
  7211  0EB4  07F0               	addwf	___ftpack@arg,f
  7212  0EB5  3000               	movlw	0
  7213  0EB6  1803               	skipnc
  7214  0EB7  3001               	movlw	1
  7215  0EB8  07F1               	addwf	___ftpack@arg+1,f
  7216  0EB9  3000               	movlw	0
  7217  0EBA  1803               	skipnc
  7218  0EBB  3001               	movlw	1
  7219  0EBC  07F2               	addwf	___ftpack@arg+2,f
  7220  0EBD  3001               	movlw	1
  7221  0EBE                     u1155:	
  7222  0EBE  36F2               	lsrf	___ftpack@arg+2,f
  7223  0EBF  0CF1               	rrf	___ftpack@arg+1,f
  7224  0EC0  0CF0               	rrf	___ftpack@arg,f
  7225  0EC1  0B89               	decfsz	9,f
  7226  0EC2  2EBE               	goto	u1155
  7227  0EC3                     l395:	
  7228  0EC3  30FF               	movlw	255
  7229  0EC4  0572               	andwf	___ftpack@arg+2,w
  7230  0EC5  1903               	btfsc	3,2
  7231  0EC6  2ED0               	goto	l1350
  7232  0EC7  2EAF               	goto	l1342
  7233  0EC8                     l1348:	
  7234  0EC8  3001               	movlw	1
  7235  0EC9  02F3               	subwf	___ftpack@exp,f
  7236  0ECA  3001               	movlw	1
  7237  0ECB                     u1175:	
  7238  0ECB  35F0               	lslf	___ftpack@arg,f
  7239  0ECC  0DF1               	rlf	___ftpack@arg+1,f
  7240  0ECD  0DF2               	rlf	___ftpack@arg+2,f
  7241  0ECE  0B89               	decfsz	9,f
  7242  0ECF  2ECB               	goto	u1175
  7243  0ED0                     l1350:	
  7244  0ED0  1BF1               	btfsc	___ftpack@arg+1,7
  7245  0ED1  2ED6               	goto	l402
  7246  0ED2  3002               	movlw	2
  7247  0ED3  0273               	subwf	___ftpack@exp,w
  7248  0ED4  1803               	skipnc
  7249  0ED5  2EC8               	goto	l1348
  7250  0ED6                     l402:	
  7251  0ED6  1873               	btfsc	___ftpack@exp,0
  7252  0ED7  2EDE               	goto	l403
  7253  0ED8  30FF               	movlw	255
  7254  0ED9  05F0               	andwf	___ftpack@arg,f
  7255  0EDA  307F               	movlw	127
  7256  0EDB  05F1               	andwf	___ftpack@arg+1,f
  7257  0EDC  30FF               	movlw	255
  7258  0EDD  05F2               	andwf	___ftpack@arg+2,f
  7259  0EDE                     l403:	
  7260  0EDE  1003               	clrc
  7261  0EDF  0CF3               	rrf	___ftpack@exp,f
  7262  0EE0  0873               	movf	___ftpack@exp,w
  7263  0EE1  00F5               	movwf	??___ftpack
  7264  0EE2  01F6               	clrf	??___ftpack+1
  7265  0EE3  01F7               	clrf	??___ftpack+2
  7266  0EE4  3010               	movlw	16
  7267  0EE5                     u1215:	
  7268  0EE5  35F5               	lslf	??___ftpack,f
  7269  0EE6  0DF6               	rlf	??___ftpack+1,f
  7270  0EE7  0DF7               	rlf	??___ftpack+2,f
  7271  0EE8  0B89               	decfsz	9,f
  7272  0EE9  2EE5               	goto	u1215
  7273  0EEA  0875               	movf	??___ftpack,w
  7274  0EEB  04F0               	iorwf	___ftpack@arg,f
  7275  0EEC  0876               	movf	??___ftpack+1,w
  7276  0EED  04F1               	iorwf	___ftpack@arg+1,f
  7277  0EEE  0877               	movf	??___ftpack+2,w
  7278  0EEF  04F2               	iorwf	___ftpack@arg+2,f
  7279  0EF0  0874               	movf	___ftpack@sign,w
  7280  0EF1  1903               	btfsc	3,2
  7281  0EF2  0008               	return
  7282  0EF3  17F2               	bsf	___ftpack@arg+2,7
  7283  0EF4  0008               	return
  7284  0EF5                     __end_of___ftpack:	
  7285  007E                     btemp	set	126	;btemp
  7286  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    27
    Data        4
    BSS         35
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     15      54
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> floor@expon(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 15
		 -> sin@coeff_a(CODE[15]), sin@coeff_b(CODE[12]), 


Critical Paths under _main in COMMON

    _SYSTEM_Initialize->_PIN_MANAGER_Initialize
    _Step->___fttol
    _PWM3_LoadDutyValue->___fttol
    _PWM2_LoadDutyValue->___fttol
    _PWM1_LoadDutyValue->___fttol
    _floor->___fttol
    ___altoft->___fttol
    ___lwtoft->___ftpack
    _Generate_Desired->_rand
    _rand->___lmul
    ___ftmul->___lwtoft
    ___ftge->___lwtoft
    ___ftdiv->___lwtoft
    ___awtoft->_rand

Critical Paths under _main in BANK0

    _Step->_PWM1_LoadDutyValue
    _Step->_PWM2_LoadDutyValue
    _Step->_PWM3_LoadDutyValue
    _PWM3_LoadDutyValue->_Heartbeat
    _PWM2_LoadDutyValue->_Heartbeat
    _PWM1_LoadDutyValue->_Heartbeat
    _Heartbeat->_sin
    _sin->___ftsub
    _floor->___ftadd
    _eval_poly->___ftadd
    ___ftsub->___ftdiv
    _Generate_Desired->___ftdiv
    ___ftdiv->_eval_poly
    ___ftadd->___ftmul
    ___awtoft->_rand

Critical Paths under _main in BANK1

    _Go_To_Desired->_Step
    _Step->_PWM1_LoadDutyValue
    _Step->_PWM2_LoadDutyValue
    _Step->_PWM3_LoadDutyValue
    _PWM3_LoadDutyValue->_Heartbeat
    _PWM2_LoadDutyValue->_Heartbeat
    _PWM1_LoadDutyValue->_Heartbeat

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   86917
                   _Generate_Desired
                      _Go_To_Desired
                  _SYSTEM_Initialize
                              _srand
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      75
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      15
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM1_Initialize
                    _PWM2_Initialize
                    _PWM3_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Go_To_Desired                                        0     0      0   72262
                               _Step
                             ___ftge
 ---------------------------------------------------------------------------------
 (2) _Step                                                10    10      0   70668
                                             11 BANK1      4     4      0
                   _Generate_Desired
                          _Heartbeat
                 _PWM1_LoadDutyValue
                 _PWM2_LoadDutyValue
                 _PWM3_LoadDutyValue
                            ___ftadd
                             ___ftge
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (3) _PWM3_LoadDutyValue                                   4     2      2      97
                                             78 BANK0      2     0      2
                                              9 BANK1      2     2      0
                          _Heartbeat (ARG)
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (3) _PWM2_LoadDutyValue                                   4     2      2      97
                                             78 BANK0      2     0      2
                                              9 BANK1      2     2      0
                          _Heartbeat (ARG)
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (3) _PWM1_LoadDutyValue                                   4     2      2      97
                                             78 BANK0      2     0      2
                                              9 BANK1      2     2      0
                          _Heartbeat (ARG)
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (3) _Heartbeat                                           12     9      3   47737
                                             75 BANK0      3     0      3
                                              0 BANK1      9     9      0
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftsub
                           ___lwtoft
                                _sin
 ---------------------------------------------------------------------------------
 (4) _sin                                                 14    11      3   33417
                                             61 BANK0     14    11      3
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                           ___lwtoft (ARG)
                          _eval_poly
                              _floor
 ---------------------------------------------------------------------------------
 (5) _floor                                                9     6      3    8549
                                             29 BANK0      9     6      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (6) _frexp                                                6     2      4     314
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     464
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___altoft                                             8     4      4    1976
                                              0 BANK0      8     4      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (5) _eval_poly                                           10     3      7    7974
                                             29 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     304
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___ftsub                                              6     0      6    4282
                                             55 BANK0      6     0      6
                            ___ftadd
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
                              _floor (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             4     1      3    1913
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) _Generate_Desired                                    15    15      0   14565
                                             55 BANK0     15    15      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                               _rand
 ---------------------------------------------------------------------------------
 (4) _rand                                                 7     5      2     198
                                             12 COMMON     2     0      2
                                              0 BANK0      5     5      0
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     198
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___ftneg                                              3     0      3     403
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (6) ___ftmul                                             16    10      6    3277
                                              0 BANK0     16    10      6
                           ___ftpack
                           ___ftpack (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6    1594
                                              0 BANK0      9     3      6
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftdiv                                             16    10      6    2913
                                             39 BANK0     16    10      6
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3897
                                             16 BANK0     13     7      6
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awtoft                                             6     3      3    2035
                                              5 BANK0      6     3      3
                           ___ftpack
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1785
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Generate_Desired
     ___awtoft
       ___ftpack
       _rand (ARG)
         ___lmul
     ___ftadd
       ___ftmul (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
     ___ftdiv
       ___ftadd (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftmul (ARG)
         ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _eval_poly (ARG)
         ___ftadd
           ___ftmul (ARG)
             ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftmul
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___wmul
     ___ftge
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftneg
     _rand
       ___lmul
   _Go_To_Desired
     _Step
       _Generate_Desired
         ___awtoft
           ___ftpack
           _rand (ARG)
             ___lmul
         ___ftadd
           ___ftmul (ARG)
             ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftdiv
           ___ftadd (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _eval_poly (ARG)
             ___ftadd
               ___ftmul (ARG)
                 ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftmul
               ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___wmul
         ___ftge
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg
         _rand
           ___lmul
       _Heartbeat
         ___ftdiv
           ___ftadd (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _eval_poly (ARG)
             ___ftadd
               ___ftmul (ARG)
                 ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftmul
               ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___wmul
         ___ftge
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftsub
           ___ftadd
             ___ftmul (ARG)
               ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftdiv (ARG)
             ___ftadd (ARG)
               ___ftmul (ARG)
                 ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             _eval_poly (ARG)
               ___ftadd
                 ___ftmul (ARG)
                   ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftmul
                 ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___wmul
           ___ftmul (ARG)
             ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
           _floor (ARG)
             ___altoft
               ___ftpack
               ___fttol (ARG)
             ___ftadd
               ___ftmul (ARG)
                 ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftge
               ___lwtoft (ARG)
                 ___ftpack
             ___fttol
             _frexp
         ___lwtoft
           ___ftpack
         _sin
           ___ftadd
             ___ftmul (ARG)
               ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftdiv
             ___ftadd (ARG)
               ___ftmul (ARG)
                 ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             _eval_poly (ARG)
               ___ftadd
                 ___ftmul (ARG)
                   ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftmul
                 ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___wmul
           ___ftge
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul
             ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg
           ___ftsub
             ___ftadd
               ___ftmul (ARG)
                 ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftdiv (ARG)
               ___ftadd (ARG)
                 ___ftmul (ARG)
                   ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftmul (ARG)
                 ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               _eval_poly (ARG)
                 ___ftadd
                   ___ftmul (ARG)
                     ___ftpack
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                 ___ftmul
                   ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                 ___wmul
             ___ftmul (ARG)
               ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
             _floor (ARG)
               ___altoft
                 ___ftpack
                 ___fttol (ARG)
               ___ftadd
                 ___ftmul (ARG)
                   ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftge
                 ___lwtoft (ARG)
                   ___ftpack
               ___fttol
               _frexp
           ___lwtoft (ARG)
             ___ftpack
           _eval_poly (ARG)
             ___ftadd
               ___ftmul (ARG)
                 ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftmul
               ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___wmul
           _floor (ARG)
             ___altoft
               ___ftpack
               ___fttol (ARG)
             ___ftadd
               ___ftmul (ARG)
                 ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftge
               ___lwtoft (ARG)
                 ___ftpack
             ___fttol
             _frexp
       _PWM1_LoadDutyValue
         _Heartbeat (ARG)
           ___ftdiv
             ___ftadd (ARG)
               ___ftmul (ARG)
                 ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             _eval_poly (ARG)
               ___ftadd
                 ___ftmul (ARG)
                   ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftmul
                 ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___wmul
           ___ftge
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul
             ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftsub
             ___ftadd
               ___ftmul (ARG)
                 ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftdiv (ARG)
               ___ftadd (ARG)
                 ___ftmul (ARG)
                   ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftmul (ARG)
                 ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               _eval_poly (ARG)
                 ___ftadd
                   ___ftmul (ARG)
                     ___ftpack
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                 ___ftmul
                   ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                 ___wmul
             ___ftmul (ARG)
               ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
             _floor (ARG)
               ___altoft
                 ___ftpack
                 ___fttol (ARG)
               ___ftadd
                 ___ftmul (ARG)
                   ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftge
                 ___lwtoft (ARG)
                   ___ftpack
               ___fttol
               _frexp
           ___lwtoft
             ___ftpack
           _sin
             ___ftadd
               ___ftmul (ARG)
                 ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftdiv
               ___ftadd (ARG)
                 ___ftmul (ARG)
                   ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftmul (ARG)
                 ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               _eval_poly (ARG)
                 ___ftadd
                   ___ftmul (ARG)
                     ___ftpack
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                 ___ftmul
                   ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                 ___wmul
             ___ftge
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul
               ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg
             ___ftsub
               ___ftadd
                 ___ftmul (ARG)
                   ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftdiv (ARG)
                 ___ftadd (ARG)
                   ___ftmul (ARG)
                     ___ftpack
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                 ___ftmul (ARG)
                   ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 _eval_poly (ARG)
                   ___ftadd
                     ___ftmul (ARG)
                       ___ftpack
                       ___ftpack (ARG)
                       ___lwtoft (ARG)
                         ___ftpack
                     ___ftneg (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                   ___ftmul
                     ___ftpack
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                   ___wmul
               ___ftmul (ARG)
                 ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
               _floor (ARG)
                 ___altoft
                   ___ftpack
                   ___fttol (ARG)
                 ___ftadd
                   ___ftmul (ARG)
                     ___ftpack
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                 ___ftge
                   ___lwtoft (ARG)
                     ___ftpack
                 ___fttol
                 _frexp
             ___lwtoft (ARG)
               ___ftpack
             _eval_poly (ARG)
               ___ftadd
                 ___ftmul (ARG)
                   ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftmul
                 ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___wmul
             _floor (ARG)
               ___altoft
                 ___ftpack
                 ___fttol (ARG)
               ___ftadd
                 ___ftmul (ARG)
                   ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftge
                 ___lwtoft (ARG)
                   ___ftpack
               ___fttol
               _frexp
         ___fttol (ARG)
       _PWM2_LoadDutyValue
         _Heartbeat (ARG)
           ___ftdiv
             ___ftadd (ARG)
               ___ftmul (ARG)
                 ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             _eval_poly (ARG)
               ___ftadd
                 ___ftmul (ARG)
                   ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftmul
                 ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___wmul
           ___ftge
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul
             ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftsub
             ___ftadd
               ___ftmul (ARG)
                 ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftdiv (ARG)
               ___ftadd (ARG)
                 ___ftmul (ARG)
                   ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftmul (ARG)
                 ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               _eval_poly (ARG)
                 ___ftadd
                   ___ftmul (ARG)
                     ___ftpack
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                 ___ftmul
                   ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                 ___wmul
             ___ftmul (ARG)
               ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
             _floor (ARG)
               ___altoft
                 ___ftpack
                 ___fttol (ARG)
               ___ftadd
                 ___ftmul (ARG)
                   ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftge
                 ___lwtoft (ARG)
                   ___ftpack
               ___fttol
               _frexp
           ___lwtoft
             ___ftpack
           _sin
             ___ftadd
               ___ftmul (ARG)
                 ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftdiv
               ___ftadd (ARG)
                 ___ftmul (ARG)
                   ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftmul (ARG)
                 ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               _eval_poly (ARG)
                 ___ftadd
                   ___ftmul (ARG)
                     ___ftpack
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                 ___ftmul
                   ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                 ___wmul
             ___ftge
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul
               ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg
             ___ftsub
               ___ftadd
                 ___ftmul (ARG)
                   ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftdiv (ARG)
                 ___ftadd (ARG)
                   ___ftmul (ARG)
                     ___ftpack
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                 ___ftmul (ARG)
                   ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 _eval_poly (ARG)
                   ___ftadd
                     ___ftmul (ARG)
                       ___ftpack
                       ___ftpack (ARG)
                       ___lwtoft (ARG)
                         ___ftpack
                     ___ftneg (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                   ___ftmul
                     ___ftpack
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                   ___wmul
               ___ftmul (ARG)
                 ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
               _floor (ARG)
                 ___altoft
                   ___ftpack
                   ___fttol (ARG)
                 ___ftadd
                   ___ftmul (ARG)
                     ___ftpack
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                 ___ftge
                   ___lwtoft (ARG)
                     ___ftpack
                 ___fttol
                 _frexp
             ___lwtoft (ARG)
               ___ftpack
             _eval_poly (ARG)
               ___ftadd
                 ___ftmul (ARG)
                   ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftmul
                 ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___wmul
             _floor (ARG)
               ___altoft
                 ___ftpack
                 ___fttol (ARG)
               ___ftadd
                 ___ftmul (ARG)
                   ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftge
                 ___lwtoft (ARG)
                   ___ftpack
               ___fttol
               _frexp
         ___fttol (ARG)
       _PWM3_LoadDutyValue
         _Heartbeat (ARG)
           ___ftdiv
             ___ftadd (ARG)
               ___ftmul (ARG)
                 ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             _eval_poly (ARG)
               ___ftadd
                 ___ftmul (ARG)
                   ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftmul
                 ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___wmul
           ___ftge
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul
             ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftsub
             ___ftadd
               ___ftmul (ARG)
                 ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftdiv (ARG)
               ___ftadd (ARG)
                 ___ftmul (ARG)
                   ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftmul (ARG)
                 ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               _eval_poly (ARG)
                 ___ftadd
                   ___ftmul (ARG)
                     ___ftpack
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                 ___ftmul
                   ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                 ___wmul
             ___ftmul (ARG)
               ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___lwtoft (ARG)
               ___ftpack
             _floor (ARG)
               ___altoft
                 ___ftpack
                 ___fttol (ARG)
               ___ftadd
                 ___ftmul (ARG)
                   ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftge
                 ___lwtoft (ARG)
                   ___ftpack
               ___fttol
               _frexp
           ___lwtoft
             ___ftpack
           _sin
             ___ftadd
               ___ftmul (ARG)
                 ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftdiv
               ___ftadd (ARG)
                 ___ftmul (ARG)
                   ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftmul (ARG)
                 ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               _eval_poly (ARG)
                 ___ftadd
                   ___ftmul (ARG)
                     ___ftpack
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                 ___ftmul
                   ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                 ___wmul
             ___ftge
               ___lwtoft (ARG)
                 ___ftpack
             ___ftmul
               ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg
             ___ftsub
               ___ftadd
                 ___ftmul (ARG)
                   ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftdiv (ARG)
                 ___ftadd (ARG)
                   ___ftmul (ARG)
                     ___ftpack
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                 ___ftmul (ARG)
                   ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 _eval_poly (ARG)
                   ___ftadd
                     ___ftmul (ARG)
                       ___ftpack
                       ___ftpack (ARG)
                       ___lwtoft (ARG)
                         ___ftpack
                     ___ftneg (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                   ___ftmul
                     ___ftpack
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                   ___wmul
               ___ftmul (ARG)
                 ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
               _floor (ARG)
                 ___altoft
                   ___ftpack
                   ___fttol (ARG)
                 ___ftadd
                   ___ftmul (ARG)
                     ___ftpack
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                 ___ftge
                   ___lwtoft (ARG)
                     ___ftpack
                 ___fttol
                 _frexp
             ___lwtoft (ARG)
               ___ftpack
             _eval_poly (ARG)
               ___ftadd
                 ___ftmul (ARG)
                   ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftmul
                 ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
               ___wmul
             _floor (ARG)
               ___altoft
                 ___ftpack
                 ___fttol (ARG)
               ___ftadd
                 ___ftmul (ARG)
                   ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftge
                 ___lwtoft (ARG)
                   ___ftpack
               ___fttol
               _frexp
         ___fttol (ARG)
       ___ftadd
         ___ftmul (ARG)
           ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftge
         ___lwtoft (ARG)
           ___ftpack
       ___fttol
       ___lwtoft
         ___ftpack
     ___ftge
       ___lwtoft (ARG)
         ___ftpack
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM1_Initialize
     _PWM2_Initialize
     _PWM3_Initialize
     _TMR2_Initialize
       _TMR2_StartTimer
     _WDT_Initialize
   _srand

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      94       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     50      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      F      36       8       67.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      94      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Sun Jun 04 19:44:48 2017

                   ___altoft@exp 0026                      __CFG_CP$OFF 0000                    ___altoft@sign 0027  
            ___wmul@multiplicand 0072                     ___ftadd@exp1 003C                     ___ftadd@exp2 003B  
                    __CFG_LVP$ON 0000                     ___ftadd@sign 003A                              l402 0ED6  
                            l234 0C1E                              l403 0EDE                              l227 000E  
                            l426 034E                              l609 05AD                              l395 0EC3  
                            l486 0FE6                              _GIE 005F                              _PR2 001B  
                            _sin 04D6                  _TMR2_Initialize 0BE5                     __CFG_BORV$LO 0000  
                            wreg 0009                     __CFG_IESO$ON 0000                     ___ftdiv@cntr 0051  
                   ___ftdiv@sign 0056                             l1402 02DE                             l1340 0EAA  
                           l1420 0307                             l1350 0ED0                             l1342 0EAF  
                           l1334 0E99                             l1430 0329                             l1510 01A0  
                           l1440 034A                             l1432 032D                             l1408 02ED  
                           l1338 0EA0                             l1426 031A                             l1610 009E  
                           l1522 01BC                             l1506 0198                             l1348 0EC8  
                           l1444 0360                             l1428 0324                             l1364 0C18  
                           l1438 0340                             l1630 00F5                             l1470 0D5F  
                           l1518 01B4                             l1448 0372                             l1616 00B4  
                           l1800 06AA                             l1720 057A                             l1458 038D  
                           l1466 0D49                             l1386 0D83                             l1570 0FF7  
                           l1538 0F92                             l1388 0D93                             l1564 0FDD  
                           l1556 0FC2                             l1580 0D09                             l1708 04FC  
                           l1750 0CB7                             l1398 02D7                             l1638 010E  
                           l1494 015D                             l1566 0FE9                             l1558 0FD0  
                           l1488 0147                             l1592 0CD6                             l1672 0F1F  
                           l1840 0031                             l1658 0C56                             l1842 004F  
                           l1596 0CE0                             l1676 0F27                             l1772 0216  
                           l1828 04C7                             l1686 0F72                             l1838 002E  
                           l1696 0E8A                             l1768 01FD                             l1848 0066  
                           ?_sin 005D          __end_of_PWM1_Initialize 0BCC                             u1020 0E2F  
                           u2000 0576                             u2010 0577                             u1215 0EE5  
                           u1135 0EA5                             u1155 0EBE                             u2045 0DE1  
                           u1245 0C1F                             _LATA 010C                             _LATB 010D  
                           u1175 0ECB                             u1255 0C24                             _LATC 010E  
                           u1425 031B                             u2065 0C81                             u2075 0CA1  
                           u1285 0D88                             u2085 0C46                             u1455 032E  
                           u1615 01A1                             u1625 01A7                             u1395 0308  
                           u2187 049F                             u1485 0341                             u1805 0CE1  
                           u1725 0FC3                             u1655 01BD                             u1815 0CE8  
                           u1665 01C3                             u1585 0169                             u1595 0179  
                           u1755 0FDE                             u1855 00C6                             u1695 0F99  
                           u1865 00D6                             u1875 00F6                             u1885 0105  
                           u1895 010F                             _TMR2 001A                             _WPUA 020C  
                           _WPUB 020D                             _WPUC 020E                     __CFG_WRT$OFF 0000  
                           _Step 03A5                             _main 0004                     ___ftpack@arg 0070  
                           _rand 0DAB                     ___ftpack@exp 0073                             fsr0h 0005  
                           fsr1h 0007                             indf0 0000                             fsr0l 0004  
                           indf1 0001                             fsr1l 0006                             btemp 007E  
                           sin@f 005D                             sin@y 0061                             start 0002  
          Generate_Desired@rand1 005A            Generate_Desired@rand2 005D            Generate_Desired@rand3 0060  
                  __CFG_MCLRE$ON 0000                     ___ftmul@cntr 002E                     ___ftmul@sign 002F  
            _timeSinceLastUpdate 00BF                     ___fttol@exp1 007D                     ___fttol@lval 0079  
                          ??_sin 0060          __end_of_PWM2_Initialize 0BD4                    __CFG_PLLEN$ON 0000  
 __size_of_OSCILLATOR_Initialize 0006    __end_of_OSCILLATOR_Initialize 0BB6                            ?_Step 0070  
                          ?_main 0070                            ?_rand 007C                  __end_of___ftadd 03A5  
                  __CFG_WDTE$OFF 0000                  __end_of___ftdiv 0130                  __end_of___ftneg 0BC4  
                __end_of___ftmul 01E4                  __end_of___ftsub 0C6C                  __end_of___fttol 1000  
                          _T2CON 001C                            _TRISA 008C                            _TRISB 008D  
                          _TRISC 008E               __end_ofsin@coeff_a 080F               __end_ofsin@coeff_b 081B  
            ___lmul@multiplicand 0074                   __CFG_FCMEN$OFF 0000                    ___awtoft@sign 002A  
                 _WDT_Initialize 0BA8                            _floor 0EF5                            _frexp 0CFD  
                          _errno 00BB                            _randx 00D2                    ___ftpack@sign 0074  
                          _srand 0BD4          __end_of_PWM3_Initialize 0BE5                   __CFG_BOREN$OFF 0000  
                          sin@x2 0067                            status 0003                            wtemp0 007E  
                _TMR2_StartTimer 0BA5            __end_of_Go_To_Desired 0087                  __initialization 07E5  
                   __end_of_Step 04D6                     __end_of_main 0015                     __end_of_rand 0DEE  
        __end_of_TMR2_Initialize 0BEE                   __CFG_LPBOR$OFF 0000                           ??_Step 00CE  
                         ??_main 007E                    ___fttol@sign1 0078                           ??_rand 0020  
             __size_of_Heartbeat 00CB           __end_of_WDT_Initialize 0BAC                           ?_floor 003D  
                         ?_frexp 0070                 __end_of___altoft 0DAB                           _CCPR1H 0292  
                         _CCPR2H 0299                           _CCPR1L 0291                           _CCPR2L 0298  
                         ?_srand 0070                   __CFG_ZCDDIS$ON 0000                 __end_of___awtoft 0CCE  
                         _ANSELA 018C                           _ANSELB 018D                           _ANSELC 018E  
               __end_of___ftpack 0EF5                 ?_PWM1_Initialize 0070                           _ODCONA 028C  
                         _ODCONB 028D                           _ODCONC 028E                 __end_of___lwtoft 0C01  
                         _OSCCON 0099                           _WDTCON 0097                   __CFG_PWRTE$OFF 0000  
                     _Pwm_1_Step 00B2                       _Pwm_2_Step 00A9                       _Pwm_3_Step 00A0  
                         ___ftge 0D32                           ___lmul 0CCE      __size_of_PWM3_LoadDutyValue 001D  
                         ___wmul 0C16                        ??___ftadd 0036                   __CFG_STVREN$ON 0000  
                      ??___ftdiv 004D                        ??___ftneg 0073                        ??___ftmul 0026  
                      ??___ftsub 007E                        ??___fttol 0074                 ?_PWM2_Initialize 0070  
           _Generate_Desired$767 0057                           floor@i 0041                           floor@x 003D  
          ___ftmul@f3_as_product 002B                           sin@sgn 006A                  ?_WDT_Initialize 0070  
                         srand@x 0070          __end_of_TMR2_StartTimer 0BA8                 ?_PWM3_Initialize 0070  
              _SYSTEM_Initialize 0C01          __end_of__initialization 07FD                       ___altoft@c 0020  
                     ___ftadd@f1 0030                       ___ftadd@f2 0033                       ___ftge@ff1 0020  
                     ___ftge@ff2 0023               ?_SYSTEM_Initialize 0070       __end_of_PWM2_LoadDutyValue 0CAC  
                   eval_poly@res 0044                       ___ftdiv@f1 004A                       ___ftdiv@f2 0047  
                     ___ftdiv@f3 0052                       ___ftneg@f1 0070      PWM1_LoadDutyValue@dutyValue 006E  
                     ___awtoft@c 0025                __end_of_Heartbeat 02AF                       ___ftmul@f1 0020  
                     ___ftmul@f2 0023                       ___ftsub@f1 005A                       ___ftsub@f2 0057  
                     ___fttol@f1 0070                ?_Generate_Desired 0070                   __pcstackCOMMON 0070  
                   __pidataBANK1 0BAC              ??_SYSTEM_Initialize 0071                    __end_of_floor 0F7A  
                  __end_of_frexp 0D32               ??_Generate_Desired 007E                    __end_of_srand 0BDC  
             _PWM1_LoadDutyValue 0C6C                 ?_TMR2_Initialize 0070                       ___lwtoft@c 0078  
                 _OPTION_REGbits 0095              ?_PWM1_LoadDutyValue 006E                          ??_floor 0040  
                        ??_frexp 0074        __end_of_SYSTEM_Initialize 0C16                          ??_srand 0072  
                     __pbssBANK1 00A0               __size_of_eval_poly 0060             ??_PWM1_LoadDutyValue 00CC  
                     __pmaintext 0004                          ?___ftge 0020                          ?___lmul 0070  
                        ?___wmul 0070                  __CFG_PPS1WAY$ON 0000                          _CCP1CON 0293  
                        _CCP2CON 029A                        ?___altoft 0020                   ___lmul@product 0078  
                      ?___awtoft 0025                        ?___ftpack 0070                        ?___lwtoft 0078  
                        _OSCSTAT 009A                          _OSCTUNE 0098                          _PWM3DCH 0618  
                        _PWM3DCL 0617                          _PWM3CON 0619                          _PPSLOCK 0E0F  
               ?_TMR2_StartTimer 0070                  __size_of___ftge 003C                  __size_of___lmul 002F  
                        ___ftadd 02AF                          ___ftdiv 0087                          ___ftneg 0BBC  
                __size_of___wmul 001B                          ___ftmul 0130                          ___ftsub 0C4E  
                        ___fttol 0F7A                       ??___altoft 0024                       ??___awtoft 0028  
                     ??___ftpack 0075                __end_of_eval_poly 0E91                          __ptext1 0BD4  
                        __ptext2 0C01                          __ptext3 0BA8                          __ptext4 0BE5  
                        __ptext5 0BA5                          __ptext6 0BDC                          __ptext7 0BCC  
                        __ptext8 0BC4                          __ptext9 0DEE                          _sin$769 0064  
                     ??___lwtoft 007B            _OSCILLATOR_Initialize 0BB0                        _T2CONbits 001C  
                   __size_of_sin 0157         ??_PIN_MANAGER_Initialize 0070       __size_of_SYSTEM_Initialize 0015  
                        clrloop0 0BB7             end_of_initialization 07FD                  Heartbeat@SetVal 006B  
                   __pstringtext 0800                 ??_WDT_Initialize 0070                 __CFG_FOSC$INTOSC 0000  
         __size_of_Go_To_Desired 0072              Generate_Desired@sum 0063                      ___ftdiv@exp 0055  
     __end_of_PWM3_LoadDutyValue 0C4E         __size_of_PWM1_Initialize 0008                      ___ftmul@exp 002A  
                      _Heartbeat 01E4                   __end_of___ftge 0D6E                   __end_of___lmul 0CFD  
                 __end_of___wmul 0C31               _PWM2_LoadDutyValue 0C8C                    _Pwm_1_Desired 00B8  
         ?_OSCILLATOR_Initialize 0070                    _Pwm_2_Desired 00AF                       floor@expon 0044  
                  _Pwm_1_Current 00B5                    _Pwm_3_Desired 00A6              start_initialization 07E5  
                  _Pwm_2_Current 00AC                       eval_poly@d 0040                       eval_poly@n 0042  
                     eval_poly@x 003D        __size_of_Generate_Desired 01B8         __size_of_PWM2_Initialize 0008  
            ?_PWM2_LoadDutyValue 006E  __size_of_PIN_MANAGER_Initialize 0043                    _Pwm_3_Current 00A3  
                    __end_of_sin 062D                       frexp@value 0070             ??_PWM2_LoadDutyValue 00CC  
       __size_of_PWM3_Initialize 0009      PWM2_LoadDutyValue@dutyValue 006E                         ??___ftge 0026  
                  _Go_To_Desired 0015                         ??___lmul 0078                         ??___wmul 0074  
                    _CCPTMRSbits 029E                       ?_Heartbeat 006B                      __pdataBANK1 00D2  
              __size_of___altoft 003D                __size_of___awtoft 0022                __size_of___ftpack 0064  
                      ___latbits 0001                __size_of___lwtoft 0013                    __pcstackBANK0 0020  
                  __pcstackBANK1 00C3         __size_of_TMR2_Initialize 0009                       sin@coeff_a 0800  
                     sin@coeff_b 080F      __size_of_PWM1_LoadDutyValue 0020           _PIN_MANAGER_Initialize 0DEE  
                  _Heartbeat$764 00C3                    _Heartbeat$765 00C6                    _Heartbeat$766 00C9  
                 ?_Go_To_Desired 0070                         ?___ftadd 0030                         ?___ftdiv 0047  
                       ?___ftneg 0070                         ?___ftmul 0020                         ?___ftsub 0057  
                       ?___fttol 0070                        _heartbeat 00BD                ??_PWM1_Initialize 0070  
                      _eval_poly 0E31                   __size_of_floor 0085                   __size_of_frexp 0035  
                 __size_of_srand 0008                ??_PWM2_Initialize 0070                   ___wmul@product 0074  
                      clear_ram0 0BB6         __size_of_TMR2_StartTimer 0003                         _PIR1bits 0011  
                    ??_Heartbeat 007E                ??_PWM3_Initialize 0070                ___wmul@multiplier 0070  
                     ?_eval_poly 003D                 _Generate_Desired 062D                ___lmul@multiplier 0070  
              ??_TMR2_Initialize 0070                        frexp@eptr 0073                  ??_Go_To_Desired 007E  
                       _Step$768 00CF          ??_OSCILLATOR_Initialize 0070                 __size_of___ftadd 00F6  
               __size_of___ftdiv 00A9                 __size_of___ftneg 0008                         ___altoft 0D6E  
               __size_of___ftmul 00B4                 __size_of___ftsub 001E                 __size_of___fttol 0086  
                       ___awtoft 0CAC                         ___ftpack 0E91               _PWM3_LoadDutyValue 0C31  
                       ___lwtoft 0BEE                         __ptext10 0BB0                         __ptext11 0015  
                       __ptext20 0F7A                         __ptext12 03A5                         __ptext21 0D6E  
                       __ptext13 0C31                         __ptext30 0130                         __ptext22 0E31  
                       __ptext14 0C8C                         __ptext31 0D32                         __ptext23 0C16  
                       __ptext15 0C6C                         __ptext32 0087                         __ptext24 0C4E  
                       __ptext16 01E4                         __ptext33 02AF                         __ptext25 0BEE  
                       __ptext17 04D6                         __ptext34 0CAC                         __ptext26 062D  
                       __ptext18 0EF5                         __ptext35 0E91                         __ptext27 0DAB  
                       __ptext19 0CFD                         __ptext28 0CCE                         __ptext29 0BBC  
            ?_PWM3_LoadDutyValue 006E                    __size_of_Step 0131                    __size_of_main 0011  
                  __size_of_rand 0043                       _RA0PPSbits 0E90                       _RA1PPSbits 0E91  
                     _RA2PPSbits 0E92             ??_PWM3_LoadDutyValue 00CC                ??_TMR2_StartTimer 0070  
    PIN_MANAGER_Initialize@state 0070                      ??_eval_poly 007C          __size_of_WDT_Initialize 0004  
        ?_PIN_MANAGER_Initialize 0070                __CFG_CLKOUTEN$OFF 0000                      _PPSLOCKbits 0E0F  
                _PWM1_Initialize 0BC4      __size_of_PWM2_LoadDutyValue 0020      PWM3_LoadDutyValue@dutyValue 006E  
                _PWM2_Initialize 0BCC   __end_of_PIN_MANAGER_Initialize 0E31       __end_of_PWM1_LoadDutyValue 0C8C  
          _TMR2_InterruptHandler 00C1                  _PWM3_Initialize 0BDC         __end_of_Generate_Desired 07E5  
